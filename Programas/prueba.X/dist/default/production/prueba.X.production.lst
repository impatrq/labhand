

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Thu Nov 26 16:09:57 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F4550 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     
    63                           	psect	nvCOMRAM
    64  000013                     __pnvCOMRAM:
    65                           	callstack 0
    66  000013                     _servo:
    67                           	callstack 0
    68  000013                     	ds	2
    69  0000                     _TMR0	set	4054
    70  0000                     _TRISCbits	set	3988
    71  0000                     _TRISAbits	set	3986
    72  0000                     _OSCCON	set	4051
    73  0000                     _INTCONbits	set	4082
    74  0000                     _PORTCbits	set	3970
    75  0000                     _TMR0L	set	4054
    76  0000                     _T0CON	set	4053
    77  0000                     _INTCON	set	4082
    78  0000                     _ADRESH	set	4036
    79  0000                     _ADCON0bits	set	4034
    80  0000                     _ADCON2	set	4032
    81  0000                     _ADCON0	set	4034
    82  0000                     _ADCON1	set	4033
    83                           
    84                           ; #config settings
    85                           
    86                           	psect	cinit
    87  000356                     __pcinit:
    88                           	callstack 0
    89  000356                     start_initialization:
    90                           	callstack 0
    91  000356                     __initialization:
    92                           	callstack 0
    93  000356                     end_of_initialization:
    94                           	callstack 0
    95  000356                     __end_of__initialization:
    96                           	callstack 0
    97  000356  9015               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    98  000358  9215               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    99  00035A  0100               	movlb	0
   100  00035C  EF2F  F001         	goto	_main	;jump to C main() function
   101                           
   102                           	psect	cstackCOMRAM
   103  000001                     __pcstackCOMRAM:
   104                           	callstack 0
   105  000001                     ?i2___wmul:
   106                           	callstack 0
   107  000001                     ?i2___awdiv:
   108                           	callstack 0
   109  000001                     i2___wmul@multiplier:
   110                           	callstack 0
   111  000001                     i2___awdiv@dividend:
   112                           	callstack 0
   113                           
   114                           ; 2 bytes @ 0x0
   115  000001                     	ds	2
   116  000003                     i2___wmul@multiplicand:
   117                           	callstack 0
   118  000003                     i2___awdiv@divisor:
   119                           	callstack 0
   120                           
   121                           ; 2 bytes @ 0x2
   122  000003                     	ds	2
   123  000005                     i2___awdiv@counter:
   124                           	callstack 0
   125  000005                     i2___wmul@product:
   126                           	callstack 0
   127                           
   128                           ; 2 bytes @ 0x4
   129  000005                     	ds	1
   130  000006                     i2___awdiv@sign:
   131                           	callstack 0
   132                           
   133                           ; 1 bytes @ 0x5
   134  000006                     	ds	1
   135  000007                     i2___awdiv@quotient:
   136                           	callstack 0
   137                           
   138                           ; 2 bytes @ 0x6
   139  000007                     	ds	2
   140  000009                     ??_Interrupciones:
   141  000009                     
   142                           ; 1 bytes @ 0x8
   143  000009                     	ds	2
   144  00000B                     ?_getCAD0:
   145                           	callstack 0
   146  00000B                     ?___wmul:
   147                           	callstack 0
   148  00000B                     ?___awdiv:
   149                           	callstack 0
   150  00000B                     ___wmul@multiplier:
   151                           	callstack 0
   152  00000B                     ___awdiv@dividend:
   153                           	callstack 0
   154                           
   155                           ; 2 bytes @ 0xA
   156  00000B                     	ds	2
   157  00000D                     ___wmul@multiplicand:
   158                           	callstack 0
   159  00000D                     ___awdiv@divisor:
   160                           	callstack 0
   161                           
   162                           ; 2 bytes @ 0xC
   163  00000D                     	ds	2
   164  00000F                     ___awdiv@counter:
   165                           	callstack 0
   166  00000F                     ___wmul@product:
   167                           	callstack 0
   168                           
   169                           ; 2 bytes @ 0xE
   170  00000F                     	ds	1
   171  000010                     ___awdiv@sign:
   172                           	callstack 0
   173                           
   174                           ; 1 bytes @ 0xF
   175  000010                     	ds	1
   176  000011                     ___awdiv@quotient:
   177                           	callstack 0
   178                           
   179                           ; 2 bytes @ 0x10
   180  000011                     	ds	2
   181  000013                     
   182                           ; 1 bytes @ 0x12
   183 ;;
   184 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   185 ;;
   186 ;; *************** function _main *****************
   187 ;; Defined at:
   188 ;;		line 57 in file "prueba.c"
   189 ;; Parameters:    Size  Location     Type
   190 ;;		None
   191 ;; Auto vars:     Size  Location     Type
   192 ;;		None
   193 ;; Return value:  Size  Location     Type
   194 ;;                  1    wreg      void 
   195 ;; Registers used:
   196 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   197 ;; Tracked objects:
   198 ;;		On entry : 0/0
   199 ;;		On exit  : 0/0
   200 ;;		Unchanged: 0/0
   201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   202 ;;      Params:         0       0       0       0       0       0       0       0       0
   203 ;;      Locals:         0       0       0       0       0       0       0       0       0
   204 ;;      Temps:          0       0       0       0       0       0       0       0       0
   205 ;;      Totals:         0       0       0       0       0       0       0       0       0
   206 ;;Total ram usage:        0 bytes
   207 ;; Hardware stack levels required when called:    7
   208 ;; This function calls:
   209 ;;		_getCAD0
   210 ;;		_servocontrol
   211 ;; This function is called by:
   212 ;;		Startup code after reset
   213 ;; This function uses a non-reentrant model
   214 ;;
   215                           
   216                           	psect	text0
   217  00025E                     __ptext0:
   218                           	callstack 0
   219  00025E                     _main:
   220                           	callstack 24
   221  00025E  0E70               	movlw	112
   222  000260  6ED3               	movwf	211,c	;volatile
   223  000262  8092               	bsf	146,0,c	;volatile
   224  000264  9494               	bcf	148,2,c	;volatile
   225  000266  0E00               	movlw	0
   226  000268  6E14               	movwf	(_servo+1)^0,c
   227  00026A  0E80               	movlw	128
   228  00026C  6E13               	movwf	_servo^0,c
   229  00026E  EC7C  F001         	call	_servocontrol	;wreg free
   230  000272                     l1062:
   231  000272  EC56  F001         	call	_getCAD0	;wreg free
   232  000276  C00B  F013         	movff	?_getCAD0,_servo
   233  00027A  C00C  F014         	movff	?_getCAD0+1,_servo+1
   234  00027E  EF39  F001         	goto	l1062
   235  000282  EF07  F000         	goto	start
   236  000286                     __end_of_main:
   237                           	callstack 0
   238                           
   239 ;; *************** function _servocontrol *****************
   240 ;; Defined at:
   241 ;;		line 41 in file "prueba.c"
   242 ;; Parameters:    Size  Location     Type
   243 ;;		None
   244 ;; Auto vars:     Size  Location     Type
   245 ;;		None
   246 ;; Return value:  Size  Location     Type
   247 ;;                  1    wreg      void 
   248 ;; Registers used:
   249 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   250 ;; Tracked objects:
   251 ;;		On entry : 0/0
   252 ;;		On exit  : 0/0
   253 ;;		Unchanged: 0/0
   254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   255 ;;      Params:         0       0       0       0       0       0       0       0       0
   256 ;;      Locals:         0       0       0       0       0       0       0       0       0
   257 ;;      Temps:          0       0       0       0       0       0       0       0       0
   258 ;;      Totals:         0       0       0       0       0       0       0       0       0
   259 ;;Total ram usage:        0 bytes
   260 ;; Hardware stack levels used:    1
   261 ;; Hardware stack levels required when called:    6
   262 ;; This function calls:
   263 ;;		_T0_servoOff
   264 ;;		_T0_servoOn
   265 ;; This function is called by:
   266 ;;		_main
   267 ;; This function uses a non-reentrant model
   268 ;;
   269                           
   270                           	psect	text1
   271  0002F8                     __ptext1:
   272                           	callstack 0
   273  0002F8                     _servocontrol:
   274                           	callstack 24
   275  0002F8                     
   276                           ;prueba.c: 42: }
   277  0002F8  A482               	btfss	130,2,c	;volatile
   278  0002FA  EF81  F001         	goto	u291
   279  0002FE  EF83  F001         	goto	u290
   280  000302                     u291:
   281  000302  EF88  F001         	goto	l45
   282  000306                     u290:
   283  000306                     
   284                           ;prueba.c: 43: 
   285  000306  9482               	bcf	130,2,c	;volatile
   286  000308                     
   287                           ;prueba.c: 44: void main (void) {
   288  000308  ECCD  F000         	call	_T0_servoOff	;wreg free
   289                           
   290                           ;prueba.c: 45:  OSCCON = 0b01110000;
   291  00030C  EF8B  F001         	goto	l47
   292  000310                     l45:
   293                           
   294                           ;prueba.c: 47:  TRISCbits.RC2=0;
   295  000310  8482               	bsf	130,2,c	;volatile
   296  000312                     
   297                           ;prueba.c: 48:  servo=128;
   298  000312  EC03  F001         	call	_T0_servoOn	;wreg free
   299  000316                     l47:
   300  000316  0012               	return		;funcret
   301  000318                     __end_of_servocontrol:
   302                           	callstack 0
   303                           
   304 ;; *************** function _T0_servoOn *****************
   305 ;; Defined at:
   306 ;;		line 26 in file "prueba.c"
   307 ;; Parameters:    Size  Location     Type
   308 ;;		None
   309 ;; Auto vars:     Size  Location     Type
   310 ;;		None
   311 ;; Return value:  Size  Location     Type
   312 ;;                  1    wreg      void 
   313 ;; Registers used:
   314 ;;		wreg, status,2, status,0, cstack
   315 ;; Tracked objects:
   316 ;;		On entry : 0/0
   317 ;;		On exit  : 0/0
   318 ;;		Unchanged: 0/0
   319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   320 ;;      Params:         0       0       0       0       0       0       0       0       0
   321 ;;      Locals:         0       0       0       0       0       0       0       0       0
   322 ;;      Temps:          0       0       0       0       0       0       0       0       0
   323 ;;      Totals:         0       0       0       0       0       0       0       0       0
   324 ;;Total ram usage:        0 bytes
   325 ;; Hardware stack levels used:    1
   326 ;; Hardware stack levels required when called:    5
   327 ;; This function calls:
   328 ;;		___awdiv
   329 ;; This function is called by:
   330 ;;		_servocontrol
   331 ;; This function uses a non-reentrant model
   332 ;;
   333                           
   334                           	psect	text2
   335  000206                     __ptext2:
   336                           	callstack 0
   337  000206                     _T0_servoOn:
   338                           	callstack 24
   339  000206                     
   340                           ;prueba.c: 27: 
   341  000206  0EA0               	movlw	160
   342  000208  6EF2               	movwf	242,c	;volatile
   343                           
   344                           ;prueba.c: 28: void servocontrol (){
   345  00020A  0EC5               	movlw	197
   346  00020C  6ED5               	movwf	213,c	;volatile
   347  00020E                     
   348                           ;prueba.c: 29:  if(PORTCbits.RC2==1){
   349  00020E  C013  F00B         	movff	_servo,___awdiv@dividend
   350  000212  C014  F00C         	movff	_servo+1,___awdiv@dividend+1
   351  000216  0E00               	movlw	0
   352  000218  6E0E               	movwf	(___awdiv@divisor+1)^0,c
   353  00021A  0E03               	movlw	3
   354  00021C  6E0D               	movwf	___awdiv@divisor^0,c
   355  00021E  EC09  F000         	call	___awdiv	;wreg free
   356  000222  C00B  F013         	movff	?___awdiv,_servo
   357  000226  C00C  F014         	movff	?___awdiv+1,_servo+1
   358  00022A                     
   359                           ;prueba.c: 30:   PORTCbits.RC2 = 0;
   360  00022A  5013               	movf	_servo^0,w,c
   361  00022C  08B1               	sublw	177
   362  00022E  6ED6               	movwf	214,c	;volatile
   363  000230  0012               	return		;funcret
   364  000232                     __end_of_T0_servoOn:
   365                           	callstack 0
   366                           
   367 ;; *************** function ___awdiv *****************
   368 ;; Defined at:
   369 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awdiv.c"
   370 ;; Parameters:    Size  Location     Type
   371 ;;  dividend        2   10[COMRAM] int 
   372 ;;  divisor         2   12[COMRAM] int 
   373 ;; Auto vars:     Size  Location     Type
   374 ;;  quotient        2   16[COMRAM] int 
   375 ;;  sign            1   15[COMRAM] unsigned char 
   376 ;;  counter         1   14[COMRAM] unsigned char 
   377 ;; Return value:  Size  Location     Type
   378 ;;                  2   10[COMRAM] int 
   379 ;; Registers used:
   380 ;;		wreg, status,2, status,0
   381 ;; Tracked objects:
   382 ;;		On entry : 0/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   386 ;;      Params:         4       0       0       0       0       0       0       0       0
   387 ;;      Locals:         4       0       0       0       0       0       0       0       0
   388 ;;      Temps:          0       0       0       0       0       0       0       0       0
   389 ;;      Totals:         8       0       0       0       0       0       0       0       0
   390 ;;Total ram usage:        8 bytes
   391 ;; Hardware stack levels used:    1
   392 ;; Hardware stack levels required when called:    4
   393 ;; This function calls:
   394 ;;		Nothing
   395 ;; This function is called by:
   396 ;;		_T0_servoOn
   397 ;; This function uses a non-reentrant model
   398 ;;
   399                           
   400                           	psect	text3
   401  000012                     __ptext3:
   402                           	callstack 0
   403  000012                     ___awdiv:
   404                           	callstack 24
   405  000012  0E00               	movlw	0
   406  000014  6E10               	movwf	___awdiv@sign^0,c
   407  000016  BE0E               	btfsc	(___awdiv@divisor+1)^0,7,c
   408  000018  EF12  F000         	goto	u160
   409  00001C  EF10  F000         	goto	u161
   410  000020                     u161:
   411  000020  EF18  F000         	goto	l914
   412  000024                     u160:
   413  000024  6C0D               	negf	___awdiv@divisor^0,c
   414  000026  1E0E               	comf	(___awdiv@divisor+1)^0,f,c
   415  000028  B0D8               	btfsc	status,0,c
   416  00002A  2A0E               	incf	(___awdiv@divisor+1)^0,f,c
   417  00002C  0E01               	movlw	1
   418  00002E  6E10               	movwf	___awdiv@sign^0,c
   419  000030                     l914:
   420  000030  BE0C               	btfsc	(___awdiv@dividend+1)^0,7,c
   421  000032  EF1F  F000         	goto	u170
   422  000036  EF1D  F000         	goto	u171
   423  00003A                     u171:
   424  00003A  EF25  F000         	goto	l920
   425  00003E                     u170:
   426  00003E  6C0B               	negf	___awdiv@dividend^0,c
   427  000040  1E0C               	comf	(___awdiv@dividend+1)^0,f,c
   428  000042  B0D8               	btfsc	status,0,c
   429  000044  2A0C               	incf	(___awdiv@dividend+1)^0,f,c
   430  000046  0E01               	movlw	1
   431  000048  1A10               	xorwf	___awdiv@sign^0,f,c
   432  00004A                     l920:
   433  00004A  0E00               	movlw	0
   434  00004C  6E12               	movwf	(___awdiv@quotient+1)^0,c
   435  00004E  0E00               	movlw	0
   436  000050  6E11               	movwf	___awdiv@quotient^0,c
   437  000052  500D               	movf	___awdiv@divisor^0,w,c
   438  000054  100E               	iorwf	(___awdiv@divisor+1)^0,w,c
   439  000056  B4D8               	btfsc	status,2,c
   440  000058  EF30  F000         	goto	u181
   441  00005C  EF32  F000         	goto	u180
   442  000060                     u181:
   443  000060  EF5A  F000         	goto	l942
   444  000064                     u180:
   445  000064  0E01               	movlw	1
   446  000066  6E0F               	movwf	___awdiv@counter^0,c
   447  000068  EF3A  F000         	goto	l928
   448  00006C                     l926:
   449  00006C  90D8               	bcf	status,0,c
   450  00006E  360D               	rlcf	___awdiv@divisor^0,f,c
   451  000070  360E               	rlcf	(___awdiv@divisor+1)^0,f,c
   452  000072  2A0F               	incf	___awdiv@counter^0,f,c
   453  000074                     l928:
   454  000074  AE0E               	btfss	(___awdiv@divisor+1)^0,7,c
   455  000076  EF3F  F000         	goto	u191
   456  00007A  EF41  F000         	goto	u190
   457  00007E                     u191:
   458  00007E  EF36  F000         	goto	l926
   459  000082                     u190:
   460  000082                     l930:
   461  000082  90D8               	bcf	status,0,c
   462  000084  3611               	rlcf	___awdiv@quotient^0,f,c
   463  000086  3612               	rlcf	(___awdiv@quotient+1)^0,f,c
   464  000088  500D               	movf	___awdiv@divisor^0,w,c
   465  00008A  5C0B               	subwf	___awdiv@dividend^0,w,c
   466  00008C  500E               	movf	(___awdiv@divisor+1)^0,w,c
   467  00008E  580C               	subwfb	(___awdiv@dividend+1)^0,w,c
   468  000090  A0D8               	btfss	status,0,c
   469  000092  EF4D  F000         	goto	u201
   470  000096  EF4F  F000         	goto	u200
   471  00009A                     u201:
   472  00009A  EF54  F000         	goto	l938
   473  00009E                     u200:
   474  00009E  500D               	movf	___awdiv@divisor^0,w,c
   475  0000A0  5E0B               	subwf	___awdiv@dividend^0,f,c
   476  0000A2  500E               	movf	(___awdiv@divisor+1)^0,w,c
   477  0000A4  5A0C               	subwfb	(___awdiv@dividend+1)^0,f,c
   478  0000A6  8011               	bsf	___awdiv@quotient^0,0,c
   479  0000A8                     l938:
   480  0000A8  90D8               	bcf	status,0,c
   481  0000AA  320E               	rrcf	(___awdiv@divisor+1)^0,f,c
   482  0000AC  320D               	rrcf	___awdiv@divisor^0,f,c
   483  0000AE  2E0F               	decfsz	___awdiv@counter^0,f,c
   484  0000B0  EF41  F000         	goto	l930
   485  0000B4                     l942:
   486  0000B4  5010               	movf	___awdiv@sign^0,w,c
   487  0000B6  B4D8               	btfsc	status,2,c
   488  0000B8  EF60  F000         	goto	u211
   489  0000BC  EF62  F000         	goto	u210
   490  0000C0                     u211:
   491  0000C0  EF66  F000         	goto	l946
   492  0000C4                     u210:
   493  0000C4  6C11               	negf	___awdiv@quotient^0,c
   494  0000C6  1E12               	comf	(___awdiv@quotient+1)^0,f,c
   495  0000C8  B0D8               	btfsc	status,0,c
   496  0000CA  2A12               	incf	(___awdiv@quotient+1)^0,f,c
   497  0000CC                     l946:
   498  0000CC  C011  F00B         	movff	___awdiv@quotient,?___awdiv
   499  0000D0  C012  F00C         	movff	___awdiv@quotient+1,?___awdiv+1
   500  0000D4  0012               	return		;funcret
   501  0000D6                     __end_of___awdiv:
   502                           	callstack 0
   503                           
   504 ;; *************** function _T0_servoOff *****************
   505 ;; Defined at:
   506 ;;		line 33 in file "prueba.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;		None
   509 ;; Auto vars:     Size  Location     Type
   510 ;;		None
   511 ;; Return value:  Size  Location     Type
   512 ;;                  1    wreg      void 
   513 ;; Registers used:
   514 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   520 ;;      Params:         0       0       0       0       0       0       0       0       0
   521 ;;      Locals:         0       0       0       0       0       0       0       0       0
   522 ;;      Temps:          0       0       0       0       0       0       0       0       0
   523 ;;      Totals:         0       0       0       0       0       0       0       0       0
   524 ;;Total ram usage:        0 bytes
   525 ;; Hardware stack levels used:    1
   526 ;; Hardware stack levels required when called:    5
   527 ;; This function calls:
   528 ;;		___wmul
   529 ;; This function is called by:
   530 ;;		_servocontrol
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534                           	psect	text4
   535  00019A                     __ptext4:
   536                           	callstack 0
   537  00019A                     _T0_servoOff:
   538                           	callstack 24
   539  00019A                     
   540                           ;prueba.c: 34:   PORTCbits.RC2 = 1;
   541  00019A  0EA0               	movlw	160
   542  00019C  6EF2               	movwf	242,c	;volatile
   543                           
   544                           ;prueba.c: 35:   T0_servoOn();
   545  00019E  0E80               	movlw	128
   546  0001A0  6ED5               	movwf	213,c	;volatile
   547  0001A2                     
   548                           ;prueba.c: 36:  }
   549  0001A2  C013  F00B         	movff	_servo,___wmul@multiplier
   550  0001A6  C014  F00C         	movff	_servo+1,___wmul@multiplier+1
   551  0001AA  0E00               	movlw	0
   552  0001AC  6E0E               	movwf	(___wmul@multiplicand+1)^0,c
   553  0001AE  0E09               	movlw	9
   554  0001B0  6E0D               	movwf	___wmul@multiplicand^0,c
   555  0001B2  EC43  F001         	call	___wmul	;wreg free
   556  0001B6  C00B  F013         	movff	?___wmul,_servo
   557  0001BA  C00C  F014         	movff	?___wmul+1,_servo+1
   558  0001BE                     
   559                           ;prueba.c: 37: }
   560  0001BE  0E74               	movlw	116
   561  0001C0  2413               	addwf	_servo^0,w,c
   562  0001C2  6ED6               	movwf	214,c	;volatile
   563  0001C4  0E46               	movlw	70
   564  0001C6  2014               	addwfc	(_servo+1)^0,w,c
   565  0001C8  6ED7               	movwf	215,c	;volatile
   566  0001CA                     
   567                           ;prueba.c: 38: void __attribute__((picinterrupt(("")))) Interrupciones (void){
   568  0001CA  0E06               	movlw	6
   569  0001CC  6ED6               	movwf	214,c	;volatile
   570  0001CE  0012               	return		;funcret
   571  0001D0                     __end_of_T0_servoOff:
   572                           	callstack 0
   573                           
   574 ;; *************** function ___wmul *****************
   575 ;; Defined at:
   576 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
   577 ;; Parameters:    Size  Location     Type
   578 ;;  multiplier      2   10[COMRAM] unsigned int 
   579 ;;  multiplicand    2   12[COMRAM] unsigned int 
   580 ;; Auto vars:     Size  Location     Type
   581 ;;  product         2   14[COMRAM] unsigned int 
   582 ;; Return value:  Size  Location     Type
   583 ;;                  2   10[COMRAM] unsigned int 
   584 ;; Registers used:
   585 ;;		wreg, status,2, status,0, prodl, prodh
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   591 ;;      Params:         4       0       0       0       0       0       0       0       0
   592 ;;      Locals:         2       0       0       0       0       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0       0       0       0       0
   594 ;;      Totals:         6       0       0       0       0       0       0       0       0
   595 ;;Total ram usage:        6 bytes
   596 ;; Hardware stack levels used:    1
   597 ;; Hardware stack levels required when called:    4
   598 ;; This function calls:
   599 ;;		Nothing
   600 ;; This function is called by:
   601 ;;		_T0_servoOff
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           	psect	text5
   606  000286                     __ptext5:
   607                           	callstack 0
   608  000286                     ___wmul:
   609                           	callstack 24
   610  000286  500B               	movf	___wmul@multiplier^0,w,c
   611  000288  020D               	mulwf	___wmul@multiplicand^0,c
   612  00028A  CFF3 F00F          	movff	prodl,___wmul@product
   613  00028E  CFF4 F010          	movff	prodh,___wmul@product+1
   614  000292  500B               	movf	___wmul@multiplier^0,w,c
   615  000294  020E               	mulwf	(___wmul@multiplicand+1)^0,c
   616  000296  50F3               	movf	243,w,c
   617  000298  2610               	addwf	(___wmul@product+1)^0,f,c
   618  00029A  500C               	movf	(___wmul@multiplier+1)^0,w,c
   619  00029C  020D               	mulwf	___wmul@multiplicand^0,c
   620  00029E  50F3               	movf	243,w,c
   621  0002A0  2610               	addwf	(___wmul@product+1)^0,f,c
   622  0002A2  C00F  F00B         	movff	___wmul@product,?___wmul
   623  0002A6  C010  F00C         	movff	___wmul@product+1,?___wmul+1
   624  0002AA  0012               	return		;funcret
   625  0002AC                     __end_of___wmul:
   626                           	callstack 0
   627                           
   628 ;; *************** function _getCAD0 *****************
   629 ;; Defined at:
   630 ;;		line 15 in file "prueba.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;                  2   10[COMRAM] short 
   637 ;; Registers used:
   638 ;;		wreg, status,2
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   644 ;;      Params:         2       0       0       0       0       0       0       0       0
   645 ;;      Locals:         0       0       0       0       0       0       0       0       0
   646 ;;      Temps:          0       0       0       0       0       0       0       0       0
   647 ;;      Totals:         2       0       0       0       0       0       0       0       0
   648 ;;Total ram usage:        2 bytes
   649 ;; Hardware stack levels used:    1
   650 ;; Hardware stack levels required when called:    4
   651 ;; This function calls:
   652 ;;		Nothing
   653 ;; This function is called by:
   654 ;;		_main
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658                           	psect	text6
   659  0002AC                     __ptext6:
   660                           	callstack 0
   661  0002AC                     _getCAD0:
   662                           	callstack 26
   663  0002AC                     
   664                           ;prueba.c: 16:     servo = servo / 3;
   665  0002AC  0E0E               	movlw	14
   666  0002AE  6EC1               	movwf	193,c	;volatile
   667                           
   668                           ;prueba.c: 17:  TMR0L = 177 - servo;
   669  0002B0  0E00               	movlw	0
   670  0002B2  6EC2               	movwf	194,c	;volatile
   671                           
   672                           ;prueba.c: 18:  }
   673  0002B4  0E25               	movlw	37
   674  0002B6  6EC0               	movwf	192,c	;volatile
   675  0002B8                     
   676                           ;prueba.c: 19: 
   677  0002B8  80C2               	bsf	194,0,c	;volatile
   678  0002BA                     
   679                           ;prueba.c: 20: void T0_servoOff(){
   680  0002BA  82C2               	bsf	194,1,c	;volatile
   681  0002BC                     l33:
   682                           
   683                           ;prueba.c: 21:  INTCON = 0b10100000;
   684  0002BC  B2C2               	btfsc	194,1,c	;volatile
   685  0002BE  EF63  F001         	goto	u281
   686  0002C2  EF65  F001         	goto	u280
   687  0002C6                     u281:
   688  0002C6  EF5E  F001         	goto	l33
   689  0002CA                     u280:
   690  0002CA                     
   691                           ;prueba.c: 23:  servo = servo * 9;
   692  0002CA  CFC4 F00B          	movff	4036,?_getCAD0	;volatile
   693  0002CE  6A0C               	clrf	(?_getCAD0+1)^0,c
   694  0002D0  0012               	return		;funcret
   695  0002D2                     __end_of_getCAD0:
   696                           	callstack 0
   697                           
   698 ;; *************** function _Interrupciones *****************
   699 ;; Defined at:
   700 ;;		line 51 in file "prueba.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;		None
   703 ;; Auto vars:     Size  Location     Type
   704 ;;		None
   705 ;; Return value:  Size  Location     Type
   706 ;;                  1    wreg      void 
   707 ;; Registers used:
   708 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   714 ;;      Params:         0       0       0       0       0       0       0       0       0
   715 ;;      Locals:         0       0       0       0       0       0       0       0       0
   716 ;;      Temps:          2       0       0       0       0       0       0       0       0
   717 ;;      Totals:         2       0       0       0       0       0       0       0       0
   718 ;;Total ram usage:        2 bytes
   719 ;; Hardware stack levels used:    1
   720 ;; Hardware stack levels required when called:    3
   721 ;; This function calls:
   722 ;;		i2_servocontrol
   723 ;; This function is called by:
   724 ;;		Interrupt level 2
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728                           	psect	intcode
   729  000008                     __pintcode:
   730                           	callstack 0
   731  000008                     _Interrupciones:
   732                           	callstack 24
   733                           
   734                           ;incstack = 0
   735  000008  8215               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   736  00000A  ED9C  F001         	call	int_func,f	;refresh shadow registers
   737                           
   738                           	psect	intcode_body
   739  000338                     __pintcode_body:
   740                           	callstack 24
   741  000338                     int_func:
   742                           	callstack 24
   743  000338  0006               	pop		; remove dummy address from shadow register refresh
   744  00033A  CFF3 F009          	movff	prodl,??_Interrupciones
   745  00033E  CFF4 F00A          	movff	prodh,??_Interrupciones+1
   746  000342                     
   747                           ;prueba.c: 52: 
   748  000342  9EF2               	bcf	242,7,c	;volatile
   749                           
   750                           ;prueba.c: 53:  }
   751  000344  94F2               	bcf	242,2,c	;volatile
   752  000346                     
   753                           ;prueba.c: 54:  return;
   754  000346  EC8C  F001         	call	i2_servocontrol	;wreg free
   755  00034A  C00A  FFF4         	movff	??_Interrupciones+1,prodh
   756  00034E  C009  FFF3         	movff	??_Interrupciones,prodl
   757  000352  9215               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   758  000354  0011               	retfie		f
   759  000356                     __end_of_Interrupciones:
   760                           	callstack 0
   761                           
   762 ;; *************** function i2_servocontrol *****************
   763 ;; Defined at:
   764 ;;		line 41 in file "prueba.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;		None
   767 ;; Auto vars:     Size  Location     Type
   768 ;;		None
   769 ;; Return value:  Size  Location     Type
   770 ;;                  1    wreg      void 
   771 ;; Registers used:
   772 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   773 ;; Tracked objects:
   774 ;;		On entry : 0/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   778 ;;      Params:         0       0       0       0       0       0       0       0       0
   779 ;;      Locals:         0       0       0       0       0       0       0       0       0
   780 ;;      Temps:          0       0       0       0       0       0       0       0       0
   781 ;;      Totals:         0       0       0       0       0       0       0       0       0
   782 ;;Total ram usage:        0 bytes
   783 ;; Hardware stack levels used:    1
   784 ;; Hardware stack levels required when called:    2
   785 ;; This function calls:
   786 ;;		i2_T0_servoOff
   787 ;;		i2_T0_servoOn
   788 ;; This function is called by:
   789 ;;		_Interrupciones
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           	psect	text8
   794  000318                     __ptext8:
   795                           	callstack 0
   796  000318                     i2_servocontrol:
   797                           	callstack 24
   798  000318                     
   799                           ;prueba.c: 42: }
   800  000318  A482               	btfss	130,2,c	;volatile
   801  00031A  EF91  F001         	goto	i2u30_41
   802  00031E  EF93  F001         	goto	i2u30_40
   803  000322                     i2u30_41:
   804  000322  EF98  F001         	goto	i2l45
   805  000326                     i2u30_40:
   806  000326                     
   807                           ;prueba.c: 43: 
   808  000326  9482               	bcf	130,2,c	;volatile
   809  000328                     
   810                           ;prueba.c: 44: void main (void) {
   811  000328  ECE8  F000         	call	i2_T0_servoOff	;wreg free
   812                           
   813                           ;prueba.c: 45:  OSCCON = 0b01110000;
   814  00032C  EF9B  F001         	goto	i2l47
   815  000330                     i2l45:
   816                           
   817                           ;prueba.c: 47:  TRISCbits.RC2=0;
   818  000330  8482               	bsf	130,2,c	;volatile
   819  000332                     
   820                           ;prueba.c: 48:  servo=128;
   821  000332  EC19  F001         	call	i2_T0_servoOn	;wreg free
   822  000336                     i2l47:
   823  000336  0012               	return		;funcret
   824  000338                     __end_ofi2_servocontrol:
   825                           	callstack 0
   826                           
   827 ;; *************** function i2_T0_servoOn *****************
   828 ;; Defined at:
   829 ;;		line 26 in file "prueba.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;		None
   832 ;; Auto vars:     Size  Location     Type
   833 ;;		None
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, status,2, status,0, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   843 ;;      Params:         0       0       0       0       0       0       0       0       0
   844 ;;      Locals:         0       0       0       0       0       0       0       0       0
   845 ;;      Temps:          0       0       0       0       0       0       0       0       0
   846 ;;      Totals:         0       0       0       0       0       0       0       0       0
   847 ;;Total ram usage:        0 bytes
   848 ;; Hardware stack levels used:    1
   849 ;; Hardware stack levels required when called:    1
   850 ;; This function calls:
   851 ;;		i2___awdiv
   852 ;; This function is called by:
   853 ;;		i2_servocontrol
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           	psect	text9
   858  000232                     __ptext9:
   859                           	callstack 0
   860  000232                     i2_T0_servoOn:
   861                           	callstack 24
   862  000232                     
   863                           ;prueba.c: 27: 
   864  000232  0EA0               	movlw	160
   865  000234  6EF2               	movwf	242,c	;volatile
   866                           
   867                           ;prueba.c: 28: void servocontrol (){
   868  000236  0EC5               	movlw	197
   869  000238  6ED5               	movwf	213,c	;volatile
   870  00023A                     
   871                           ;prueba.c: 29:  if(PORTCbits.RC2==1){
   872  00023A  C013  F001         	movff	_servo,i2___awdiv@dividend
   873  00023E  C014  F002         	movff	_servo+1,i2___awdiv@dividend+1
   874  000242  0E00               	movlw	0
   875  000244  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
   876  000246  0E03               	movlw	3
   877  000248  6E03               	movwf	i2___awdiv@divisor^0,c
   878  00024A  EC6B  F000         	call	i2___awdiv	;wreg free
   879  00024E  C001  F013         	movff	?i2___awdiv,_servo
   880  000252  C002  F014         	movff	?i2___awdiv+1,_servo+1
   881  000256                     
   882                           ;prueba.c: 30:   PORTCbits.RC2 = 0;
   883  000256  5013               	movf	_servo^0,w,c
   884  000258  08B1               	sublw	177
   885  00025A  6ED6               	movwf	214,c	;volatile
   886  00025C  0012               	return		;funcret
   887  00025E                     __end_ofi2_T0_servoOn:
   888                           	callstack 0
   889                           
   890 ;; *************** function i2___awdiv *****************
   891 ;; Defined at:
   892 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awdiv.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;  dividend        2    0[COMRAM] int 
   895 ;;  divisor         2    2[COMRAM] int 
   896 ;; Auto vars:     Size  Location     Type
   897 ;;  quotient        2    6[COMRAM] int 
   898 ;;  sign            1    5[COMRAM] unsigned char 
   899 ;;  counter         1    4[COMRAM] unsigned char 
   900 ;; Return value:  Size  Location     Type
   901 ;;                  2    0[COMRAM] int 
   902 ;; Registers used:
   903 ;;		wreg, status,2, status,0
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   909 ;;      Params:         4       0       0       0       0       0       0       0       0
   910 ;;      Locals:         4       0       0       0       0       0       0       0       0
   911 ;;      Temps:          0       0       0       0       0       0       0       0       0
   912 ;;      Totals:         8       0       0       0       0       0       0       0       0
   913 ;;Total ram usage:        8 bytes
   914 ;; Hardware stack levels used:    1
   915 ;; This function calls:
   916 ;;		Nothing
   917 ;; This function is called by:
   918 ;;		i2_T0_servoOn
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text10
   923  0000D6                     __ptext10:
   924                           	callstack 0
   925  0000D6                     i2___awdiv:
   926                           	callstack 24
   927  0000D6  0E00               	movlw	0
   928  0000D8  6E06               	movwf	i2___awdiv@sign^0,c
   929  0000DA  BE04               	btfsc	(i2___awdiv@divisor+1)^0,7,c
   930  0000DC  EF74  F000         	goto	i2u22_40
   931  0000E0  EF72  F000         	goto	i2u22_41
   932  0000E4                     i2u22_41:
   933  0000E4  EF7A  F000         	goto	i2l964
   934  0000E8                     i2u22_40:
   935  0000E8  6C03               	negf	i2___awdiv@divisor^0,c
   936  0000EA  1E04               	comf	(i2___awdiv@divisor+1)^0,f,c
   937  0000EC  B0D8               	btfsc	status,0,c
   938  0000EE  2A04               	incf	(i2___awdiv@divisor+1)^0,f,c
   939  0000F0  0E01               	movlw	1
   940  0000F2  6E06               	movwf	i2___awdiv@sign^0,c
   941  0000F4                     i2l964:
   942  0000F4  BE02               	btfsc	(i2___awdiv@dividend+1)^0,7,c
   943  0000F6  EF81  F000         	goto	i2u23_40
   944  0000FA  EF7F  F000         	goto	i2u23_41
   945  0000FE                     i2u23_41:
   946  0000FE  EF87  F000         	goto	i2l970
   947  000102                     i2u23_40:
   948  000102  6C01               	negf	i2___awdiv@dividend^0,c
   949  000104  1E02               	comf	(i2___awdiv@dividend+1)^0,f,c
   950  000106  B0D8               	btfsc	status,0,c
   951  000108  2A02               	incf	(i2___awdiv@dividend+1)^0,f,c
   952  00010A  0E01               	movlw	1
   953  00010C  1A06               	xorwf	i2___awdiv@sign^0,f,c
   954  00010E                     i2l970:
   955  00010E  0E00               	movlw	0
   956  000110  6E08               	movwf	(i2___awdiv@quotient+1)^0,c
   957  000112  0E00               	movlw	0
   958  000114  6E07               	movwf	i2___awdiv@quotient^0,c
   959  000116  5003               	movf	i2___awdiv@divisor^0,w,c
   960  000118  1004               	iorwf	(i2___awdiv@divisor+1)^0,w,c
   961  00011A  B4D8               	btfsc	status,2,c
   962  00011C  EF92  F000         	goto	i2u24_41
   963  000120  EF94  F000         	goto	i2u24_40
   964  000124                     i2u24_41:
   965  000124  EFBC  F000         	goto	i2l992
   966  000128                     i2u24_40:
   967  000128  0E01               	movlw	1
   968  00012A  6E05               	movwf	i2___awdiv@counter^0,c
   969  00012C  EF9C  F000         	goto	i2l978
   970  000130                     i2l976:
   971  000130  90D8               	bcf	status,0,c
   972  000132  3603               	rlcf	i2___awdiv@divisor^0,f,c
   973  000134  3604               	rlcf	(i2___awdiv@divisor+1)^0,f,c
   974  000136  2A05               	incf	i2___awdiv@counter^0,f,c
   975  000138                     i2l978:
   976  000138  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
   977  00013A  EFA1  F000         	goto	i2u25_41
   978  00013E  EFA3  F000         	goto	i2u25_40
   979  000142                     i2u25_41:
   980  000142  EF98  F000         	goto	i2l976
   981  000146                     i2u25_40:
   982  000146                     i2l980:
   983  000146  90D8               	bcf	status,0,c
   984  000148  3607               	rlcf	i2___awdiv@quotient^0,f,c
   985  00014A  3608               	rlcf	(i2___awdiv@quotient+1)^0,f,c
   986  00014C  5003               	movf	i2___awdiv@divisor^0,w,c
   987  00014E  5C01               	subwf	i2___awdiv@dividend^0,w,c
   988  000150  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
   989  000152  5802               	subwfb	(i2___awdiv@dividend+1)^0,w,c
   990  000154  A0D8               	btfss	status,0,c
   991  000156  EFAF  F000         	goto	i2u26_41
   992  00015A  EFB1  F000         	goto	i2u26_40
   993  00015E                     i2u26_41:
   994  00015E  EFB6  F000         	goto	i2l988
   995  000162                     i2u26_40:
   996  000162  5003               	movf	i2___awdiv@divisor^0,w,c
   997  000164  5E01               	subwf	i2___awdiv@dividend^0,f,c
   998  000166  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
   999  000168  5A02               	subwfb	(i2___awdiv@dividend+1)^0,f,c
  1000  00016A  8007               	bsf	i2___awdiv@quotient^0,0,c
  1001  00016C                     i2l988:
  1002  00016C  90D8               	bcf	status,0,c
  1003  00016E  3204               	rrcf	(i2___awdiv@divisor+1)^0,f,c
  1004  000170  3203               	rrcf	i2___awdiv@divisor^0,f,c
  1005  000172  2E05               	decfsz	i2___awdiv@counter^0,f,c
  1006  000174  EFA3  F000         	goto	i2l980
  1007  000178                     i2l992:
  1008  000178  5006               	movf	i2___awdiv@sign^0,w,c
  1009  00017A  B4D8               	btfsc	status,2,c
  1010  00017C  EFC2  F000         	goto	i2u27_41
  1011  000180  EFC4  F000         	goto	i2u27_40
  1012  000184                     i2u27_41:
  1013  000184  EFC8  F000         	goto	i2l996
  1014  000188                     i2u27_40:
  1015  000188  6C07               	negf	i2___awdiv@quotient^0,c
  1016  00018A  1E08               	comf	(i2___awdiv@quotient+1)^0,f,c
  1017  00018C  B0D8               	btfsc	status,0,c
  1018  00018E  2A08               	incf	(i2___awdiv@quotient+1)^0,f,c
  1019  000190                     i2l996:
  1020  000190  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  1021  000194  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  1022  000198  0012               	return		;funcret
  1023  00019A                     __end_ofi2___awdiv:
  1024                           	callstack 0
  1025                           
  1026 ;; *************** function i2_T0_servoOff *****************
  1027 ;; Defined at:
  1028 ;;		line 33 in file "prueba.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;		None
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;		None
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  1    wreg      void 
  1035 ;; Registers used:
  1036 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1042 ;;      Params:         0       0       0       0       0       0       0       0       0
  1043 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1045 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1046 ;;Total ram usage:        0 bytes
  1047 ;; Hardware stack levels used:    1
  1048 ;; Hardware stack levels required when called:    1
  1049 ;; This function calls:
  1050 ;;		i2___wmul
  1051 ;; This function is called by:
  1052 ;;		i2_servocontrol
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text11
  1057  0001D0                     __ptext11:
  1058                           	callstack 0
  1059  0001D0                     i2_T0_servoOff:
  1060                           	callstack 24
  1061  0001D0                     
  1062                           ;prueba.c: 34:   PORTCbits.RC2 = 1;
  1063  0001D0  0EA0               	movlw	160
  1064  0001D2  6EF2               	movwf	242,c	;volatile
  1065                           
  1066                           ;prueba.c: 35:   T0_servoOn();
  1067  0001D4  0E80               	movlw	128
  1068  0001D6  6ED5               	movwf	213,c	;volatile
  1069  0001D8                     
  1070                           ;prueba.c: 36:  }
  1071  0001D8  C013  F001         	movff	_servo,i2___wmul@multiplier
  1072  0001DC  C014  F002         	movff	_servo+1,i2___wmul@multiplier+1
  1073  0001E0  0E00               	movlw	0
  1074  0001E2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  1075  0001E4  0E09               	movlw	9
  1076  0001E6  6E03               	movwf	i2___wmul@multiplicand^0,c
  1077  0001E8  EC69  F001         	call	i2___wmul	;wreg free
  1078  0001EC  C001  F013         	movff	?i2___wmul,_servo
  1079  0001F0  C002  F014         	movff	?i2___wmul+1,_servo+1
  1080  0001F4                     
  1081                           ;prueba.c: 37: }
  1082  0001F4  0E74               	movlw	116
  1083  0001F6  2413               	addwf	_servo^0,w,c
  1084  0001F8  6ED6               	movwf	214,c	;volatile
  1085  0001FA  0E46               	movlw	70
  1086  0001FC  2014               	addwfc	(_servo+1)^0,w,c
  1087  0001FE  6ED7               	movwf	215,c	;volatile
  1088  000200                     
  1089                           ;prueba.c: 38: void __attribute__((picinterrupt(("")))) Interrupciones (void){
  1090  000200  0E06               	movlw	6
  1091  000202  6ED6               	movwf	214,c	;volatile
  1092  000204  0012               	return		;funcret
  1093  000206                     __end_ofi2_T0_servoOff:
  1094                           	callstack 0
  1095                           
  1096 ;; *************** function i2___wmul *****************
  1097 ;; Defined at:
  1098 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;  multiplier      2    0[COMRAM] unsigned int 
  1101 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;  product         2    4[COMRAM] unsigned int 
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  2    0[COMRAM] unsigned int 
  1106 ;; Registers used:
  1107 ;;		wreg, status,2, status,0, prodl, prodh
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1113 ;;      Params:         4       0       0       0       0       0       0       0       0
  1114 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1115 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1116 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1117 ;;Total ram usage:        6 bytes
  1118 ;; Hardware stack levels used:    1
  1119 ;; This function calls:
  1120 ;;		Nothing
  1121 ;; This function is called by:
  1122 ;;		i2_T0_servoOff
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           	psect	text12
  1127  0002D2                     __ptext12:
  1128                           	callstack 0
  1129  0002D2                     i2___wmul:
  1130                           	callstack 24
  1131  0002D2  5001               	movf	i2___wmul@multiplier^0,w,c
  1132  0002D4  0203               	mulwf	i2___wmul@multiplicand^0,c
  1133  0002D6  CFF3 F005          	movff	prodl,i2___wmul@product
  1134  0002DA  CFF4 F006          	movff	prodh,i2___wmul@product+1
  1135  0002DE  5001               	movf	i2___wmul@multiplier^0,w,c
  1136  0002E0  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  1137  0002E2  50F3               	movf	243,w,c
  1138  0002E4  2606               	addwf	(i2___wmul@product+1)^0,f,c
  1139  0002E6  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  1140  0002E8  0203               	mulwf	i2___wmul@multiplicand^0,c
  1141  0002EA  50F3               	movf	243,w,c
  1142  0002EC  2606               	addwf	(i2___wmul@product+1)^0,f,c
  1143  0002EE  C005  F001         	movff	i2___wmul@product,?i2___wmul
  1144  0002F2  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  1145  0002F6  0012               	return		;funcret
  1146  0002F8                     __end_ofi2___wmul:
  1147                           	callstack 0
  1148  0000                     
  1149                           	psect	rparam
  1150  0000                     
  1151                           	psect	temp
  1152  000015                     btemp:
  1153                           	callstack 0
  1154  000015                     	ds	1
  1155  0000                     int$flags	set	btemp
  1156  0000                     wtemp8	set	btemp+1
  1157  0000                     ttemp5	set	btemp+1
  1158  0000                     ttemp6	set	btemp+4
  1159  0000                     ttemp7	set	btemp+8
  1160                           
  1161                           	psect	idloc
  1162                           
  1163                           ;Config register IDLOC0 @ 0x200000
  1164                           ;	unspecified, using default values
  1165  200000                     	org	2097152
  1166  200000  FF                 	db	255
  1167                           
  1168                           ;Config register IDLOC1 @ 0x200001
  1169                           ;	unspecified, using default values
  1170  200001                     	org	2097153
  1171  200001  FF                 	db	255
  1172                           
  1173                           ;Config register IDLOC2 @ 0x200002
  1174                           ;	unspecified, using default values
  1175  200002                     	org	2097154
  1176  200002  FF                 	db	255
  1177                           
  1178                           ;Config register IDLOC3 @ 0x200003
  1179                           ;	unspecified, using default values
  1180  200003                     	org	2097155
  1181  200003  FF                 	db	255
  1182                           
  1183                           ;Config register IDLOC4 @ 0x200004
  1184                           ;	unspecified, using default values
  1185  200004                     	org	2097156
  1186  200004  FF                 	db	255
  1187                           
  1188                           ;Config register IDLOC5 @ 0x200005
  1189                           ;	unspecified, using default values
  1190  200005                     	org	2097157
  1191  200005  FF                 	db	255
  1192                           
  1193                           ;Config register IDLOC6 @ 0x200006
  1194                           ;	unspecified, using default values
  1195  200006                     	org	2097158
  1196  200006  FF                 	db	255
  1197                           
  1198                           ;Config register IDLOC7 @ 0x200007
  1199                           ;	unspecified, using default values
  1200  200007                     	org	2097159
  1201  200007  FF                 	db	255
  1202                           
  1203                           	psect	config
  1204                           
  1205                           ;Config register CONFIG1L @ 0x300000
  1206                           ;	PLL Prescaler Selection bits
  1207                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1208                           ;	System Clock Postscaler Selection bits
  1209                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1210                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1211                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1212  300000                     	org	3145728
  1213  300000  00                 	db	0
  1214                           
  1215                           ;Config register CONFIG1H @ 0x300001
  1216                           ;	Oscillator Selection bits
  1217                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  1218                           ;	Fail-Safe Clock Monitor Enable bit
  1219                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1220                           ;	Internal/External Oscillator Switchover bit
  1221                           ;	IESO = ON, Oscillator Switchover mode enabled
  1222  300001                     	org	3145729
  1223  300001  88                 	db	136
  1224                           
  1225                           ;Config register CONFIG2L @ 0x300002
  1226                           ;	Power-up Timer Enable bit
  1227                           ;	PWRT = ON, PWRT enabled
  1228                           ;	Brown-out Reset Enable bits
  1229                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1230                           ;	Brown-out Reset Voltage bits
  1231                           ;	BORV = 3, Minimum setting 2.05V
  1232                           ;	USB Voltage Regulator Enable bit
  1233                           ;	VREGEN = OFF, USB voltage regulator disabled
  1234  300002                     	org	3145730
  1235  300002  18                 	db	24
  1236                           
  1237                           ;Config register CONFIG2H @ 0x300003
  1238                           ;	Watchdog Timer Enable bit
  1239                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1240                           ;	Watchdog Timer Postscale Select bits
  1241                           ;	WDTPS = 32768, 1:32768
  1242  300003                     	org	3145731
  1243  300003  1E                 	db	30
  1244                           
  1245                           ; Padding undefined space
  1246  300004                     	org	3145732
  1247  300004  FF                 	db	255
  1248                           
  1249                           ;Config register CONFIG3H @ 0x300005
  1250                           ;	CCP2 MUX bit
  1251                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1252                           ;	PORTB A/D Enable bit
  1253                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1254                           ;	Low-Power Timer 1 Oscillator Enable bit
  1255                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1256                           ;	MCLR Pin Enable bit
  1257                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  1258  300005                     	org	3145733
  1259  300005  01                 	db	1
  1260                           
  1261                           ;Config register CONFIG4L @ 0x300006
  1262                           ;	Stack Full/Underflow Reset Enable bit
  1263                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1264                           ;	Single-Supply ICSP Enable bit
  1265                           ;	LVP = OFF, Single-Supply ICSP disabled
  1266                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1267                           ;	ICPRT = 0x0, unprogrammed default
  1268                           ;	Extended Instruction Set Enable bit
  1269                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1270                           ;	Background Debugger Enable bit
  1271                           ;	DEBUG = 0x1, unprogrammed default
  1272  300006                     	org	3145734
  1273  300006  81                 	db	129
  1274                           
  1275                           ; Padding undefined space
  1276  300007                     	org	3145735
  1277  300007  FF                 	db	255
  1278                           
  1279                           ;Config register CONFIG5L @ 0x300008
  1280                           ;	Code Protection bit
  1281                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1282                           ;	Code Protection bit
  1283                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1284                           ;	Code Protection bit
  1285                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1286                           ;	Code Protection bit
  1287                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1288  300008                     	org	3145736
  1289  300008  0F                 	db	15
  1290                           
  1291                           ;Config register CONFIG5H @ 0x300009
  1292                           ;	Boot Block Code Protection bit
  1293                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1294                           ;	Data EEPROM Code Protection bit
  1295                           ;	CPD = OFF, Data EEPROM is not code-protected
  1296  300009                     	org	3145737
  1297  300009  C0                 	db	192
  1298                           
  1299                           ;Config register CONFIG6L @ 0x30000A
  1300                           ;	Write Protection bit
  1301                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1302                           ;	Write Protection bit
  1303                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1304                           ;	Write Protection bit
  1305                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1306                           ;	Write Protection bit
  1307                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1308  30000A                     	org	3145738
  1309  30000A  0F                 	db	15
  1310                           
  1311                           ;Config register CONFIG6H @ 0x30000B
  1312                           ;	Configuration Register Write Protection bit
  1313                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1314                           ;	Boot Block Write Protection bit
  1315                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1316                           ;	Data EEPROM Write Protection bit
  1317                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1318  30000B                     	org	3145739
  1319  30000B  E0                 	db	224
  1320                           
  1321                           ;Config register CONFIG7L @ 0x30000C
  1322                           ;	Table Read Protection bit
  1323                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1324                           ;	Table Read Protection bit
  1325                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1326                           ;	Table Read Protection bit
  1327                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1328                           ;	Table Read Protection bit
  1329                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1330  30000C                     	org	3145740
  1331  30000C  0F                 	db	15
  1332                           
  1333                           ;Config register CONFIG7H @ 0x30000D
  1334                           ;	Boot Block Table Read Protection bit
  1335                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1336  30000D                     	org	3145741
  1337  30000D  40                 	db	64
  1338                           tosu	equ	0xFFF
  1339                           tosh	equ	0xFFE
  1340                           tosl	equ	0xFFD
  1341                           stkptr	equ	0xFFC
  1342                           pclatu	equ	0xFFB
  1343                           pclath	equ	0xFFA
  1344                           pcl	equ	0xFF9
  1345                           tblptru	equ	0xFF8
  1346                           tblptrh	equ	0xFF7
  1347                           tblptrl	equ	0xFF6
  1348                           tablat	equ	0xFF5
  1349                           prodh	equ	0xFF4
  1350                           prodl	equ	0xFF3
  1351                           indf0	equ	0xFEF
  1352                           postinc0	equ	0xFEE
  1353                           postdec0	equ	0xFED
  1354                           preinc0	equ	0xFEC
  1355                           plusw0	equ	0xFEB
  1356                           fsr0h	equ	0xFEA
  1357                           fsr0l	equ	0xFE9
  1358                           wreg	equ	0xFE8
  1359                           indf1	equ	0xFE7
  1360                           postinc1	equ	0xFE6
  1361                           postdec1	equ	0xFE5
  1362                           preinc1	equ	0xFE4
  1363                           plusw1	equ	0xFE3
  1364                           fsr1h	equ	0xFE2
  1365                           fsr1l	equ	0xFE1
  1366                           bsr	equ	0xFE0
  1367                           indf2	equ	0xFDF
  1368                           postinc2	equ	0xFDE
  1369                           postdec2	equ	0xFDD
  1370                           preinc2	equ	0xFDC
  1371                           plusw2	equ	0xFDB
  1372                           fsr2h	equ	0xFDA
  1373                           fsr2l	equ	0xFD9
  1374                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     18      20
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _T0_servoOn->___awdiv
    _T0_servoOff->___wmul

Critical Paths under _Interrupciones in COMRAM

    i2_T0_servoOn->i2___awdiv
    i2_T0_servoOff->i2___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupciones in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupciones in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupciones in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupciones in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupciones in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupciones in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupciones in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupciones in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     763
                            _getCAD0
                       _servocontrol
 ---------------------------------------------------------------------------------
 (1) _servocontrol                                         0     0      0     763
                        _T0_servoOff
                         _T0_servoOn
 ---------------------------------------------------------------------------------
 (2) _T0_servoOn                                           0     0      0     452
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                             10 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _T0_servoOff                                          0     0      0     311
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     311
                                             10 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _getCAD0                                              2     0      2       0
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Interrupciones                                       2     2      0     563
                                              8 COMRAM     2     2      0
                     i2_servocontrol
 ---------------------------------------------------------------------------------
 (5) i2_servocontrol                                       0     0      0     563
                      i2_T0_servoOff
                       i2_T0_servoOn
 ---------------------------------------------------------------------------------
 (6) i2_T0_servoOn                                         0     0      0     352
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (7) i2___awdiv                                            8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) i2_T0_servoOff                                        0     0      0     211
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2___wmul                                             6     2      4     211
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getCAD0
   _servocontrol
     _T0_servoOff
       ___wmul
     _T0_servoOn
       ___awdiv

 _Interrupciones (ROOT)
   i2_servocontrol
     i2_T0_servoOff
       i2___wmul
     i2_T0_servoOn
       i2___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     12      14       1       21.3%
STACK                0      0       0       2        0.0%
DATA                 0      0      14       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0      14      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Thu Nov 26 16:09:57 2020

                     l33 02BC                       l42 01CE                       l35 02CA  
                     l36 02D0                       l45 0310                       l63 02AA  
                     l39 0230                       l47 0316             ___awdiv@sign 0010  
    ___wmul@multiplicand 000D                      l294 00D4                      l900 0286  
                    l902 02A2                      l910 0024                      l920 004A  
                    l912 002C                      l930 0082                      l922 0052  
                    l914 0030                      l906 0012                      l940 00AE  
                    l932 0088                      l924 0064                      l916 003E  
                    l908 0016                      l934 009E                      l926 006C  
                    l942 00B4                      l918 0046                      l944 00C4  
                    l936 00A6                      l928 0074                      l946 00CC  
                    l938 00A8                      u200 009E                      u201 009A  
                    u210 00C4                      u211 00C0                      u160 0024  
                    u161 0020                      u170 003E                      u171 003A  
                    u180 0064                      u181 0060                      u190 0082  
                    u191 007E                      u280 02CA                      u281 02C6  
                    u290 0306                      u291 0302                     l1000 0206  
                   l1010 01BE                     l1002 020E                     l1012 01CA  
                   l1004 022A                     l1030 02B8                     l1006 019A  
                   l1032 02BA                     l1008 01A2                     l1040 0312  
                   l1034 02F8                     l1028 02AC                     l1036 0306  
                   l1060 026E                     l1038 0308                     l1062 0272  
                   l1054 025E                     l1056 0262                     l1058 0264  
                   i2l42 0204                     i2l52 034A                     i2l45 0330  
                   i2l63 02F6                     i2l39 025C                     i2l47 0336  
                   _TMR0 000FD6    __end_ofi2_T0_servoOff 0206                     _main 025E  
                   btemp 0015                     prodh 000FF4                     prodl 000FF3  
                   start 000E             ___param_bank 000000                    ?_main 0001  
        __end_of___awdiv 00D6                    _T0CON 000FD5          ___awdiv@divisor 000D  
            ?_T0_servoOn 0001                    i2l294 0198                    i2l950 02D2  
                  i2l952 02EE                    i2l960 00E8                    i2l970 010E  
                  i2l962 00F0                    i2l980 0146                    i2l972 0116  
                  i2l964 00F4                    i2l956 00D6          ___awdiv@counter 000F  
                  i2l990 0172                    i2l982 014C                    i2l974 0128  
                  i2l966 0102                    i2l958 00DA                    i2l984 0162  
                  i2l976 0130                    i2l992 0178                    i2l968 010A  
                  i2l994 0188                    i2l986 016A                    i2l978 0138  
                  i2l996 0190                    i2l988 016C          __end_of_getCAD0 02D2  
                  _TMR0L 000FD6                    _servo 0013         __end_ofi2___wmul 02F8  
                  ttemp5 0016                    ttemp6 0019                    ttemp7 001D  
                  status 000FD8                    wtemp8 0016       __size_ofi2___awdiv 00C4  
        __initialization 0356             __end_of_main 0286                   ??_main 0013  
          __activetblptr 000000           i2_servocontrol 0318                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _ADRESH 000FC4  
       ___awdiv@dividend 000B                   i2l1020 01D0                   i2l1022 01D8  
                 i2l1014 0232                   i2l1024 01F4                   i2l1016 023A  
                 i2l1026 0200                   i2l1018 0256                   i2l1042 0318  
                 i2l1050 0342                   i2l1044 0326                   i2l1052 0346  
                 i2l1046 0328                   i2l1048 0332             ?_T0_servoOff 0001  
                 _INTCON 000FF2                   _OSCCON 000FD3      __size_of_T0_servoOn 002C  
                 ___wmul 0286                ??___awdiv 000F                ??_getCAD0 000D  
       ___awdiv@quotient 0011           i2___awdiv@sign 0006   __end_ofi2_servocontrol 0338  
      __end_ofi2___awdiv 019A               __accesstop 0060  __end_of__initialization 0356  
          ___rparam_used 000001           __pcstackCOMRAM 0001                ?i2___wmul 0001  
          ?i2_T0_servoOn 0001          ?i2_servocontrol 0001               __pnvCOMRAM 0013  
                ?___wmul 000B           ??i2_T0_servoOn 0009               ??i2___wmul 0005  
           ??_T0_servoOn 0013                  i2u22_40 00E8                  i2u30_40 0326  
                i2u22_41 00E4                  i2u30_41 0322                  i2u23_40 0102  
                i2u23_41 00FE                  i2u24_40 0128                  i2u24_41 0124  
                i2u25_40 0146                  i2u25_41 0142                  i2u26_40 0162  
                i2u26_41 015E                  i2u27_40 0188                  i2u27_41 0184  
   __size_of_T0_servoOff 0036                  __Hparam 0000                  __Lparam 0000  
     __end_of_T0_servoOn 0232                  ___awdiv 0012          __size_of___wmul 0026  
                _getCAD0 02AC                  __pcinit 0356                  __ramtop 0800  
                __ptext0 025E                  __ptext1 02F8                  __ptext2 0206  
                __ptext3 0012                  __ptext4 019A                  __ptext5 0286  
                __ptext6 02AC                  __ptext8 0318                  __ptext9 0232  
 __size_ofi2_T0_servoOff 0036  __size_of_Interrupciones 034E           __pintcode_body 0338  
   end_of_initialization 0356                  int_func 0338      i2___wmul@multiplier 0001  
              _PORTCbits 000F82            ?_servocontrol 0001                _TRISAbits 000F92  
              _TRISCbits 000F94                i2___awdiv 00D6            i2_T0_servoOff 01D0  
   __end_ofi2_T0_servoOn 025E       i2___awdiv@dividend 0001         ??i2_servocontrol 0009  
         __end_of___wmul 02AC           ??_servocontrol 0013         i2___wmul@product 0005  
    start_initialization 0356       i2___awdiv@quotient 0007        __size_ofi2___wmul 0026  
             ?i2___awdiv 0001           ?i2_T0_servoOff 0001                 ??___wmul 000F  
         _Interrupciones 0008                __pintcode 0008                 ?___awdiv 000B  
               ?_getCAD0 000B   __end_of_Interrupciones 0356              ??i2___awdiv 0005  
        ??i2_T0_servoOff 0007    __size_ofi2_T0_servoOn 002C            ??_T0_servoOff 0011  
         ___wmul@product 000F     __end_of_servocontrol 0318          ?_Interrupciones 0001  
             _ADCON0bits 000FC2        ___wmul@multiplier 000B                 i2___wmul 02D2  
           i2_T0_servoOn 0232        i2___awdiv@divisor 0003        i2___awdiv@counter 0005  
               __Hrparam 0000      __end_of_T0_servoOff 01D0                 __Lrparam 0000  
       __size_of___awdiv 00C4    i2___wmul@multiplicand 0003         __size_of_getCAD0 0026  
               __ptext10 00D6                 __ptext11 01D0                 __ptext12 02D2  
          __size_of_main 0028                 int$flags 0015               _INTCONbits 000FF2  
  __size_of_servocontrol 0020                 intlevel2 0000              _T0_servoOff 019A  
           _servocontrol 02F8               _T0_servoOn 0206  __size_ofi2_servocontrol 0020  
       ??_Interrupciones 0009  
