

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Dec 09 17:21:40 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F4550 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     
    63                           	psect	nvCOMRAM
    64  000013                     __pnvCOMRAM:
    65                           	callstack 0
    66  000013                     _servo:
    67                           	callstack 0
    68  000013                     	ds	2
    69  0000                     _TRISCbits	set	3988
    70  0000                     _TRISAbits	set	3986
    71  0000                     _OSCCON	set	4051
    72  0000                     _INTCONbits	set	4082
    73  0000                     _PORTCbits	set	3970
    74  0000                     _TMR0H	set	4055
    75  0000                     _TMR0L	set	4054
    76  0000                     _T0CON	set	4053
    77  0000                     _INTCON	set	4082
    78  0000                     _ADRESH	set	4036
    79  0000                     _ADCON0bits	set	4034
    80  0000                     _ADCON2	set	4032
    81  0000                     _ADCON0	set	4034
    82  0000                     _ADCON1	set	4033
    83                           
    84                           ; #config settings
    85                           
    86                           	psect	cinit
    87  000346                     __pcinit:
    88                           	callstack 0
    89  000346                     start_initialization:
    90                           	callstack 0
    91  000346                     __initialization:
    92                           	callstack 0
    93  000346                     end_of_initialization:
    94                           	callstack 0
    95  000346                     __end_of__initialization:
    96                           	callstack 0
    97  000346  9015               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    98  000348  9215               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    99  00034A  0100               	movlb	0
   100  00034C  EF27  F001         	goto	_main	;jump to C main() function
   101                           
   102                           	psect	cstackCOMRAM
   103  000001                     __pcstackCOMRAM:
   104                           	callstack 0
   105  000001                     ?i2___wmul:
   106                           	callstack 0
   107  000001                     ?i2___awdiv:
   108                           	callstack 0
   109  000001                     i2___wmul@multiplier:
   110                           	callstack 0
   111  000001                     i2___awdiv@dividend:
   112                           	callstack 0
   113                           
   114                           ; 2 bytes @ 0x0
   115  000001                     	ds	2
   116  000003                     i2___wmul@multiplicand:
   117                           	callstack 0
   118  000003                     i2___awdiv@divisor:
   119                           	callstack 0
   120                           
   121                           ; 2 bytes @ 0x2
   122  000003                     	ds	2
   123  000005                     i2___awdiv@counter:
   124                           	callstack 0
   125  000005                     i2___wmul@product:
   126                           	callstack 0
   127                           
   128                           ; 2 bytes @ 0x4
   129  000005                     	ds	1
   130  000006                     i2___awdiv@sign:
   131                           	callstack 0
   132                           
   133                           ; 1 bytes @ 0x5
   134  000006                     	ds	1
   135  000007                     i2___awdiv@quotient:
   136                           	callstack 0
   137                           
   138                           ; 2 bytes @ 0x6
   139  000007                     	ds	2
   140  000009                     ??_Interrupciones:
   141  000009                     
   142                           ; 1 bytes @ 0x8
   143  000009                     	ds	2
   144  00000B                     ?_getCAD0:
   145                           	callstack 0
   146  00000B                     ?___wmul:
   147                           	callstack 0
   148  00000B                     ?___awdiv:
   149                           	callstack 0
   150  00000B                     ___wmul@multiplier:
   151                           	callstack 0
   152  00000B                     ___awdiv@dividend:
   153                           	callstack 0
   154                           
   155                           ; 2 bytes @ 0xA
   156  00000B                     	ds	2
   157  00000D                     ___wmul@multiplicand:
   158                           	callstack 0
   159  00000D                     ___awdiv@divisor:
   160                           	callstack 0
   161                           
   162                           ; 2 bytes @ 0xC
   163  00000D                     	ds	2
   164  00000F                     ___awdiv@counter:
   165                           	callstack 0
   166  00000F                     ___wmul@product:
   167                           	callstack 0
   168                           
   169                           ; 2 bytes @ 0xE
   170  00000F                     	ds	1
   171  000010                     ___awdiv@sign:
   172                           	callstack 0
   173                           
   174                           ; 1 bytes @ 0xF
   175  000010                     	ds	1
   176  000011                     ___awdiv@quotient:
   177                           	callstack 0
   178                           
   179                           ; 2 bytes @ 0x10
   180  000011                     	ds	2
   181  000013                     
   182                           ; 1 bytes @ 0x12
   183 ;;
   184 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   185 ;;
   186 ;; *************** function _main *****************
   187 ;; Defined at:
   188 ;;		line 60 in file "prueba.c"
   189 ;; Parameters:    Size  Location     Type
   190 ;;		None
   191 ;; Auto vars:     Size  Location     Type
   192 ;;		None
   193 ;; Return value:  Size  Location     Type
   194 ;;                  1    wreg      void 
   195 ;; Registers used:
   196 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   197 ;; Tracked objects:
   198 ;;		On entry : 0/0
   199 ;;		On exit  : 0/0
   200 ;;		Unchanged: 0/0
   201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   202 ;;      Params:         0       0       0       0       0       0       0       0       0
   203 ;;      Locals:         0       0       0       0       0       0       0       0       0
   204 ;;      Temps:          0       0       0       0       0       0       0       0       0
   205 ;;      Totals:         0       0       0       0       0       0       0       0       0
   206 ;;Total ram usage:        0 bytes
   207 ;; Hardware stack levels required when called:    7
   208 ;; This function calls:
   209 ;;		_getCAD0
   210 ;;		_servocontrol
   211 ;; This function is called by:
   212 ;;		Startup code after reset
   213 ;; This function uses a non-reentrant model
   214 ;;
   215                           
   216                           	psect	text0
   217  00024E                     __ptext0:
   218                           	callstack 0
   219  00024E                     _main:
   220                           	callstack 24
   221  00024E  0E70               	movlw	112
   222  000250  6ED3               	movwf	211,c	;volatile
   223  000252  8092               	bsf	146,0,c	;volatile
   224  000254  9494               	bcf	148,2,c	;volatile
   225  000256  0E00               	movlw	0
   226  000258  6E14               	movwf	(_servo+1)^0,c
   227  00025A  0E80               	movlw	128
   228  00025C  6E13               	movwf	_servo^0,c
   229  00025E  EC74  F001         	call	_servocontrol	;wreg free
   230  000262                     l1062:
   231  000262  EC4E  F001         	call	_getCAD0	;wreg free
   232  000266  C00B  F013         	movff	?_getCAD0,_servo
   233  00026A  C00C  F014         	movff	?_getCAD0+1,_servo+1
   234  00026E  EF31  F001         	goto	l1062
   235  000272  EF07  F000         	goto	start
   236  000276                     __end_of_main:
   237                           	callstack 0
   238                           
   239 ;; *************** function _servocontrol *****************
   240 ;; Defined at:
   241 ;;		line 43 in file "prueba.c"
   242 ;; Parameters:    Size  Location     Type
   243 ;;		None
   244 ;; Auto vars:     Size  Location     Type
   245 ;;		None
   246 ;; Return value:  Size  Location     Type
   247 ;;                  1    wreg      void 
   248 ;; Registers used:
   249 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   250 ;; Tracked objects:
   251 ;;		On entry : 0/0
   252 ;;		On exit  : 0/0
   253 ;;		Unchanged: 0/0
   254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   255 ;;      Params:         0       0       0       0       0       0       0       0       0
   256 ;;      Locals:         0       0       0       0       0       0       0       0       0
   257 ;;      Temps:          0       0       0       0       0       0       0       0       0
   258 ;;      Totals:         0       0       0       0       0       0       0       0       0
   259 ;;Total ram usage:        0 bytes
   260 ;; Hardware stack levels used:    1
   261 ;; Hardware stack levels required when called:    6
   262 ;; This function calls:
   263 ;;		_T0_servoOff
   264 ;;		_T0_servoOn
   265 ;; This function is called by:
   266 ;;		_main
   267 ;; This function uses a non-reentrant model
   268 ;;
   269                           
   270                           	psect	text1
   271  0002E8                     __ptext1:
   272                           	callstack 0
   273  0002E8                     _servocontrol:
   274                           	callstack 24
   275  0002E8                     
   276                           ;prueba.c: 44:  servocontrol();
   277  0002E8  A482               	btfss	130,2,c	;volatile
   278  0002EA  EF79  F001         	goto	u291
   279  0002EE  EF7B  F001         	goto	u290
   280  0002F2                     u291:
   281  0002F2  EF80  F001         	goto	l45
   282  0002F6                     u290:
   283  0002F6                     
   284                           ;prueba.c: 45: }
   285  0002F6  9482               	bcf	130,2,c	;volatile
   286  0002F8                     
   287                           ;prueba.c: 46: 
   288  0002F8  ECCD  F000         	call	_T0_servoOff	;wreg free
   289                           
   290                           ;prueba.c: 47: void main (void) {
   291  0002FC  EF83  F001         	goto	l47
   292  000300                     l45:
   293                           
   294                           ;prueba.c: 49:  TRISAbits.RA0=1;
   295  000300  8482               	bsf	130,2,c	;volatile
   296  000302                     
   297                           ;prueba.c: 50:  TRISCbits.RC2=0;
   298  000302  ECFB  F000         	call	_T0_servoOn	;wreg free
   299  000306                     l47:
   300  000306  0012               	return		;funcret
   301  000308                     __end_of_servocontrol:
   302                           	callstack 0
   303                           
   304 ;; *************** function _T0_servoOn *****************
   305 ;; Defined at:
   306 ;;		line 26 in file "prueba.c"
   307 ;; Parameters:    Size  Location     Type
   308 ;;		None
   309 ;; Auto vars:     Size  Location     Type
   310 ;;		None
   311 ;; Return value:  Size  Location     Type
   312 ;;                  1    wreg      void 
   313 ;; Registers used:
   314 ;;		wreg, status,2, status,0, cstack
   315 ;; Tracked objects:
   316 ;;		On entry : 0/0
   317 ;;		On exit  : 0/0
   318 ;;		Unchanged: 0/0
   319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   320 ;;      Params:         0       0       0       0       0       0       0       0       0
   321 ;;      Locals:         0       0       0       0       0       0       0       0       0
   322 ;;      Temps:          0       0       0       0       0       0       0       0       0
   323 ;;      Totals:         0       0       0       0       0       0       0       0       0
   324 ;;Total ram usage:        0 bytes
   325 ;; Hardware stack levels used:    1
   326 ;; Hardware stack levels required when called:    5
   327 ;; This function calls:
   328 ;;		___awdiv
   329 ;; This function is called by:
   330 ;;		_servocontrol
   331 ;; This function uses a non-reentrant model
   332 ;;
   333                           
   334                           	psect	text2
   335  0001F6                     __ptext2:
   336                           	callstack 0
   337  0001F6                     _T0_servoOn:
   338                           	callstack 24
   339  0001F6                     
   340                           ;prueba.c: 27:     TMR0H = 100;
   341  0001F6  0EA0               	movlw	160
   342  0001F8  6EF2               	movwf	242,c	;volatile
   343                           
   344                           ;prueba.c: 28:  }
   345  0001FA  0EC4               	movlw	196
   346  0001FC  6ED5               	movwf	213,c	;volatile
   347  0001FE                     
   348                           ;prueba.c: 29: 
   349  0001FE  C013  F00B         	movff	_servo,___awdiv@dividend
   350  000202  C014  F00C         	movff	_servo+1,___awdiv@dividend+1
   351  000206  0E00               	movlw	0
   352  000208  6E0E               	movwf	(___awdiv@divisor+1)^0,c
   353  00020A  0E04               	movlw	4
   354  00020C  6E0D               	movwf	___awdiv@divisor^0,c
   355  00020E  EC09  F000         	call	___awdiv	;wreg free
   356  000212  C00B  F013         	movff	?___awdiv,_servo
   357  000216  C00C  F014         	movff	?___awdiv+1,_servo+1
   358  00021A                     
   359                           ;prueba.c: 30: void servocontrol (){
   360  00021A  5013               	movf	_servo^0,w,c
   361  00021C  08D2               	sublw	210
   362  00021E  6ED6               	movwf	214,c	;volatile
   363  000220  0012               	return		;funcret
   364  000222                     __end_of_T0_servoOn:
   365                           	callstack 0
   366                           
   367 ;; *************** function ___awdiv *****************
   368 ;; Defined at:
   369 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awdiv.c"
   370 ;; Parameters:    Size  Location     Type
   371 ;;  dividend        2   10[COMRAM] int 
   372 ;;  divisor         2   12[COMRAM] int 
   373 ;; Auto vars:     Size  Location     Type
   374 ;;  quotient        2   16[COMRAM] int 
   375 ;;  sign            1   15[COMRAM] unsigned char 
   376 ;;  counter         1   14[COMRAM] unsigned char 
   377 ;; Return value:  Size  Location     Type
   378 ;;                  2   10[COMRAM] int 
   379 ;; Registers used:
   380 ;;		wreg, status,2, status,0
   381 ;; Tracked objects:
   382 ;;		On entry : 0/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   386 ;;      Params:         4       0       0       0       0       0       0       0       0
   387 ;;      Locals:         4       0       0       0       0       0       0       0       0
   388 ;;      Temps:          0       0       0       0       0       0       0       0       0
   389 ;;      Totals:         8       0       0       0       0       0       0       0       0
   390 ;;Total ram usage:        8 bytes
   391 ;; Hardware stack levels used:    1
   392 ;; Hardware stack levels required when called:    4
   393 ;; This function calls:
   394 ;;		Nothing
   395 ;; This function is called by:
   396 ;;		_T0_servoOn
   397 ;; This function uses a non-reentrant model
   398 ;;
   399                           
   400                           	psect	text3
   401  000012                     __ptext3:
   402                           	callstack 0
   403  000012                     ___awdiv:
   404                           	callstack 24
   405  000012  0E00               	movlw	0
   406  000014  6E10               	movwf	___awdiv@sign^0,c
   407  000016  BE0E               	btfsc	(___awdiv@divisor+1)^0,7,c
   408  000018  EF12  F000         	goto	u160
   409  00001C  EF10  F000         	goto	u161
   410  000020                     u161:
   411  000020  EF18  F000         	goto	l914
   412  000024                     u160:
   413  000024  6C0D               	negf	___awdiv@divisor^0,c
   414  000026  1E0E               	comf	(___awdiv@divisor+1)^0,f,c
   415  000028  B0D8               	btfsc	status,0,c
   416  00002A  2A0E               	incf	(___awdiv@divisor+1)^0,f,c
   417  00002C  0E01               	movlw	1
   418  00002E  6E10               	movwf	___awdiv@sign^0,c
   419  000030                     l914:
   420  000030  BE0C               	btfsc	(___awdiv@dividend+1)^0,7,c
   421  000032  EF1F  F000         	goto	u170
   422  000036  EF1D  F000         	goto	u171
   423  00003A                     u171:
   424  00003A  EF25  F000         	goto	l920
   425  00003E                     u170:
   426  00003E  6C0B               	negf	___awdiv@dividend^0,c
   427  000040  1E0C               	comf	(___awdiv@dividend+1)^0,f,c
   428  000042  B0D8               	btfsc	status,0,c
   429  000044  2A0C               	incf	(___awdiv@dividend+1)^0,f,c
   430  000046  0E01               	movlw	1
   431  000048  1A10               	xorwf	___awdiv@sign^0,f,c
   432  00004A                     l920:
   433  00004A  0E00               	movlw	0
   434  00004C  6E12               	movwf	(___awdiv@quotient+1)^0,c
   435  00004E  0E00               	movlw	0
   436  000050  6E11               	movwf	___awdiv@quotient^0,c
   437  000052  500D               	movf	___awdiv@divisor^0,w,c
   438  000054  100E               	iorwf	(___awdiv@divisor+1)^0,w,c
   439  000056  B4D8               	btfsc	status,2,c
   440  000058  EF30  F000         	goto	u181
   441  00005C  EF32  F000         	goto	u180
   442  000060                     u181:
   443  000060  EF5A  F000         	goto	l942
   444  000064                     u180:
   445  000064  0E01               	movlw	1
   446  000066  6E0F               	movwf	___awdiv@counter^0,c
   447  000068  EF3A  F000         	goto	l928
   448  00006C                     l926:
   449  00006C  90D8               	bcf	status,0,c
   450  00006E  360D               	rlcf	___awdiv@divisor^0,f,c
   451  000070  360E               	rlcf	(___awdiv@divisor+1)^0,f,c
   452  000072  2A0F               	incf	___awdiv@counter^0,f,c
   453  000074                     l928:
   454  000074  AE0E               	btfss	(___awdiv@divisor+1)^0,7,c
   455  000076  EF3F  F000         	goto	u191
   456  00007A  EF41  F000         	goto	u190
   457  00007E                     u191:
   458  00007E  EF36  F000         	goto	l926
   459  000082                     u190:
   460  000082                     l930:
   461  000082  90D8               	bcf	status,0,c
   462  000084  3611               	rlcf	___awdiv@quotient^0,f,c
   463  000086  3612               	rlcf	(___awdiv@quotient+1)^0,f,c
   464  000088  500D               	movf	___awdiv@divisor^0,w,c
   465  00008A  5C0B               	subwf	___awdiv@dividend^0,w,c
   466  00008C  500E               	movf	(___awdiv@divisor+1)^0,w,c
   467  00008E  580C               	subwfb	(___awdiv@dividend+1)^0,w,c
   468  000090  A0D8               	btfss	status,0,c
   469  000092  EF4D  F000         	goto	u201
   470  000096  EF4F  F000         	goto	u200
   471  00009A                     u201:
   472  00009A  EF54  F000         	goto	l938
   473  00009E                     u200:
   474  00009E  500D               	movf	___awdiv@divisor^0,w,c
   475  0000A0  5E0B               	subwf	___awdiv@dividend^0,f,c
   476  0000A2  500E               	movf	(___awdiv@divisor+1)^0,w,c
   477  0000A4  5A0C               	subwfb	(___awdiv@dividend+1)^0,f,c
   478  0000A6  8011               	bsf	___awdiv@quotient^0,0,c
   479  0000A8                     l938:
   480  0000A8  90D8               	bcf	status,0,c
   481  0000AA  320E               	rrcf	(___awdiv@divisor+1)^0,f,c
   482  0000AC  320D               	rrcf	___awdiv@divisor^0,f,c
   483  0000AE  2E0F               	decfsz	___awdiv@counter^0,f,c
   484  0000B0  EF41  F000         	goto	l930
   485  0000B4                     l942:
   486  0000B4  5010               	movf	___awdiv@sign^0,w,c
   487  0000B6  B4D8               	btfsc	status,2,c
   488  0000B8  EF60  F000         	goto	u211
   489  0000BC  EF62  F000         	goto	u210
   490  0000C0                     u211:
   491  0000C0  EF66  F000         	goto	l946
   492  0000C4                     u210:
   493  0000C4  6C11               	negf	___awdiv@quotient^0,c
   494  0000C6  1E12               	comf	(___awdiv@quotient+1)^0,f,c
   495  0000C8  B0D8               	btfsc	status,0,c
   496  0000CA  2A12               	incf	(___awdiv@quotient+1)^0,f,c
   497  0000CC                     l946:
   498  0000CC  C011  F00B         	movff	___awdiv@quotient,?___awdiv
   499  0000D0  C012  F00C         	movff	___awdiv@quotient+1,?___awdiv+1
   500  0000D4  0012               	return		;funcret
   501  0000D6                     __end_of___awdiv:
   502                           	callstack 0
   503                           
   504 ;; *************** function _T0_servoOff *****************
   505 ;; Defined at:
   506 ;;		line 33 in file "prueba.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;		None
   509 ;; Auto vars:     Size  Location     Type
   510 ;;		None
   511 ;; Return value:  Size  Location     Type
   512 ;;                  1    wreg      void 
   513 ;; Registers used:
   514 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   520 ;;      Params:         0       0       0       0       0       0       0       0       0
   521 ;;      Locals:         0       0       0       0       0       0       0       0       0
   522 ;;      Temps:          0       0       0       0       0       0       0       0       0
   523 ;;      Totals:         0       0       0       0       0       0       0       0       0
   524 ;;Total ram usage:        0 bytes
   525 ;; Hardware stack levels used:    1
   526 ;; Hardware stack levels required when called:    5
   527 ;; This function calls:
   528 ;;		___wmul
   529 ;; This function is called by:
   530 ;;		_servocontrol
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534                           	psect	text4
   535  00019A                     __ptext4:
   536                           	callstack 0
   537  00019A                     _T0_servoOff:
   538                           	callstack 24
   539  00019A                     
   540                           ;prueba.c: 34:  }
   541  00019A  0EA0               	movlw	160
   542  00019C  6EF2               	movwf	242,c	;volatile
   543                           
   544                           ;prueba.c: 35:  else{
   545  00019E  0EC7               	movlw	199
   546  0001A0  6ED5               	movwf	213,c	;volatile
   547  0001A2                     
   548                           ;prueba.c: 36:   PORTCbits.RC2 = 1;
   549  0001A2  C013  F00B         	movff	_servo,___wmul@multiplier
   550  0001A6  C014  F00C         	movff	_servo+1,___wmul@multiplier+1
   551  0001AA  0E00               	movlw	0
   552  0001AC  6E0E               	movwf	(___wmul@multiplicand+1)^0,c
   553  0001AE  0E09               	movlw	9
   554  0001B0  6E0D               	movwf	___wmul@multiplicand^0,c
   555  0001B2  EC3B  F001         	call	___wmul	;wreg free
   556  0001B6  C00B  F013         	movff	?___wmul,_servo
   557  0001BA  C00C  F014         	movff	?___wmul+1,_servo+1
   558  0001BE                     
   559                           ;prueba.c: 39: }
   560  0001BE  0E6C               	movlw	108
   561  0001C0  6ED6               	movwf	214,c	;volatile
   562  0001C2                     
   563                           ;prueba.c: 40: 
   564  0001C2  0E64               	movlw	100
   565  0001C4  6ED7               	movwf	215,c	;volatile
   566  0001C6  0012               	return		;funcret
   567  0001C8                     __end_of_T0_servoOff:
   568                           	callstack 0
   569                           
   570 ;; *************** function ___wmul *****************
   571 ;; Defined at:
   572 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;  multiplier      2   10[COMRAM] unsigned int 
   575 ;;  multiplicand    2   12[COMRAM] unsigned int 
   576 ;; Auto vars:     Size  Location     Type
   577 ;;  product         2   14[COMRAM] unsigned int 
   578 ;; Return value:  Size  Location     Type
   579 ;;                  2   10[COMRAM] unsigned int 
   580 ;; Registers used:
   581 ;;		wreg, status,2, status,0, prodl, prodh
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   587 ;;      Params:         4       0       0       0       0       0       0       0       0
   588 ;;      Locals:         2       0       0       0       0       0       0       0       0
   589 ;;      Temps:          0       0       0       0       0       0       0       0       0
   590 ;;      Totals:         6       0       0       0       0       0       0       0       0
   591 ;;Total ram usage:        6 bytes
   592 ;; Hardware stack levels used:    1
   593 ;; Hardware stack levels required when called:    4
   594 ;; This function calls:
   595 ;;		Nothing
   596 ;; This function is called by:
   597 ;;		_T0_servoOff
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           	psect	text5
   602  000276                     __ptext5:
   603                           	callstack 0
   604  000276                     ___wmul:
   605                           	callstack 24
   606  000276  500B               	movf	___wmul@multiplier^0,w,c
   607  000278  020D               	mulwf	___wmul@multiplicand^0,c
   608  00027A  CFF3 F00F          	movff	prodl,___wmul@product
   609  00027E  CFF4 F010          	movff	prodh,___wmul@product+1
   610  000282  500B               	movf	___wmul@multiplier^0,w,c
   611  000284  020E               	mulwf	(___wmul@multiplicand+1)^0,c
   612  000286  50F3               	movf	243,w,c
   613  000288  2610               	addwf	(___wmul@product+1)^0,f,c
   614  00028A  500C               	movf	(___wmul@multiplier+1)^0,w,c
   615  00028C  020D               	mulwf	___wmul@multiplicand^0,c
   616  00028E  50F3               	movf	243,w,c
   617  000290  2610               	addwf	(___wmul@product+1)^0,f,c
   618  000292  C00F  F00B         	movff	___wmul@product,?___wmul
   619  000296  C010  F00C         	movff	___wmul@product+1,?___wmul+1
   620  00029A  0012               	return		;funcret
   621  00029C                     __end_of___wmul:
   622                           	callstack 0
   623                           
   624 ;; *************** function _getCAD0 *****************
   625 ;; Defined at:
   626 ;;		line 15 in file "prueba.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;		None
   629 ;; Auto vars:     Size  Location     Type
   630 ;;		None
   631 ;; Return value:  Size  Location     Type
   632 ;;                  2   10[COMRAM] short 
   633 ;; Registers used:
   634 ;;		wreg, status,2
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   640 ;;      Params:         2       0       0       0       0       0       0       0       0
   641 ;;      Locals:         0       0       0       0       0       0       0       0       0
   642 ;;      Temps:          0       0       0       0       0       0       0       0       0
   643 ;;      Totals:         2       0       0       0       0       0       0       0       0
   644 ;;Total ram usage:        2 bytes
   645 ;; Hardware stack levels used:    1
   646 ;; Hardware stack levels required when called:    4
   647 ;; This function calls:
   648 ;;		Nothing
   649 ;; This function is called by:
   650 ;;		_main
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           	psect	text6
   655  00029C                     __ptext6:
   656                           	callstack 0
   657  00029C                     _getCAD0:
   658                           	callstack 26
   659  00029C                     
   660                           ;prueba.c: 16:     servo = servo / 4;
   661  00029C  0E0E               	movlw	14
   662  00029E  6EC1               	movwf	193,c	;volatile
   663                           
   664                           ;prueba.c: 17:  TMR0L = 210 - servo;
   665  0002A0  0E00               	movlw	0
   666  0002A2  6EC2               	movwf	194,c	;volatile
   667                           
   668                           ;prueba.c: 18:  }
   669  0002A4  0E25               	movlw	37
   670  0002A6  6EC0               	movwf	192,c	;volatile
   671  0002A8                     
   672                           ;prueba.c: 19: 
   673  0002A8  80C2               	bsf	194,0,c	;volatile
   674  0002AA                     
   675                           ;prueba.c: 20: void T0_servoOff(){
   676  0002AA  82C2               	bsf	194,1,c	;volatile
   677  0002AC                     l33:
   678                           
   679                           ;prueba.c: 21:  INTCON = 0b10100000;
   680  0002AC  B2C2               	btfsc	194,1,c	;volatile
   681  0002AE  EF5B  F001         	goto	u281
   682  0002B2  EF5D  F001         	goto	u280
   683  0002B6                     u281:
   684  0002B6  EF56  F001         	goto	l33
   685  0002BA                     u280:
   686  0002BA                     
   687                           ;prueba.c: 23:  servo = servo * 9;
   688  0002BA  CFC4 F00B          	movff	4036,?_getCAD0	;volatile
   689  0002BE  6A0C               	clrf	(?_getCAD0+1)^0,c
   690  0002C0  0012               	return		;funcret
   691  0002C2                     __end_of_getCAD0:
   692                           	callstack 0
   693                           
   694 ;; *************** function _Interrupciones *****************
   695 ;; Defined at:
   696 ;;		line 54 in file "prueba.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;		None
   699 ;; Auto vars:     Size  Location     Type
   700 ;;		None
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   710 ;;      Params:         0       0       0       0       0       0       0       0       0
   711 ;;      Locals:         0       0       0       0       0       0       0       0       0
   712 ;;      Temps:          2       0       0       0       0       0       0       0       0
   713 ;;      Totals:         2       0       0       0       0       0       0       0       0
   714 ;;Total ram usage:        2 bytes
   715 ;; Hardware stack levels used:    1
   716 ;; Hardware stack levels required when called:    3
   717 ;; This function calls:
   718 ;;		i2_servocontrol
   719 ;; This function is called by:
   720 ;;		Interrupt level 2
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           	psect	intcode
   725  000008                     __pintcode:
   726                           	callstack 0
   727  000008                     _Interrupciones:
   728                           	callstack 24
   729                           
   730                           ;incstack = 0
   731  000008  8215               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   732  00000A  ED94  F001         	call	int_func,f	;refresh shadow registers
   733                           
   734                           	psect	intcode_body
   735  000328                     __pintcode_body:
   736                           	callstack 24
   737  000328                     int_func:
   738                           	callstack 24
   739  000328  0006               	pop		; remove dummy address from shadow register refresh
   740  00032A  CFF3 F009          	movff	prodl,??_Interrupciones
   741  00032E  CFF4 F00A          	movff	prodh,??_Interrupciones+1
   742  000332                     
   743                           ;prueba.c: 55: 
   744  000332  9EF2               	bcf	242,7,c	;volatile
   745                           
   746                           ;prueba.c: 56:  }
   747  000334  94F2               	bcf	242,2,c	;volatile
   748  000336                     
   749                           ;prueba.c: 57:  return;
   750  000336  EC84  F001         	call	i2_servocontrol	;wreg free
   751  00033A  C00A  FFF4         	movff	??_Interrupciones+1,prodh
   752  00033E  C009  FFF3         	movff	??_Interrupciones,prodl
   753  000342  9215               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   754  000344  0011               	retfie		f
   755  000346                     __end_of_Interrupciones:
   756                           	callstack 0
   757                           
   758 ;; *************** function i2_servocontrol *****************
   759 ;; Defined at:
   760 ;;		line 43 in file "prueba.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;		None
   763 ;; Auto vars:     Size  Location     Type
   764 ;;		None
   765 ;; Return value:  Size  Location     Type
   766 ;;                  1    wreg      void 
   767 ;; Registers used:
   768 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   774 ;;      Params:         0       0       0       0       0       0       0       0       0
   775 ;;      Locals:         0       0       0       0       0       0       0       0       0
   776 ;;      Temps:          0       0       0       0       0       0       0       0       0
   777 ;;      Totals:         0       0       0       0       0       0       0       0       0
   778 ;;Total ram usage:        0 bytes
   779 ;; Hardware stack levels used:    1
   780 ;; Hardware stack levels required when called:    2
   781 ;; This function calls:
   782 ;;		i2_T0_servoOff
   783 ;;		i2_T0_servoOn
   784 ;; This function is called by:
   785 ;;		_Interrupciones
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           	psect	text8
   790  000308                     __ptext8:
   791                           	callstack 0
   792  000308                     i2_servocontrol:
   793                           	callstack 24
   794  000308                     
   795                           ;prueba.c: 44:  servocontrol();
   796  000308  A482               	btfss	130,2,c	;volatile
   797  00030A  EF89  F001         	goto	i2u30_41
   798  00030E  EF8B  F001         	goto	i2u30_40
   799  000312                     i2u30_41:
   800  000312  EF90  F001         	goto	i2l45
   801  000316                     i2u30_40:
   802  000316                     
   803                           ;prueba.c: 45: }
   804  000316  9482               	bcf	130,2,c	;volatile
   805  000318                     
   806                           ;prueba.c: 46: 
   807  000318  ECE4  F000         	call	i2_T0_servoOff	;wreg free
   808                           
   809                           ;prueba.c: 47: void main (void) {
   810  00031C  EF93  F001         	goto	i2l47
   811  000320                     i2l45:
   812                           
   813                           ;prueba.c: 49:  TRISAbits.RA0=1;
   814  000320  8482               	bsf	130,2,c	;volatile
   815  000322                     
   816                           ;prueba.c: 50:  TRISCbits.RC2=0;
   817  000322  EC11  F001         	call	i2_T0_servoOn	;wreg free
   818  000326                     i2l47:
   819  000326  0012               	return		;funcret
   820  000328                     __end_ofi2_servocontrol:
   821                           	callstack 0
   822                           
   823 ;; *************** function i2_T0_servoOn *****************
   824 ;; Defined at:
   825 ;;		line 26 in file "prueba.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;		None
   828 ;; Auto vars:     Size  Location     Type
   829 ;;		None
   830 ;; Return value:  Size  Location     Type
   831 ;;                  1    wreg      void 
   832 ;; Registers used:
   833 ;;		wreg, status,2, status,0, cstack
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   839 ;;      Params:         0       0       0       0       0       0       0       0       0
   840 ;;      Locals:         0       0       0       0       0       0       0       0       0
   841 ;;      Temps:          0       0       0       0       0       0       0       0       0
   842 ;;      Totals:         0       0       0       0       0       0       0       0       0
   843 ;;Total ram usage:        0 bytes
   844 ;; Hardware stack levels used:    1
   845 ;; Hardware stack levels required when called:    1
   846 ;; This function calls:
   847 ;;		i2___awdiv
   848 ;; This function is called by:
   849 ;;		i2_servocontrol
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text9
   854  000222                     __ptext9:
   855                           	callstack 0
   856  000222                     i2_T0_servoOn:
   857                           	callstack 24
   858  000222                     
   859                           ;prueba.c: 27:     TMR0H = 100;
   860  000222  0EA0               	movlw	160
   861  000224  6EF2               	movwf	242,c	;volatile
   862                           
   863                           ;prueba.c: 28:  }
   864  000226  0EC4               	movlw	196
   865  000228  6ED5               	movwf	213,c	;volatile
   866  00022A                     
   867                           ;prueba.c: 29: 
   868  00022A  C013  F001         	movff	_servo,i2___awdiv@dividend
   869  00022E  C014  F002         	movff	_servo+1,i2___awdiv@dividend+1
   870  000232  0E00               	movlw	0
   871  000234  6E04               	movwf	(i2___awdiv@divisor+1)^0,c
   872  000236  0E04               	movlw	4
   873  000238  6E03               	movwf	i2___awdiv@divisor^0,c
   874  00023A  EC6B  F000         	call	i2___awdiv	;wreg free
   875  00023E  C001  F013         	movff	?i2___awdiv,_servo
   876  000242  C002  F014         	movff	?i2___awdiv+1,_servo+1
   877  000246                     
   878                           ;prueba.c: 30: void servocontrol (){
   879  000246  5013               	movf	_servo^0,w,c
   880  000248  08D2               	sublw	210
   881  00024A  6ED6               	movwf	214,c	;volatile
   882  00024C  0012               	return		;funcret
   883  00024E                     __end_ofi2_T0_servoOn:
   884                           	callstack 0
   885                           
   886 ;; *************** function i2___awdiv *****************
   887 ;; Defined at:
   888 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awdiv.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;  dividend        2    0[COMRAM] int 
   891 ;;  divisor         2    2[COMRAM] int 
   892 ;; Auto vars:     Size  Location     Type
   893 ;;  quotient        2    6[COMRAM] int 
   894 ;;  sign            1    5[COMRAM] unsigned char 
   895 ;;  counter         1    4[COMRAM] unsigned char 
   896 ;; Return value:  Size  Location     Type
   897 ;;                  2    0[COMRAM] int 
   898 ;; Registers used:
   899 ;;		wreg, status,2, status,0
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   905 ;;      Params:         4       0       0       0       0       0       0       0       0
   906 ;;      Locals:         4       0       0       0       0       0       0       0       0
   907 ;;      Temps:          0       0       0       0       0       0       0       0       0
   908 ;;      Totals:         8       0       0       0       0       0       0       0       0
   909 ;;Total ram usage:        8 bytes
   910 ;; Hardware stack levels used:    1
   911 ;; This function calls:
   912 ;;		Nothing
   913 ;; This function is called by:
   914 ;;		i2_T0_servoOn
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           	psect	text10
   919  0000D6                     __ptext10:
   920                           	callstack 0
   921  0000D6                     i2___awdiv:
   922                           	callstack 24
   923  0000D6  0E00               	movlw	0
   924  0000D8  6E06               	movwf	i2___awdiv@sign^0,c
   925  0000DA  BE04               	btfsc	(i2___awdiv@divisor+1)^0,7,c
   926  0000DC  EF74  F000         	goto	i2u22_40
   927  0000E0  EF72  F000         	goto	i2u22_41
   928  0000E4                     i2u22_41:
   929  0000E4  EF7A  F000         	goto	i2l964
   930  0000E8                     i2u22_40:
   931  0000E8  6C03               	negf	i2___awdiv@divisor^0,c
   932  0000EA  1E04               	comf	(i2___awdiv@divisor+1)^0,f,c
   933  0000EC  B0D8               	btfsc	status,0,c
   934  0000EE  2A04               	incf	(i2___awdiv@divisor+1)^0,f,c
   935  0000F0  0E01               	movlw	1
   936  0000F2  6E06               	movwf	i2___awdiv@sign^0,c
   937  0000F4                     i2l964:
   938  0000F4  BE02               	btfsc	(i2___awdiv@dividend+1)^0,7,c
   939  0000F6  EF81  F000         	goto	i2u23_40
   940  0000FA  EF7F  F000         	goto	i2u23_41
   941  0000FE                     i2u23_41:
   942  0000FE  EF87  F000         	goto	i2l970
   943  000102                     i2u23_40:
   944  000102  6C01               	negf	i2___awdiv@dividend^0,c
   945  000104  1E02               	comf	(i2___awdiv@dividend+1)^0,f,c
   946  000106  B0D8               	btfsc	status,0,c
   947  000108  2A02               	incf	(i2___awdiv@dividend+1)^0,f,c
   948  00010A  0E01               	movlw	1
   949  00010C  1A06               	xorwf	i2___awdiv@sign^0,f,c
   950  00010E                     i2l970:
   951  00010E  0E00               	movlw	0
   952  000110  6E08               	movwf	(i2___awdiv@quotient+1)^0,c
   953  000112  0E00               	movlw	0
   954  000114  6E07               	movwf	i2___awdiv@quotient^0,c
   955  000116  5003               	movf	i2___awdiv@divisor^0,w,c
   956  000118  1004               	iorwf	(i2___awdiv@divisor+1)^0,w,c
   957  00011A  B4D8               	btfsc	status,2,c
   958  00011C  EF92  F000         	goto	i2u24_41
   959  000120  EF94  F000         	goto	i2u24_40
   960  000124                     i2u24_41:
   961  000124  EFBC  F000         	goto	i2l992
   962  000128                     i2u24_40:
   963  000128  0E01               	movlw	1
   964  00012A  6E05               	movwf	i2___awdiv@counter^0,c
   965  00012C  EF9C  F000         	goto	i2l978
   966  000130                     i2l976:
   967  000130  90D8               	bcf	status,0,c
   968  000132  3603               	rlcf	i2___awdiv@divisor^0,f,c
   969  000134  3604               	rlcf	(i2___awdiv@divisor+1)^0,f,c
   970  000136  2A05               	incf	i2___awdiv@counter^0,f,c
   971  000138                     i2l978:
   972  000138  AE04               	btfss	(i2___awdiv@divisor+1)^0,7,c
   973  00013A  EFA1  F000         	goto	i2u25_41
   974  00013E  EFA3  F000         	goto	i2u25_40
   975  000142                     i2u25_41:
   976  000142  EF98  F000         	goto	i2l976
   977  000146                     i2u25_40:
   978  000146                     i2l980:
   979  000146  90D8               	bcf	status,0,c
   980  000148  3607               	rlcf	i2___awdiv@quotient^0,f,c
   981  00014A  3608               	rlcf	(i2___awdiv@quotient+1)^0,f,c
   982  00014C  5003               	movf	i2___awdiv@divisor^0,w,c
   983  00014E  5C01               	subwf	i2___awdiv@dividend^0,w,c
   984  000150  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
   985  000152  5802               	subwfb	(i2___awdiv@dividend+1)^0,w,c
   986  000154  A0D8               	btfss	status,0,c
   987  000156  EFAF  F000         	goto	i2u26_41
   988  00015A  EFB1  F000         	goto	i2u26_40
   989  00015E                     i2u26_41:
   990  00015E  EFB6  F000         	goto	i2l988
   991  000162                     i2u26_40:
   992  000162  5003               	movf	i2___awdiv@divisor^0,w,c
   993  000164  5E01               	subwf	i2___awdiv@dividend^0,f,c
   994  000166  5004               	movf	(i2___awdiv@divisor+1)^0,w,c
   995  000168  5A02               	subwfb	(i2___awdiv@dividend+1)^0,f,c
   996  00016A  8007               	bsf	i2___awdiv@quotient^0,0,c
   997  00016C                     i2l988:
   998  00016C  90D8               	bcf	status,0,c
   999  00016E  3204               	rrcf	(i2___awdiv@divisor+1)^0,f,c
  1000  000170  3203               	rrcf	i2___awdiv@divisor^0,f,c
  1001  000172  2E05               	decfsz	i2___awdiv@counter^0,f,c
  1002  000174  EFA3  F000         	goto	i2l980
  1003  000178                     i2l992:
  1004  000178  5006               	movf	i2___awdiv@sign^0,w,c
  1005  00017A  B4D8               	btfsc	status,2,c
  1006  00017C  EFC2  F000         	goto	i2u27_41
  1007  000180  EFC4  F000         	goto	i2u27_40
  1008  000184                     i2u27_41:
  1009  000184  EFC8  F000         	goto	i2l996
  1010  000188                     i2u27_40:
  1011  000188  6C07               	negf	i2___awdiv@quotient^0,c
  1012  00018A  1E08               	comf	(i2___awdiv@quotient+1)^0,f,c
  1013  00018C  B0D8               	btfsc	status,0,c
  1014  00018E  2A08               	incf	(i2___awdiv@quotient+1)^0,f,c
  1015  000190                     i2l996:
  1016  000190  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
  1017  000194  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  1018  000198  0012               	return		;funcret
  1019  00019A                     __end_ofi2___awdiv:
  1020                           	callstack 0
  1021                           
  1022 ;; *************** function i2_T0_servoOff *****************
  1023 ;; Defined at:
  1024 ;;		line 33 in file "prueba.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;		None
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;		None
  1029 ;; Return value:  Size  Location     Type
  1030 ;;                  1    wreg      void 
  1031 ;; Registers used:
  1032 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1038 ;;      Params:         0       0       0       0       0       0       0       0       0
  1039 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1040 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1041 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1042 ;;Total ram usage:        0 bytes
  1043 ;; Hardware stack levels used:    1
  1044 ;; Hardware stack levels required when called:    1
  1045 ;; This function calls:
  1046 ;;		i2___wmul
  1047 ;; This function is called by:
  1048 ;;		i2_servocontrol
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           
  1052                           	psect	text11
  1053  0001C8                     __ptext11:
  1054                           	callstack 0
  1055  0001C8                     i2_T0_servoOff:
  1056                           	callstack 24
  1057  0001C8                     
  1058                           ;prueba.c: 34:  }
  1059  0001C8  0EA0               	movlw	160
  1060  0001CA  6EF2               	movwf	242,c	;volatile
  1061                           
  1062                           ;prueba.c: 35:  else{
  1063  0001CC  0EC7               	movlw	199
  1064  0001CE  6ED5               	movwf	213,c	;volatile
  1065  0001D0                     
  1066                           ;prueba.c: 36:   PORTCbits.RC2 = 1;
  1067  0001D0  C013  F001         	movff	_servo,i2___wmul@multiplier
  1068  0001D4  C014  F002         	movff	_servo+1,i2___wmul@multiplier+1
  1069  0001D8  0E00               	movlw	0
  1070  0001DA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  1071  0001DC  0E09               	movlw	9
  1072  0001DE  6E03               	movwf	i2___wmul@multiplicand^0,c
  1073  0001E0  EC61  F001         	call	i2___wmul	;wreg free
  1074  0001E4  C001  F013         	movff	?i2___wmul,_servo
  1075  0001E8  C002  F014         	movff	?i2___wmul+1,_servo+1
  1076  0001EC                     
  1077                           ;prueba.c: 39: }
  1078  0001EC  0E6C               	movlw	108
  1079  0001EE  6ED6               	movwf	214,c	;volatile
  1080  0001F0                     
  1081                           ;prueba.c: 40: 
  1082  0001F0  0E64               	movlw	100
  1083  0001F2  6ED7               	movwf	215,c	;volatile
  1084  0001F4  0012               	return		;funcret
  1085  0001F6                     __end_ofi2_T0_servoOff:
  1086                           	callstack 0
  1087                           
  1088 ;; *************** function i2___wmul *****************
  1089 ;; Defined at:
  1090 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;  multiplier      2    0[COMRAM] unsigned int 
  1093 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;  product         2    4[COMRAM] unsigned int 
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  2    0[COMRAM] unsigned int 
  1098 ;; Registers used:
  1099 ;;		wreg, status,2, status,0, prodl, prodh
  1100 ;; Tracked objects:
  1101 ;;		On entry : 0/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1105 ;;      Params:         4       0       0       0       0       0       0       0       0
  1106 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1107 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1108 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1109 ;;Total ram usage:        6 bytes
  1110 ;; Hardware stack levels used:    1
  1111 ;; This function calls:
  1112 ;;		Nothing
  1113 ;; This function is called by:
  1114 ;;		i2_T0_servoOff
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           	psect	text12
  1119  0002C2                     __ptext12:
  1120                           	callstack 0
  1121  0002C2                     i2___wmul:
  1122                           	callstack 24
  1123  0002C2  5001               	movf	i2___wmul@multiplier^0,w,c
  1124  0002C4  0203               	mulwf	i2___wmul@multiplicand^0,c
  1125  0002C6  CFF3 F005          	movff	prodl,i2___wmul@product
  1126  0002CA  CFF4 F006          	movff	prodh,i2___wmul@product+1
  1127  0002CE  5001               	movf	i2___wmul@multiplier^0,w,c
  1128  0002D0  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  1129  0002D2  50F3               	movf	243,w,c
  1130  0002D4  2606               	addwf	(i2___wmul@product+1)^0,f,c
  1131  0002D6  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  1132  0002D8  0203               	mulwf	i2___wmul@multiplicand^0,c
  1133  0002DA  50F3               	movf	243,w,c
  1134  0002DC  2606               	addwf	(i2___wmul@product+1)^0,f,c
  1135  0002DE  C005  F001         	movff	i2___wmul@product,?i2___wmul
  1136  0002E2  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  1137  0002E6  0012               	return		;funcret
  1138  0002E8                     __end_ofi2___wmul:
  1139                           	callstack 0
  1140  0000                     
  1141                           	psect	rparam
  1142  0000                     
  1143                           	psect	temp
  1144  000015                     btemp:
  1145                           	callstack 0
  1146  000015                     	ds	1
  1147  0000                     int$flags	set	btemp
  1148  0000                     wtemp8	set	btemp+1
  1149  0000                     ttemp5	set	btemp+1
  1150  0000                     ttemp6	set	btemp+4
  1151  0000                     ttemp7	set	btemp+8
  1152                           
  1153                           	psect	idloc
  1154                           
  1155                           ;Config register IDLOC0 @ 0x200000
  1156                           ;	unspecified, using default values
  1157  200000                     	org	2097152
  1158  200000  FF                 	db	255
  1159                           
  1160                           ;Config register IDLOC1 @ 0x200001
  1161                           ;	unspecified, using default values
  1162  200001                     	org	2097153
  1163  200001  FF                 	db	255
  1164                           
  1165                           ;Config register IDLOC2 @ 0x200002
  1166                           ;	unspecified, using default values
  1167  200002                     	org	2097154
  1168  200002  FF                 	db	255
  1169                           
  1170                           ;Config register IDLOC3 @ 0x200003
  1171                           ;	unspecified, using default values
  1172  200003                     	org	2097155
  1173  200003  FF                 	db	255
  1174                           
  1175                           ;Config register IDLOC4 @ 0x200004
  1176                           ;	unspecified, using default values
  1177  200004                     	org	2097156
  1178  200004  FF                 	db	255
  1179                           
  1180                           ;Config register IDLOC5 @ 0x200005
  1181                           ;	unspecified, using default values
  1182  200005                     	org	2097157
  1183  200005  FF                 	db	255
  1184                           
  1185                           ;Config register IDLOC6 @ 0x200006
  1186                           ;	unspecified, using default values
  1187  200006                     	org	2097158
  1188  200006  FF                 	db	255
  1189                           
  1190                           ;Config register IDLOC7 @ 0x200007
  1191                           ;	unspecified, using default values
  1192  200007                     	org	2097159
  1193  200007  FF                 	db	255
  1194                           
  1195                           	psect	config
  1196                           
  1197                           ;Config register CONFIG1L @ 0x300000
  1198                           ;	PLL Prescaler Selection bits
  1199                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1200                           ;	System Clock Postscaler Selection bits
  1201                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1202                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1203                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1204  300000                     	org	3145728
  1205  300000  00                 	db	0
  1206                           
  1207                           ;Config register CONFIG1H @ 0x300001
  1208                           ;	Oscillator Selection bits
  1209                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  1210                           ;	Fail-Safe Clock Monitor Enable bit
  1211                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1212                           ;	Internal/External Oscillator Switchover bit
  1213                           ;	IESO = ON, Oscillator Switchover mode enabled
  1214  300001                     	org	3145729
  1215  300001  88                 	db	136
  1216                           
  1217                           ;Config register CONFIG2L @ 0x300002
  1218                           ;	Power-up Timer Enable bit
  1219                           ;	PWRT = ON, PWRT enabled
  1220                           ;	Brown-out Reset Enable bits
  1221                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1222                           ;	Brown-out Reset Voltage bits
  1223                           ;	BORV = 3, Minimum setting 2.05V
  1224                           ;	USB Voltage Regulator Enable bit
  1225                           ;	VREGEN = OFF, USB voltage regulator disabled
  1226  300002                     	org	3145730
  1227  300002  18                 	db	24
  1228                           
  1229                           ;Config register CONFIG2H @ 0x300003
  1230                           ;	Watchdog Timer Enable bit
  1231                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1232                           ;	Watchdog Timer Postscale Select bits
  1233                           ;	WDTPS = 32768, 1:32768
  1234  300003                     	org	3145731
  1235  300003  1E                 	db	30
  1236                           
  1237                           ; Padding undefined space
  1238  300004                     	org	3145732
  1239  300004  FF                 	db	255
  1240                           
  1241                           ;Config register CONFIG3H @ 0x300005
  1242                           ;	CCP2 MUX bit
  1243                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1244                           ;	PORTB A/D Enable bit
  1245                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1246                           ;	Low-Power Timer 1 Oscillator Enable bit
  1247                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1248                           ;	MCLR Pin Enable bit
  1249                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  1250  300005                     	org	3145733
  1251  300005  01                 	db	1
  1252                           
  1253                           ;Config register CONFIG4L @ 0x300006
  1254                           ;	Stack Full/Underflow Reset Enable bit
  1255                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1256                           ;	Single-Supply ICSP Enable bit
  1257                           ;	LVP = OFF, Single-Supply ICSP disabled
  1258                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1259                           ;	ICPRT = 0x0, unprogrammed default
  1260                           ;	Extended Instruction Set Enable bit
  1261                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1262                           ;	Background Debugger Enable bit
  1263                           ;	DEBUG = 0x1, unprogrammed default
  1264  300006                     	org	3145734
  1265  300006  81                 	db	129
  1266                           
  1267                           ; Padding undefined space
  1268  300007                     	org	3145735
  1269  300007  FF                 	db	255
  1270                           
  1271                           ;Config register CONFIG5L @ 0x300008
  1272                           ;	Code Protection bit
  1273                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1274                           ;	Code Protection bit
  1275                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1276                           ;	Code Protection bit
  1277                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1278                           ;	Code Protection bit
  1279                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1280  300008                     	org	3145736
  1281  300008  0F                 	db	15
  1282                           
  1283                           ;Config register CONFIG5H @ 0x300009
  1284                           ;	Boot Block Code Protection bit
  1285                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1286                           ;	Data EEPROM Code Protection bit
  1287                           ;	CPD = OFF, Data EEPROM is not code-protected
  1288  300009                     	org	3145737
  1289  300009  C0                 	db	192
  1290                           
  1291                           ;Config register CONFIG6L @ 0x30000A
  1292                           ;	Write Protection bit
  1293                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1294                           ;	Write Protection bit
  1295                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1296                           ;	Write Protection bit
  1297                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1298                           ;	Write Protection bit
  1299                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1300  30000A                     	org	3145738
  1301  30000A  0F                 	db	15
  1302                           
  1303                           ;Config register CONFIG6H @ 0x30000B
  1304                           ;	Configuration Register Write Protection bit
  1305                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1306                           ;	Boot Block Write Protection bit
  1307                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1308                           ;	Data EEPROM Write Protection bit
  1309                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1310  30000B                     	org	3145739
  1311  30000B  E0                 	db	224
  1312                           
  1313                           ;Config register CONFIG7L @ 0x30000C
  1314                           ;	Table Read Protection bit
  1315                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1316                           ;	Table Read Protection bit
  1317                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1318                           ;	Table Read Protection bit
  1319                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1320                           ;	Table Read Protection bit
  1321                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1322  30000C                     	org	3145740
  1323  30000C  0F                 	db	15
  1324                           
  1325                           ;Config register CONFIG7H @ 0x30000D
  1326                           ;	Boot Block Table Read Protection bit
  1327                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1328  30000D                     	org	3145741
  1329  30000D  40                 	db	64
  1330                           tosu	equ	0xFFF
  1331                           tosh	equ	0xFFE
  1332                           tosl	equ	0xFFD
  1333                           stkptr	equ	0xFFC
  1334                           pclatu	equ	0xFFB
  1335                           pclath	equ	0xFFA
  1336                           pcl	equ	0xFF9
  1337                           tblptru	equ	0xFF8
  1338                           tblptrh	equ	0xFF7
  1339                           tblptrl	equ	0xFF6
  1340                           tablat	equ	0xFF5
  1341                           prodh	equ	0xFF4
  1342                           prodl	equ	0xFF3
  1343                           indf0	equ	0xFEF
  1344                           postinc0	equ	0xFEE
  1345                           postdec0	equ	0xFED
  1346                           preinc0	equ	0xFEC
  1347                           plusw0	equ	0xFEB
  1348                           fsr0h	equ	0xFEA
  1349                           fsr0l	equ	0xFE9
  1350                           wreg	equ	0xFE8
  1351                           indf1	equ	0xFE7
  1352                           postinc1	equ	0xFE6
  1353                           postdec1	equ	0xFE5
  1354                           preinc1	equ	0xFE4
  1355                           plusw1	equ	0xFE3
  1356                           fsr1h	equ	0xFE2
  1357                           fsr1l	equ	0xFE1
  1358                           bsr	equ	0xFE0
  1359                           indf2	equ	0xFDF
  1360                           postinc2	equ	0xFDE
  1361                           postdec2	equ	0xFDD
  1362                           preinc2	equ	0xFDC
  1363                           plusw2	equ	0xFDB
  1364                           fsr2h	equ	0xFDA
  1365                           fsr2l	equ	0xFD9
  1366                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     18      20
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _T0_servoOn->___awdiv
    _T0_servoOff->___wmul

Critical Paths under _Interrupciones in COMRAM

    i2_T0_servoOn->i2___awdiv
    i2_T0_servoOff->i2___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupciones in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupciones in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupciones in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupciones in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupciones in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupciones in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupciones in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupciones in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     763
                            _getCAD0
                       _servocontrol
 ---------------------------------------------------------------------------------
 (1) _servocontrol                                         0     0      0     763
                        _T0_servoOff
                         _T0_servoOn
 ---------------------------------------------------------------------------------
 (2) _T0_servoOn                                           0     0      0     452
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                             10 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _T0_servoOff                                          0     0      0     311
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     311
                                             10 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _getCAD0                                              2     0      2       0
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Interrupciones                                       2     2      0     563
                                              8 COMRAM     2     2      0
                     i2_servocontrol
 ---------------------------------------------------------------------------------
 (5) i2_servocontrol                                       0     0      0     563
                      i2_T0_servoOff
                       i2_T0_servoOn
 ---------------------------------------------------------------------------------
 (6) i2_T0_servoOn                                         0     0      0     352
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (7) i2___awdiv                                            8     4      4     352
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) i2_T0_servoOff                                        0     0      0     211
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) i2___wmul                                             6     2      4     211
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getCAD0
   _servocontrol
     _T0_servoOff
       ___wmul
     _T0_servoOn
       ___awdiv

 _Interrupciones (ROOT)
   i2_servocontrol
     i2_T0_servoOff
       i2___wmul
     i2_T0_servoOn
       i2___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     12      14       1       21.3%
STACK                0      0       0       2        0.0%
DATA                 0      0      14       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0      14      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Dec 09 17:21:40 2020

                     l33 02AC                       l42 01C6                       l35 02BA  
                     l36 02C0                       l45 0300                       l63 029A  
                     l39 0220                       l47 0306             ___awdiv@sign 0010  
    ___wmul@multiplicand 000D                      l294 00D4                      l900 0276  
                    l902 0292                      l910 0024                      l920 004A  
                    l912 002C                      l930 0082                      l922 0052  
                    l914 0030                      l906 0012                      l940 00AE  
                    l932 0088                      l924 0064                      l916 003E  
                    l908 0016                      l934 009E                      l926 006C  
                    l942 00B4                      l918 0046                      l944 00C4  
                    l936 00A6                      l928 0074                      l946 00CC  
                    l938 00A8                      u200 009E                      u201 009A  
                    u210 00C4                      u211 00C0                      u160 0024  
                    u161 0020                      u170 003E                      u171 003A  
                    u180 0064                      u181 0060                      u190 0082  
                    u191 007E                      u280 02BA                      u281 02B6  
                    u290 02F6                      u291 02F2                     l1000 01F6  
                   l1010 01BE                     l1002 01FE                     l1012 01C2  
                   l1004 021A                     l1030 02A8                     l1006 019A  
                   l1032 02AA                     l1008 01A2                     l1040 0302  
                   l1034 02E8                     l1028 029C                     l1036 02F6  
                   l1060 025E                     l1038 02F8                     l1062 0262  
                   l1054 024E                     l1056 0252                     l1058 0254  
                   i2l42 01F4                     i2l52 033A                     i2l45 0320  
                   i2l63 02E6                     i2l39 024C                     i2l47 0326  
  __end_ofi2_T0_servoOff 01F6                     _main 024E                     btemp 0015  
                   prodh 000FF4                     prodl 000FF3                     start 000E  
           ___param_bank 000000                    ?_main 0001          __end_of___awdiv 00D6  
                  _T0CON 000FD5          ___awdiv@divisor 000D              ?_T0_servoOn 0001  
                  i2l294 0198                    i2l950 02C2                    i2l952 02DE  
                  i2l960 00E8                    i2l970 010E                    i2l962 00F0  
                  i2l980 0146                    i2l972 0116                    i2l964 00F4  
                  i2l956 00D6          ___awdiv@counter 000F                    i2l990 0172  
                  i2l982 014C                    i2l974 0128                    i2l966 0102  
                  i2l958 00DA                    i2l984 0162                    i2l976 0130  
                  i2l992 0178                    i2l968 010A                    i2l994 0188  
                  i2l986 016A                    i2l978 0138                    i2l996 0190  
                  i2l988 016C          __end_of_getCAD0 02C2                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _servo 0013         __end_ofi2___wmul 02E8  
                  ttemp5 0016                    ttemp6 0019                    ttemp7 001D  
                  status 000FD8                    wtemp8 0016       __size_ofi2___awdiv 00C4  
        __initialization 0346             __end_of_main 0276                   ??_main 0013  
          __activetblptr 000000           i2_servocontrol 0308                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _ADRESH 000FC4  
       ___awdiv@dividend 000B                   i2l1020 01C8                   i2l1022 01D0  
                 i2l1014 0222                   i2l1024 01EC                   i2l1016 022A  
                 i2l1026 01F0                   i2l1018 0246                   i2l1042 0308  
                 i2l1050 0332                   i2l1044 0316                   i2l1052 0336  
                 i2l1046 0318                   i2l1048 0322             ?_T0_servoOff 0001  
                 _INTCON 000FF2                   _OSCCON 000FD3      __size_of_T0_servoOn 002C  
                 ___wmul 0276                ??___awdiv 000F                ??_getCAD0 000D  
       ___awdiv@quotient 0011           i2___awdiv@sign 0006   __end_ofi2_servocontrol 0328  
      __end_ofi2___awdiv 019A               __accesstop 0060  __end_of__initialization 0346  
          ___rparam_used 000001           __pcstackCOMRAM 0001                ?i2___wmul 0001  
          ?i2_T0_servoOn 0001          ?i2_servocontrol 0001               __pnvCOMRAM 0013  
                ?___wmul 000B           ??i2_T0_servoOn 0009               ??i2___wmul 0005  
           ??_T0_servoOn 0013                  i2u22_40 00E8                  i2u30_40 0316  
                i2u22_41 00E4                  i2u30_41 0312                  i2u23_40 0102  
                i2u23_41 00FE                  i2u24_40 0128                  i2u24_41 0124  
                i2u25_40 0146                  i2u25_41 0142                  i2u26_40 0162  
                i2u26_41 015E                  i2u27_40 0188                  i2u27_41 0184  
   __size_of_T0_servoOff 002E                  __Hparam 0000                  __Lparam 0000  
     __end_of_T0_servoOn 0222                  ___awdiv 0012          __size_of___wmul 0026  
                _getCAD0 029C                  __pcinit 0346                  __ramtop 0800  
                __ptext0 024E                  __ptext1 02E8                  __ptext2 01F6  
                __ptext3 0012                  __ptext4 019A                  __ptext5 0276  
                __ptext6 029C                  __ptext8 0308                  __ptext9 0222  
 __size_ofi2_T0_servoOff 002E  __size_of_Interrupciones 033E           __pintcode_body 0328  
   end_of_initialization 0346                  int_func 0328      i2___wmul@multiplier 0001  
              _PORTCbits 000F82            ?_servocontrol 0001                _TRISAbits 000F92  
              _TRISCbits 000F94                i2___awdiv 00D6            i2_T0_servoOff 01C8  
   __end_ofi2_T0_servoOn 024E       i2___awdiv@dividend 0001         ??i2_servocontrol 0009  
         __end_of___wmul 029C           ??_servocontrol 0013         i2___wmul@product 0005  
    start_initialization 0346       i2___awdiv@quotient 0007        __size_ofi2___wmul 0026  
             ?i2___awdiv 0001           ?i2_T0_servoOff 0001                 ??___wmul 000F  
         _Interrupciones 0008                __pintcode 0008                 ?___awdiv 000B  
               ?_getCAD0 000B   __end_of_Interrupciones 0346              ??i2___awdiv 0005  
        ??i2_T0_servoOff 0007    __size_ofi2_T0_servoOn 002C            ??_T0_servoOff 0011  
         ___wmul@product 000F     __end_of_servocontrol 0308          ?_Interrupciones 0001  
             _ADCON0bits 000FC2        ___wmul@multiplier 000B                 i2___wmul 02C2  
           i2_T0_servoOn 0222        i2___awdiv@divisor 0003        i2___awdiv@counter 0005  
               __Hrparam 0000      __end_of_T0_servoOff 01C8                 __Lrparam 0000  
       __size_of___awdiv 00C4    i2___wmul@multiplicand 0003         __size_of_getCAD0 0026  
               __ptext10 00D6                 __ptext11 01C8                 __ptext12 02C2  
          __size_of_main 0028                 int$flags 0015               _INTCONbits 000FF2  
  __size_of_servocontrol 0020                 intlevel2 0000              _T0_servoOff 019A  
           _servocontrol 02E8               _T0_servoOn 01F6  __size_ofi2_servocontrol 0020  
       ??_Interrupciones 0009  
