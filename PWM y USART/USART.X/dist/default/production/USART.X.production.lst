

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Oct 21 17:12:10 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F2550 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     _RCREG	set	4014
    51  0000                     _TXREG	set	4013
    52  0000                     _RCSTAbits	set	4011
    53  0000                     _TXSTAbits	set	4012
    54  0000                     _SPBRG	set	4015
    55  0000                     _LATCbits	set	3979
    56  0000                     _TRISCbits	set	3988
    57                           
    58                           ; #config settings
    59                           
    60                           	psect	cinit
    61  007E2E                     __pcinit:
    62                           	callstack 0
    63  007E2E                     start_initialization:
    64                           	callstack 0
    65  007E2E                     __initialization:
    66                           	callstack 0
    67  007E2E                     end_of_initialization:
    68                           	callstack 0
    69  007E2E                     __end_of__initialization:
    70                           	callstack 0
    71  007E2E  0100               	movlb	0
    72  007E30  EF1A  F03F         	goto	_main	;jump to C main() function
    73                           
    74                           	psect	cstackCOMRAM
    75  000001                     __pcstackCOMRAM:
    76                           	callstack 0
    77  000001                     ?___aldiv:
    78                           	callstack 0
    79  000001                     ___aldiv@dividend:
    80                           	callstack 0
    81                           
    82                           ; 4 bytes @ 0x0
    83  000001                     	ds	4
    84  000005                     ___aldiv@divisor:
    85                           	callstack 0
    86                           
    87                           ; 4 bytes @ 0x4
    88  000005                     	ds	4
    89  000009                     ___aldiv@counter:
    90                           	callstack 0
    91                           
    92                           ; 1 bytes @ 0x8
    93  000009                     	ds	1
    94  00000A                     ___aldiv@sign:
    95                           	callstack 0
    96                           
    97                           ; 1 bytes @ 0x9
    98  00000A                     	ds	1
    99  00000B                     ___aldiv@quotient:
   100                           	callstack 0
   101                           
   102                           ; 4 bytes @ 0xA
   103  00000B                     	ds	4
   104  00000F                     USART_Init@BAUD:
   105                           	callstack 0
   106                           
   107                           ; 4 bytes @ 0xE
   108  00000F                     	ds	4
   109  000013                     _USART_Init$874:
   110                           	callstack 0
   111                           
   112                           ; 4 bytes @ 0x12
   113  000013                     	ds	4
   114  000017                     main@valor:
   115                           	callstack 0
   116                           
   117                           ; 1 bytes @ 0x16
   118  000017                     	ds	1
   119                           
   120 ;;
   121 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   122 ;;
   123 ;; *************** function _main *****************
   124 ;; Defined at:
   125 ;;		line 13 in file "main.c"
   126 ;; Parameters:    Size  Location     Type
   127 ;;		None
   128 ;; Auto vars:     Size  Location     Type
   129 ;;  valor           1   22[COMRAM] unsigned char 
   130 ;; Return value:  Size  Location     Type
   131 ;;                  1    wreg      void 
   132 ;; Registers used:
   133 ;;		wreg, status,2, status,0, cstack
   134 ;; Tracked objects:
   135 ;;		On entry : 0/0
   136 ;;		On exit  : 0/0
   137 ;;		Unchanged: 0/0
   138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   139 ;;      Params:         0       0       0       0       0       0       0       0       0
   140 ;;      Locals:         1       0       0       0       0       0       0       0       0
   141 ;;      Temps:          0       0       0       0       0       0       0       0       0
   142 ;;      Totals:         1       0       0       0       0       0       0       0       0
   143 ;;Total ram usage:        1 bytes
   144 ;; Hardware stack levels required when called:    2
   145 ;; This function calls:
   146 ;;		_USART_Init
   147 ;;		_USART_Rx
   148 ;; This function is called by:
   149 ;;		Startup code after reset
   150 ;; This function uses a non-reentrant model
   151 ;;
   152                           
   153                           	psect	text0
   154  007E34                     __ptext0:
   155                           	callstack 0
   156  007E34                     _main:
   157                           	callstack 29
   158  007E34                     
   159                           ;main.c: 14:     USART_Init(9600);
   160  007E34  0E80               	movlw	128
   161  007E36  6E0F               	movwf	USART_Init@BAUD^0,c
   162  007E38  0E25               	movlw	37
   163  007E3A  6E10               	movwf	(USART_Init@BAUD+1)^0,c
   164  007E3C  0E00               	movlw	0
   165  007E3E  6E11               	movwf	(USART_Init@BAUD+2)^0,c
   166  007E40  0E00               	movlw	0
   167  007E42  6E12               	movwf	(USART_Init@BAUD+3)^0,c
   168  007E44  EC42  F03F         	call	_USART_Init	;wreg free
   169  007E48                     
   170                           ;main.c: 15:     TRISCbits.RC7 = 0;
   171  007E48  9E94               	bcf	148,7,c	;volatile
   172  007E4A                     l864:
   173                           
   174                           ;main.c: 17:         char valor = USART_Rx();
   175  007E4A  EC15  F03F         	call	_USART_Rx	;wreg free
   176  007E4E  6E17               	movwf	main@valor^0,c
   177  007E50                     
   178                           ;main.c: 18:         if(valor == '1'){
   179  007E50  0E31               	movlw	49
   180  007E52  1817               	xorwf	main@valor^0,w,c
   181  007E54  A4D8               	btfss	status,2,c
   182  007E56  EF2F  F03F         	goto	u151
   183  007E5A  EF31  F03F         	goto	u150
   184  007E5E                     u151:
   185  007E5E  EF34  F03F         	goto	l870
   186  007E62                     u150:
   187  007E62                     
   188                           ;main.c: 19:             LATCbits.LC7 = 1;
   189  007E62  8E8B               	bsf	139,7,c	;volatile
   190                           
   191                           ;main.c: 20:         }
   192  007E64  EF25  F03F         	goto	l864
   193  007E68                     l870:
   194  007E68  0E32               	movlw	50
   195  007E6A  1817               	xorwf	main@valor^0,w,c
   196  007E6C  A4D8               	btfss	status,2,c
   197  007E6E  EF3B  F03F         	goto	u161
   198  007E72  EF3D  F03F         	goto	u160
   199  007E76                     u161:
   200  007E76  EF25  F03F         	goto	l864
   201  007E7A                     u160:
   202  007E7A                     
   203                           ;main.c: 22:             LATCbits.LC7 = 0;
   204  007E7A  9E8B               	bcf	139,7,c	;volatile
   205  007E7C  EF25  F03F         	goto	l864
   206  007E80  EF00  F000         	goto	start
   207  007E84                     __end_of_main:
   208                           	callstack 0
   209                           
   210 ;; *************** function _USART_Rx *****************
   211 ;; Defined at:
   212 ;;		line 38 in file "USART_libreria.c"
   213 ;; Parameters:    Size  Location     Type
   214 ;;		None
   215 ;; Auto vars:     Size  Location     Type
   216 ;;		None
   217 ;; Return value:  Size  Location     Type
   218 ;;                  1    wreg      unsigned char 
   219 ;; Registers used:
   220 ;;		wreg, status,2
   221 ;; Tracked objects:
   222 ;;		On entry : 0/0
   223 ;;		On exit  : 0/0
   224 ;;		Unchanged: 0/0
   225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   226 ;;      Params:         0       0       0       0       0       0       0       0       0
   227 ;;      Locals:         0       0       0       0       0       0       0       0       0
   228 ;;      Temps:          0       0       0       0       0       0       0       0       0
   229 ;;      Totals:         0       0       0       0       0       0       0       0       0
   230 ;;Total ram usage:        0 bytes
   231 ;; Hardware stack levels used:    1
   232 ;; This function calls:
   233 ;;		Nothing
   234 ;; This function is called by:
   235 ;;		_main
   236 ;; This function uses a non-reentrant model
   237 ;;
   238                           
   239                           	psect	text1
   240  007E2A                     __ptext1:
   241                           	callstack 0
   242  007E2A                     _USART_Rx:
   243                           	callstack 30
   244  007E2A                     
   245                           ;USART_libreria.c: 39:     return RCREG;
   246  007E2A  50AE               	movf	174,w,c	;volatile
   247  007E2C  0012               	return		;funcret
   248  007E2E                     __end_of_USART_Rx:
   249                           	callstack 0
   250                           
   251 ;; *************** function _USART_Init *****************
   252 ;; Defined at:
   253 ;;		line 12 in file "USART_libreria.c"
   254 ;; Parameters:    Size  Location     Type
   255 ;;  BAUD            4   14[COMRAM] long 
   256 ;; Auto vars:     Size  Location     Type
   257 ;;		None
   258 ;; Return value:  Size  Location     Type
   259 ;;                  1    wreg      void 
   260 ;; Registers used:
   261 ;;		wreg, status,2, status,0, cstack
   262 ;; Tracked objects:
   263 ;;		On entry : 0/0
   264 ;;		On exit  : 0/0
   265 ;;		Unchanged: 0/0
   266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   267 ;;      Params:         4       0       0       0       0       0       0       0       0
   268 ;;      Locals:         4       0       0       0       0       0       0       0       0
   269 ;;      Temps:          0       0       0       0       0       0       0       0       0
   270 ;;      Totals:         8       0       0       0       0       0       0       0       0
   271 ;;Total ram usage:        8 bytes
   272 ;; Hardware stack levels used:    1
   273 ;; Hardware stack levels required when called:    1
   274 ;; This function calls:
   275 ;;		___aldiv
   276 ;; This function is called by:
   277 ;;		_main
   278 ;; This function uses a non-reentrant model
   279 ;;
   280                           
   281                           	psect	text2
   282  007E84                     __ptext2:
   283                           	callstack 0
   284  007E84                     _USART_Init:
   285                           	callstack 29
   286  007E84                     
   287                           ;USART_libreria.c: 14:     TRISCbits.RC6 = 0;
   288  007E84  9C94               	bcf	148,6,c	;volatile
   289                           
   290                           ;USART_libreria.c: 15:     TRISCbits.RC7 = 1;
   291  007E86  8E94               	bsf	148,7,c	;volatile
   292  007E88                     
   293                           ;USART_libreria.c: 18:     SPBRG = (unsigned char)(((20000000L/BAUD)/64)-1);
   294  007E88  C00F  F005         	movff	USART_Init@BAUD,___aldiv@divisor
   295  007E8C  C010  F006         	movff	USART_Init@BAUD+1,___aldiv@divisor+1
   296  007E90  C011  F007         	movff	USART_Init@BAUD+2,___aldiv@divisor+2
   297  007E94  C012  F008         	movff	USART_Init@BAUD+3,___aldiv@divisor+3
   298  007E98  0E00               	movlw	0
   299  007E9A  6E01               	movwf	___aldiv@dividend^0,c
   300  007E9C  0E2D               	movlw	45
   301  007E9E  6E02               	movwf	(___aldiv@dividend+1)^0,c
   302  007EA0  0E31               	movlw	49
   303  007EA2  6E03               	movwf	(___aldiv@dividend+2)^0,c
   304  007EA4  0E01               	movlw	1
   305  007EA6  6E04               	movwf	(___aldiv@dividend+3)^0,c
   306  007EA8  EC7A  F03F         	call	___aldiv	;wreg free
   307  007EAC  C001  F013         	movff	?___aldiv,_USART_Init$874
   308  007EB0  C002  F014         	movff	?___aldiv+1,_USART_Init$874+1
   309  007EB4  C003  F015         	movff	?___aldiv+2,_USART_Init$874+2
   310  007EB8  C004  F016         	movff	?___aldiv+3,_USART_Init$874+3
   311                           
   312                           ;USART_libreria.c: 18:     SPBRG = (unsigned char)(((20000000L/BAUD)/64)-1);
   313  007EBC  C013  F001         	movff	_USART_Init$874,___aldiv@dividend
   314  007EC0  C014  F002         	movff	_USART_Init$874+1,___aldiv@dividend+1
   315  007EC4  C015  F003         	movff	_USART_Init$874+2,___aldiv@dividend+2
   316  007EC8  C016  F004         	movff	_USART_Init$874+3,___aldiv@dividend+3
   317  007ECC  0E40               	movlw	64
   318  007ECE  6E05               	movwf	___aldiv@divisor^0,c
   319  007ED0  0E00               	movlw	0
   320  007ED2  6E06               	movwf	(___aldiv@divisor+1)^0,c
   321  007ED4  0E00               	movlw	0
   322  007ED6  6E07               	movwf	(___aldiv@divisor+2)^0,c
   323  007ED8  0E00               	movlw	0
   324  007EDA  6E08               	movwf	(___aldiv@divisor+3)^0,c
   325  007EDC  EC7A  F03F         	call	___aldiv	;wreg free
   326  007EE0  0401               	decf	?___aldiv^0,w,c
   327  007EE2  6EAF               	movwf	175,c	;volatile
   328  007EE4                     
   329                           ;USART_libreria.c: 21:     TXSTAbits.BRGH = 0;
   330  007EE4  94AC               	bcf	172,2,c	;volatile
   331  007EE6                     
   332                           ;USART_libreria.c: 22:     TXSTAbits.SYNC = 0;
   333  007EE6  98AC               	bcf	172,4,c	;volatile
   334  007EE8                     
   335                           ;USART_libreria.c: 23:     RCSTAbits.SPEN = 1;
   336  007EE8  8EAB               	bsf	171,7,c	;volatile
   337  007EEA                     
   338                           ;USART_libreria.c: 26:     TXSTAbits.TX9 = 0;
   339  007EEA  9CAC               	bcf	172,6,c	;volatile
   340  007EEC                     
   341                           ;USART_libreria.c: 27:     TXSTAbits.TXEN = 1;
   342  007EEC  8AAC               	bsf	172,5,c	;volatile
   343  007EEE                     
   344                           ;USART_libreria.c: 30:     RCSTAbits.RC9 = 0;
   345  007EEE  9CAB               	bcf	171,6,c	;volatile
   346  007EF0                     
   347                           ;USART_libreria.c: 31:     RCSTAbits.CREN = 1;
   348  007EF0  88AB               	bsf	171,4,c	;volatile
   349  007EF2  0012               	return		;funcret
   350  007EF4                     __end_of_USART_Init:
   351                           	callstack 0
   352                           
   353 ;; *************** function ___aldiv *****************
   354 ;; Defined at:
   355 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aldiv.c"
   356 ;; Parameters:    Size  Location     Type
   357 ;;  dividend        4    0[COMRAM] long 
   358 ;;  divisor         4    4[COMRAM] long 
   359 ;; Auto vars:     Size  Location     Type
   360 ;;  quotient        4   10[COMRAM] long 
   361 ;;  sign            1    9[COMRAM] unsigned char 
   362 ;;  counter         1    8[COMRAM] unsigned char 
   363 ;; Return value:  Size  Location     Type
   364 ;;                  4    0[COMRAM] long 
   365 ;; Registers used:
   366 ;;		wreg, status,2, status,0
   367 ;; Tracked objects:
   368 ;;		On entry : 0/0
   369 ;;		On exit  : 0/0
   370 ;;		Unchanged: 0/0
   371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   372 ;;      Params:         8       0       0       0       0       0       0       0       0
   373 ;;      Locals:         6       0       0       0       0       0       0       0       0
   374 ;;      Temps:          0       0       0       0       0       0       0       0       0
   375 ;;      Totals:        14       0       0       0       0       0       0       0       0
   376 ;;Total ram usage:       14 bytes
   377 ;; Hardware stack levels used:    1
   378 ;; This function calls:
   379 ;;		Nothing
   380 ;; This function is called by:
   381 ;;		_USART_Init
   382 ;; This function uses a non-reentrant model
   383 ;;
   384                           
   385                           	psect	text3
   386  007EF4                     __ptext3:
   387                           	callstack 0
   388  007EF4                     ___aldiv:
   389                           	callstack 29
   390  007EF4  0E00               	movlw	0
   391  007EF6  6E0A               	movwf	___aldiv@sign^0,c
   392  007EF8  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
   393  007EFA  EF83  F03F         	goto	u90
   394  007EFE  EF81  F03F         	goto	u91
   395  007F02                     u91:
   396  007F02  EF8D  F03F         	goto	l806
   397  007F06                     u90:
   398  007F06  1E08               	comf	(___aldiv@divisor+3)^0,f,c
   399  007F08  1E07               	comf	(___aldiv@divisor+2)^0,f,c
   400  007F0A  1E06               	comf	(___aldiv@divisor+1)^0,f,c
   401  007F0C  6C05               	negf	___aldiv@divisor^0,c
   402  007F0E  0E00               	movlw	0
   403  007F10  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
   404  007F12  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
   405  007F14  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
   406  007F16  0E01               	movlw	1
   407  007F18  6E0A               	movwf	___aldiv@sign^0,c
   408  007F1A                     l806:
   409  007F1A  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
   410  007F1C  EF94  F03F         	goto	u100
   411  007F20  EF92  F03F         	goto	u101
   412  007F24                     u101:
   413  007F24  EF9E  F03F         	goto	l812
   414  007F28                     u100:
   415  007F28  1E04               	comf	(___aldiv@dividend+3)^0,f,c
   416  007F2A  1E03               	comf	(___aldiv@dividend+2)^0,f,c
   417  007F2C  1E02               	comf	(___aldiv@dividend+1)^0,f,c
   418  007F2E  6C01               	negf	___aldiv@dividend^0,c
   419  007F30  0E00               	movlw	0
   420  007F32  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
   421  007F34  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
   422  007F36  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
   423  007F38  0E01               	movlw	1
   424  007F3A  1A0A               	xorwf	___aldiv@sign^0,f,c
   425  007F3C                     l812:
   426  007F3C  0E00               	movlw	0
   427  007F3E  6E0B               	movwf	___aldiv@quotient^0,c
   428  007F40  0E00               	movlw	0
   429  007F42  6E0C               	movwf	(___aldiv@quotient+1)^0,c
   430  007F44  0E00               	movlw	0
   431  007F46  6E0D               	movwf	(___aldiv@quotient+2)^0,c
   432  007F48  0E00               	movlw	0
   433  007F4A  6E0E               	movwf	(___aldiv@quotient+3)^0,c
   434  007F4C  5005               	movf	___aldiv@divisor^0,w,c
   435  007F4E  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
   436  007F50  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
   437  007F52  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
   438  007F54  B4D8               	btfsc	status,2,c
   439  007F56  EFAF  F03F         	goto	u111
   440  007F5A  EFB1  F03F         	goto	u110
   441  007F5E                     u111:
   442  007F5E  EFE7  F03F         	goto	l834
   443  007F62                     u110:
   444  007F62  0E01               	movlw	1
   445  007F64  6E09               	movwf	___aldiv@counter^0,c
   446  007F66  EFBB  F03F         	goto	l820
   447  007F6A                     l818:
   448  007F6A  90D8               	bcf	status,0,c
   449  007F6C  3605               	rlcf	___aldiv@divisor^0,f,c
   450  007F6E  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
   451  007F70  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
   452  007F72  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
   453  007F74  2A09               	incf	___aldiv@counter^0,f,c
   454  007F76                     l820:
   455  007F76  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
   456  007F78  EFC0  F03F         	goto	u121
   457  007F7C  EFC2  F03F         	goto	u120
   458  007F80                     u121:
   459  007F80  EFB5  F03F         	goto	l818
   460  007F84                     u120:
   461  007F84                     l822:
   462  007F84  90D8               	bcf	status,0,c
   463  007F86  360B               	rlcf	___aldiv@quotient^0,f,c
   464  007F88  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
   465  007F8A  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
   466  007F8C  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
   467  007F8E  5005               	movf	___aldiv@divisor^0,w,c
   468  007F90  5C01               	subwf	___aldiv@dividend^0,w,c
   469  007F92  5006               	movf	(___aldiv@divisor+1)^0,w,c
   470  007F94  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
   471  007F96  5007               	movf	(___aldiv@divisor+2)^0,w,c
   472  007F98  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
   473  007F9A  5008               	movf	(___aldiv@divisor+3)^0,w,c
   474  007F9C  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
   475  007F9E  A0D8               	btfss	status,0,c
   476  007FA0  EFD4  F03F         	goto	u131
   477  007FA4  EFD6  F03F         	goto	u130
   478  007FA8                     u131:
   479  007FA8  EFDF  F03F         	goto	l830
   480  007FAC                     u130:
   481  007FAC  5005               	movf	___aldiv@divisor^0,w,c
   482  007FAE  5E01               	subwf	___aldiv@dividend^0,f,c
   483  007FB0  5006               	movf	(___aldiv@divisor+1)^0,w,c
   484  007FB2  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
   485  007FB4  5007               	movf	(___aldiv@divisor+2)^0,w,c
   486  007FB6  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
   487  007FB8  5008               	movf	(___aldiv@divisor+3)^0,w,c
   488  007FBA  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
   489  007FBC  800B               	bsf	___aldiv@quotient^0,0,c
   490  007FBE                     l830:
   491  007FBE  90D8               	bcf	status,0,c
   492  007FC0  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
   493  007FC2  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
   494  007FC4  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
   495  007FC6  3205               	rrcf	___aldiv@divisor^0,f,c
   496  007FC8  2E09               	decfsz	___aldiv@counter^0,f,c
   497  007FCA  EFC2  F03F         	goto	l822
   498  007FCE                     l834:
   499  007FCE  500A               	movf	___aldiv@sign^0,w,c
   500  007FD0  B4D8               	btfsc	status,2,c
   501  007FD2  EFED  F03F         	goto	u141
   502  007FD6  EFEF  F03F         	goto	u140
   503  007FDA                     u141:
   504  007FDA  EFF7  F03F         	goto	l838
   505  007FDE                     u140:
   506  007FDE  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
   507  007FE0  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
   508  007FE2  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
   509  007FE4  6C0B               	negf	___aldiv@quotient^0,c
   510  007FE6  0E00               	movlw	0
   511  007FE8  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
   512  007FEA  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
   513  007FEC  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
   514  007FEE                     l838:
   515  007FEE  C00B  F001         	movff	___aldiv@quotient,?___aldiv
   516  007FF2  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
   517  007FF6  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
   518  007FFA  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
   519  007FFE  0012               	return		;funcret
   520  008000                     __end_of___aldiv:
   521                           	callstack 0
   522  0000                     
   523                           	psect	rparam
   524  0000                     
   525                           	psect	idloc
   526                           
   527                           ;Config register IDLOC0 @ 0x200000
   528                           ;	unspecified, using default values
   529  200000                     	org	2097152
   530  200000  FF                 	db	255
   531                           
   532                           ;Config register IDLOC1 @ 0x200001
   533                           ;	unspecified, using default values
   534  200001                     	org	2097153
   535  200001  FF                 	db	255
   536                           
   537                           ;Config register IDLOC2 @ 0x200002
   538                           ;	unspecified, using default values
   539  200002                     	org	2097154
   540  200002  FF                 	db	255
   541                           
   542                           ;Config register IDLOC3 @ 0x200003
   543                           ;	unspecified, using default values
   544  200003                     	org	2097155
   545  200003  FF                 	db	255
   546                           
   547                           ;Config register IDLOC4 @ 0x200004
   548                           ;	unspecified, using default values
   549  200004                     	org	2097156
   550  200004  FF                 	db	255
   551                           
   552                           ;Config register IDLOC5 @ 0x200005
   553                           ;	unspecified, using default values
   554  200005                     	org	2097157
   555  200005  FF                 	db	255
   556                           
   557                           ;Config register IDLOC6 @ 0x200006
   558                           ;	unspecified, using default values
   559  200006                     	org	2097158
   560  200006  FF                 	db	255
   561                           
   562                           ;Config register IDLOC7 @ 0x200007
   563                           ;	unspecified, using default values
   564  200007                     	org	2097159
   565  200007  FF                 	db	255
   566                           
   567                           	psect	config
   568                           
   569                           ;Config register CONFIG1L @ 0x300000
   570                           ;	PLL Prescaler Selection bits
   571                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   572                           ;	System Clock Postscaler Selection bits
   573                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   574                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   575                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   576  300000                     	org	3145728
   577  300000  00                 	db	0
   578                           
   579                           ;Config register CONFIG1H @ 0x300001
   580                           ;	Oscillator Selection bits
   581                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
   582                           ;	Fail-Safe Clock Monitor Enable bit
   583                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   584                           ;	Internal/External Oscillator Switchover bit
   585                           ;	IESO = ON, Oscillator Switchover mode enabled
   586  300001                     	org	3145729
   587  300001  88                 	db	136
   588                           
   589                           ;Config register CONFIG2L @ 0x300002
   590                           ;	Power-up Timer Enable bit
   591                           ;	PWRT = ON, PWRT enabled
   592                           ;	Brown-out Reset Enable bits
   593                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   594                           ;	Brown-out Reset Voltage bits
   595                           ;	BORV = 3, Minimum setting 2.05V
   596                           ;	USB Voltage Regulator Enable bit
   597                           ;	VREGEN = OFF, USB voltage regulator disabled
   598  300002                     	org	3145730
   599  300002  18                 	db	24
   600                           
   601                           ;Config register CONFIG2H @ 0x300003
   602                           ;	Watchdog Timer Enable bit
   603                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   604                           ;	Watchdog Timer Postscale Select bits
   605                           ;	WDTPS = 32768, 1:32768
   606  300003                     	org	3145731
   607  300003  1E                 	db	30
   608                           
   609                           ; Padding undefined space
   610  300004                     	org	3145732
   611  300004  FF                 	db	255
   612                           
   613                           ;Config register CONFIG3H @ 0x300005
   614                           ;	CCP2 MUX bit
   615                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   616                           ;	PORTB A/D Enable bit
   617                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   618                           ;	Low-Power Timer 1 Oscillator Enable bit
   619                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   620                           ;	MCLR Pin Enable bit
   621                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
   622  300005                     	org	3145733
   623  300005  01                 	db	1
   624                           
   625                           ;Config register CONFIG4L @ 0x300006
   626                           ;	Stack Full/Underflow Reset Enable bit
   627                           ;	STVREN = ON, Stack full/underflow will cause Reset
   628                           ;	Single-Supply ICSP Enable bit
   629                           ;	LVP = OFF, Single-Supply ICSP disabled
   630                           ;	Extended Instruction Set Enable bit
   631                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   632                           ;	Background Debugger Enable bit
   633                           ;	DEBUG = 0x1, unprogrammed default
   634  300006                     	org	3145734
   635  300006  81                 	db	129
   636                           
   637                           ; Padding undefined space
   638  300007                     	org	3145735
   639  300007  FF                 	db	255
   640                           
   641                           ;Config register CONFIG5L @ 0x300008
   642                           ;	Code Protection bit
   643                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   644                           ;	Code Protection bit
   645                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   646                           ;	Code Protection bit
   647                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   648                           ;	Code Protection bit
   649                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   650  300008                     	org	3145736
   651  300008  0F                 	db	15
   652                           
   653                           ;Config register CONFIG5H @ 0x300009
   654                           ;	Boot Block Code Protection bit
   655                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   656                           ;	Data EEPROM Code Protection bit
   657                           ;	CPD = OFF, Data EEPROM is not code-protected
   658  300009                     	org	3145737
   659  300009  C0                 	db	192
   660                           
   661                           ;Config register CONFIG6L @ 0x30000A
   662                           ;	Write Protection bit
   663                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   664                           ;	Write Protection bit
   665                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   666                           ;	Write Protection bit
   667                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   668                           ;	Write Protection bit
   669                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   670  30000A                     	org	3145738
   671  30000A  0F                 	db	15
   672                           
   673                           ;Config register CONFIG6H @ 0x30000B
   674                           ;	Configuration Register Write Protection bit
   675                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   676                           ;	Boot Block Write Protection bit
   677                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   678                           ;	Data EEPROM Write Protection bit
   679                           ;	WRTD = OFF, Data EEPROM is not write-protected
   680  30000B                     	org	3145739
   681  30000B  E0                 	db	224
   682                           
   683                           ;Config register CONFIG7L @ 0x30000C
   684                           ;	Table Read Protection bit
   685                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   686                           ;	Table Read Protection bit
   687                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   688                           ;	Table Read Protection bit
   689                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   690                           ;	Table Read Protection bit
   691                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   692  30000C                     	org	3145740
   693  30000C  0F                 	db	15
   694                           
   695                           ;Config register CONFIG7H @ 0x30000D
   696                           ;	Boot Block Table Read Protection bit
   697                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   698  30000D                     	org	3145741
   699  30000D  40                 	db	64
   700                           tosu	equ	0xFFF
   701                           tosh	equ	0xFFE
   702                           tosl	equ	0xFFD
   703                           stkptr	equ	0xFFC
   704                           pclatu	equ	0xFFB
   705                           pclath	equ	0xFFA
   706                           pcl	equ	0xFF9
   707                           tblptru	equ	0xFF8
   708                           tblptrh	equ	0xFF7
   709                           tblptrl	equ	0xFF6
   710                           tablat	equ	0xFF5
   711                           prodh	equ	0xFF4
   712                           prodl	equ	0xFF3
   713                           indf0	equ	0xFEF
   714                           postinc0	equ	0xFEE
   715                           postdec0	equ	0xFED
   716                           preinc0	equ	0xFEC
   717                           plusw0	equ	0xFEB
   718                           fsr0h	equ	0xFEA
   719                           fsr0l	equ	0xFE9
   720                           wreg	equ	0xFE8
   721                           indf1	equ	0xFE7
   722                           postinc1	equ	0xFE6
   723                           postdec1	equ	0xFE5
   724                           preinc1	equ	0xFE4
   725                           plusw1	equ	0xFE3
   726                           fsr1h	equ	0xFE2
   727                           fsr1l	equ	0xFE1
   728                           bsr	equ	0xFE0
   729                           indf2	equ	0xFDF
   730                           postinc2	equ	0xFDE
   731                           postdec2	equ	0xFDD
   732                           preinc2	equ	0xFDC
   733                           plusw2	equ	0xFDB
   734                           fsr2h	equ	0xFDA
   735                           fsr2l	equ	0xFD9
   736                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     23      23
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_USART_Init
    _USART_Init->___aldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     770
                                             22 COMRAM     1     1      0
                         _USART_Init
                           _USART_Rx
 ---------------------------------------------------------------------------------
 (1) _USART_Rx                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     725
                                             14 COMRAM     8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USART_Init
     ___aldiv
   _USART_Rx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     17      17       1       24.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Oct 21 17:12:10 2020

                     l40 7E2C                       l34 7EF2                       u90 7F06  
                     u91 7F02                      l122 7FFE                      l800 7EF8  
                    l810 7F38                      l802 7F06                      l820 7F76  
                    l812 7F3C                      l804 7F16                      l830 7FBE  
                    l822 7F84                      l814 7F4C                      l806 7F1A  
                    l832 7FC8                      l824 7F8E                      l816 7F62  
                    l808 7F28                      l826 7FAC                      l818 7F6A  
                    l834 7FCE                      l850 7EE8                      l842 7E84  
                    l836 7FDE                      l828 7FBC                      l852 7EEA  
                    l844 7E88                      l860 7E34                      l838 7FEE  
                    l854 7EEC                      l846 7EE4                      l870 7E68  
                    l862 7E48                      l856 7EEE                      l848 7EE6  
                    l872 7E7A                      l864 7E4A                      l858 7EF0  
                    l778 7E2A                      l866 7E50                      l868 7E62  
                    l798 7EF4                      u100 7F28                      u101 7F24  
                    u110 7F62                      u111 7F5E                      u120 7F84  
                    u121 7F80                      u130 7FAC                      u131 7FA8  
                    u140 7FDE                      u141 7FDA                      u150 7E62  
                    u151 7E5E                      u160 7E7A                      u161 7E76  
                   _main 7E34                     start 0000             ___param_bank 000000  
        __end_of___aldiv 8000                    ?_main 0001                    _RCREG 000FAE  
                  _SPBRG 000FAF                    _TXREG 000FAD         __end_of_USART_Rx 7E2E  
                  status 000FD8              ?_USART_Init 000F          __initialization 7E2E  
           __end_of_main 7E84                   ??_main 0017            __activetblptr 000000  
              ??___aldiv 0009      __size_of_USART_Init 0070               __accesstop 0060  
__end_of__initialization 7E2E            ___rparam_used 000001           __pcstackCOMRAM 0001  
              ?_USART_Rx 0001               ??_USART_Rx 0001             ??_USART_Init 0013  
                __Hparam 0000                  __Lparam 0000                  ___aldiv 7EF4  
         USART_Init@BAUD 000F                  __pcinit 7E2E                  __ramtop 0800  
                __ptext0 7E34                  __ptext1 7E2A                  __ptext2 7E84  
                __ptext3 7EF4         ___aldiv@dividend 0001       __end_of_USART_Init 7EF4  
   end_of_initialization 7E2E                _RCSTAbits 000FAB         ___aldiv@quotient 000B  
              _TRISCbits 000F94                _TXSTAbits 000FAC        __size_of_USART_Rx 0004  
    start_initialization 7E2E                 ?___aldiv 0001          ___aldiv@divisor 0005  
        ___aldiv@counter 0009                 _LATCbits 000F8B                 _USART_Rx 7E2A  
              main@valor 0017                 __Hrparam 0000                 __Lrparam 0000  
       __size_of___aldiv 010C            __size_of_main 0050           _USART_Init$874 0013  
           ___aldiv@sign 000A               _USART_Init 7E84  
