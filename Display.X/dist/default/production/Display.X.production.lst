

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Sep 16 16:51:45 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50  0000                     
    51                           ; Version 2.20
    52                           ; Generated 12/02/2020 GMT
    53                           ; 
    54                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F2550 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     _PORTC	set	3970
    86  0000                     _ADRESL	set	4035
    87  0000                     _ADRESH	set	4036
    88  0000                     _ADCON2bits	set	4032
    89  0000                     _ADCON0bits	set	4034
    90  0000                     _TRISC	set	3988
    91  0000                     _TRISB	set	3987
    92  0000                     _TRISA	set	3986
    93  0000                     _PORTBbits	set	3969
    94  0000                     _TRISBbits	set	3987
    95                           
    96                           	psect	smallconst
    97  000800                     __psmallconst:
    98                           	callstack 0
    99  000800  00                 	db	0
   100  000801                     STR_1:
   101  000801  54                 	db	84	;'T'
   102  000802  65                 	db	101	;'e'
   103  000803  6E                 	db	110	;'n'
   104  000804  73                 	db	115	;'s'
   105  000805  69                 	db	105	;'i'
   106  000806  6F                 	db	111	;'o'
   107  000807  6E                 	db	110	;'n'
   108  000808  20                 	db	32
   109  000809  25                 	db	37
   110  00080A  2E                 	db	46
   111  00080B  32                 	db	50	;'2'
   112  00080C  66                 	db	102	;'f'
   113  00080D  20                 	db	32
   114  00080E  20                 	db	32
   115  00080F  20                 	db	32
   116  000810  20                 	db	32
   117  000811  00                 	db	0
   118  000812                     STR_2:
   119  000812  49                 	db	73	;'I'
   120  000813  4E                 	db	78	;'N'
   121  000814  46                 	db	70	;'F'
   122  000815  00                 	db	0
   123  000816                     STR_6:
   124  000816  4E                 	db	78	;'N'
   125  000817  41                 	db	65	;'A'
   126  000818  4E                 	db	78	;'N'
   127  000819  00                 	db	0
   128  00081A                     STR_3:
   129  00081A  69                 	db	105	;'i'
   130  00081B  6E                 	db	110	;'n'
   131  00081C  66                 	db	102	;'f'
   132  00081D  00                 	db	0
   133  00081E                     STR_7:
   134  00081E  6E                 	db	110	;'n'
   135  00081F  61                 	db	97	;'a'
   136  000820  6E                 	db	110	;'n'
   137  000821  00                 	db	0
   138  000822                     STR_10:
   139  000822  6C                 	db	108	;'l'
   140  000823  66                 	db	102	;'f'
   141  000824  00                 	db	0
   142  000825  00                 	db	0	; dummy byte at the end
   143  0000                     
   144                           ; #config settings
   145                           
   146                           	psect	cinit
   147  003AA6                     __pcinit:
   148                           	callstack 0
   149  003AA6                     start_initialization:
   150                           	callstack 0
   151  003AA6                     __initialization:
   152                           	callstack 0
   153                           
   154                           ; Clear objects allocated to BANK1 (80 bytes)
   155  003AA6  EE01  F000         	lfsr	0,__pbssBANK1
   156  003AAA  0E50               	movlw	80
   157  003AAC                     clear_0:
   158  003AAC  6AEE               	clrf	postinc0,c
   159  003AAE  06E8               	decf	wreg,f,c
   160  003AB0  E1FD               	bnz	clear_0
   161                           
   162                           ; Clear objects allocated to BANK0 (42 bytes)
   163  003AB2  EE00  F0B8         	lfsr	0,__pbssBANK0
   164  003AB6  0E2A               	movlw	42
   165  003AB8                     clear_1:
   166  003AB8  6AEE               	clrf	postinc0,c
   167  003ABA  06E8               	decf	wreg,f,c
   168  003ABC  E1FD               	bnz	clear_1
   169  003ABE                     end_of_initialization:
   170                           	callstack 0
   171  003ABE                     __end_of__initialization:
   172                           	callstack 0
   173  003ABE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   174  003AC0  6EF8               	movwf	tblptru,c
   175  003AC2  0100               	movlb	0
   176  003AC4  EF11  F017         	goto	_main	;jump to C main() function
   177                           
   178                           	psect	bssBANK0
   179  0000B8                     __pbssBANK0:
   180                           	callstack 0
   181  0000B8                     floorf@F527:
   182                           	callstack 0
   183  0000B8                     	ds	4
   184  0000BC                     ___fpclassifyf@F465:
   185                           	callstack 0
   186  0000BC                     	ds	4
   187  0000C0                     _tension:
   188                           	callstack 0
   189  0000C0                     	ds	4
   190  0000C4                     _nout:
   191                           	callstack 0
   192  0000C4                     	ds	2
   193  0000C6                     _width:
   194                           	callstack 0
   195  0000C6                     	ds	2
   196  0000C8                     _prec:
   197                           	callstack 0
   198  0000C8                     	ds	2
   199  0000CA                     _flags:
   200                           	callstack 0
   201  0000CA                     	ds	2
   202  0000CC                     _value_adc:
   203                           	callstack 0
   204  0000CC                     	ds	2
   205  0000CE                     _txt:
   206                           	callstack 0
   207  0000CE                     	ds	20
   208                           
   209                           	psect	bssBANK1
   210  000100                     __pbssBANK1:
   211                           	callstack 0
   212  000100                     _dbuf:
   213                           	callstack 0
   214  000100                     	ds	80
   215                           
   216                           	psect	cstackBANK0
   217  000060                     __pcstackBANK0:
   218                           	callstack 0
   219  000060                     _efgtoa$851:
   220                           	callstack 0
   221                           
   222                           ; 2 bytes @ 0x0
   223  000060                     	ds	2
   224  000062                     _efgtoa$852:
   225                           	callstack 0
   226                           
   227                           ; 2 bytes @ 0x2
   228  000062                     	ds	2
   229  000064                     _efgtoa$857:
   230                           	callstack 0
   231                           
   232                           ; 2 bytes @ 0x4
   233  000064                     	ds	2
   234  000066                     _efgtoa$861:
   235                           	callstack 0
   236                           
   237                           ; 2 bytes @ 0x6
   238  000066                     	ds	2
   239  000068                     _efgtoa$862:
   240                           	callstack 0
   241                           
   242                           ; 2 bytes @ 0x8
   243  000068                     	ds	2
   244  00006A                     _efgtoa$863:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0xA
   248  00006A                     	ds	2
   249  00006C                     efgtoa@t:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0xC
   253  00006C                     	ds	2
   254  00006E                     efgtoa@pp:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0xE
   258  00006E                     	ds	2
   259  000070                     efgtoa@ne:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0x10
   263  000070                     	ds	2
   264  000072                     efgtoa@m:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x12
   268  000072                     	ds	2
   269  000074                     efgtoa@ou:
   270                           	callstack 0
   271                           
   272                           ; 4 bytes @ 0x14
   273  000074                     	ds	4
   274  000078                     efgtoa@d:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x18
   278  000078                     	ds	2
   279  00007A                     efgtoa@sign:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0x1A
   283  00007A                     	ds	2
   284  00007C                     efgtoa@p:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x1C
   288  00007C                     	ds	2
   289  00007E                     efgtoa@w:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x1E
   293  00007E                     	ds	2
   294  000080                     efgtoa@nmode:
   295                           	callstack 0
   296                           
   297                           ; 1 bytes @ 0x20
   298  000080                     	ds	1
   299  000081                     efgtoa@mode:
   300                           	callstack 0
   301                           
   302                           ; 1 bytes @ 0x21
   303  000081                     	ds	1
   304  000082                     efgtoa@h:
   305                           	callstack 0
   306                           
   307                           ; 4 bytes @ 0x22
   308  000082                     	ds	4
   309  000086                     efgtoa@l:
   310                           	callstack 0
   311                           
   312                           ; 4 bytes @ 0x26
   313  000086                     	ds	4
   314  00008A                     efgtoa@i:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x2A
   318  00008A                     	ds	2
   319  00008C                     efgtoa@g:
   320                           	callstack 0
   321                           
   322                           ; 4 bytes @ 0x2C
   323  00008C                     	ds	4
   324  000090                     efgtoa@e:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0x30
   328  000090                     	ds	2
   329  000092                     efgtoa@n:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0x32
   333  000092                     	ds	2
   334  000094                     efgtoa@u:
   335                           	callstack 0
   336                           
   337                           ; 4 bytes @ 0x34
   338  000094                     	ds	4
   339  000098                     _vfpfcnvrt$877:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x38
   343  000098                     	ds	2
   344  00009A                     _vfpfcnvrt$881:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x3A
   348  00009A                     	ds	2
   349  00009C                     vfpfcnvrt@f:
   350                           	callstack 0
   351                           
   352                           ; 4 bytes @ 0x3C
   353  00009C                     	ds	4
   354  0000A0                     vfpfcnvrt@ct:
   355                           	callstack 0
   356                           
   357                           ; 3 bytes @ 0x40
   358  0000A0                     	ds	3
   359  0000A3                     vfpfcnvrt@c:
   360                           	callstack 0
   361                           
   362                           ; 1 bytes @ 0x43
   363  0000A3                     	ds	1
   364  0000A4                     ?_sprintf:
   365                           	callstack 0
   366  0000A4                     sprintf@s:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x44
   370  0000A4                     	ds	2
   371  0000A6                     sprintf@fmt:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x46
   375  0000A6                     	ds	8
   376  0000AE                     sprintf@ap:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x4E
   380  0000AE                     	ds	2
   381  0000B0                     sprintf@f:
   382                           	callstack 0
   383                           
   384                           ; 6 bytes @ 0x50
   385  0000B0                     	ds	6
   386  0000B6                     ??_main:
   387                           
   388                           ; 1 bytes @ 0x56
   389  0000B6                     	ds	2
   390                           
   391                           	psect	cstackCOMRAM
   392  000001                     __pcstackCOMRAM:
   393                           	callstack 0
   394  000001                     ??_Lcd_Cmd:
   395  000001                     ??_Lcd_Chr_CP:
   396  000001                     ?_strlen:
   397                           	callstack 0
   398  000001                     ?___fpclassifyf:
   399                           	callstack 0
   400  000001                     ?_isupper:
   401                           	callstack 0
   402  000001                     ?_isdigit:
   403                           	callstack 0
   404  000001                     ?_strncmp:
   405                           	callstack 0
   406  000001                     ?_isspace:
   407                           	callstack 0
   408  000001                     ?___wmul:
   409                           	callstack 0
   410  000001                     ?___awdiv:
   411                           	callstack 0
   412  000001                     ?___awmod:
   413                           	callstack 0
   414  000001                     ?___fladd:
   415                           	callstack 0
   416  000001                     ?___flmul:
   417                           	callstack 0
   418  000001                     ?___flneg:
   419                           	callstack 0
   420  000001                     ?___fltol:
   421                           	callstack 0
   422  000001                     ___wmul@multiplier:
   423                           	callstack 0
   424  000001                     ___awdiv@dividend:
   425                           	callstack 0
   426  000001                     ___awmod@dividend:
   427                           	callstack 0
   428  000001                     isdigit@c:
   429                           	callstack 0
   430  000001                     isspace@c:
   431                           	callstack 0
   432  000001                     isupper@c:
   433                           	callstack 0
   434  000001                     fputc@c:
   435                           	callstack 0
   436  000001                     strcpy@dest:
   437                           	callstack 0
   438  000001                     strlen@s:
   439                           	callstack 0
   440  000001                     strncmp@_l:
   441                           	callstack 0
   442  000001                     ___fleq@ff1:
   443                           	callstack 0
   444  000001                     ___flneg@f1:
   445                           	callstack 0
   446  000001                     ___fltol@f1:
   447                           	callstack 0
   448  000001                     ___fladd@b:
   449                           	callstack 0
   450  000001                     ___flmul@b:
   451                           	callstack 0
   452  000001                     ___fpclassifyf@x:
   453                           	callstack 0
   454                           
   455                           ; 4 bytes @ 0x0
   456  000001                     	ds	2
   457  000003                     ??_isupper:
   458  000003                     ??_isdigit:
   459  000003                     ??_isspace:
   460  000003                     Lcd_Chr_CP@data:
   461                           	callstack 0
   462  000003                     Lcd_Cmd@data:
   463                           	callstack 0
   464  000003                     ___wmul@multiplicand:
   465                           	callstack 0
   466  000003                     ___awdiv@divisor:
   467                           	callstack 0
   468  000003                     ___awmod@divisor:
   469                           	callstack 0
   470  000003                     fputc@fp:
   471                           	callstack 0
   472  000003                     strcpy@src:
   473                           	callstack 0
   474  000003                     strlen@a:
   475                           	callstack 0
   476  000003                     strncmp@_r:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x2
   480  000003                     	ds	1
   481  000004                     ??_Lcd_Init:
   482  000004                     Lcd_Out2@x:
   483                           	callstack 0
   484                           
   485                           ; 1 bytes @ 0x3
   486  000004                     	ds	1
   487  000005                     ??_fputc:
   488  000005                     ??___fpclassifyf:
   489  000005                     ??_strcpy:
   490  000005                     ??___fltol:
   491  000005                     Lcd_Init@data:
   492                           	callstack 0
   493  000005                     ___awdiv@counter:
   494                           	callstack 0
   495  000005                     ___awmod@counter:
   496                           	callstack 0
   497  000005                     Lcd_Out2@buffer:
   498                           	callstack 0
   499  000005                     ___wmul@product:
   500                           	callstack 0
   501  000005                     strncmp@n:
   502                           	callstack 0
   503  000005                     ___fleq@ff2:
   504                           	callstack 0
   505  000005                     ___fladd@a:
   506                           	callstack 0
   507  000005                     ___flmul@a:
   508                           	callstack 0
   509                           
   510                           ; 4 bytes @ 0x4
   511  000005                     	ds	1
   512  000006                     ___awdiv@sign:
   513                           	callstack 0
   514  000006                     ___awmod@sign:
   515                           	callstack 0
   516                           
   517                           ; 1 bytes @ 0x5
   518  000006                     	ds	1
   519  000007                     ??_strncmp:
   520  000007                     ??_Lcd_Out2:
   521  000007                     ?_tolower:
   522                           	callstack 0
   523  000007                     ?___xxtofl:
   524                           	callstack 0
   525  000007                     _isspace$946:
   526                           	callstack 0
   527  000007                     ___awdiv@quotient:
   528                           	callstack 0
   529  000007                     strcpy@s:
   530                           	callstack 0
   531  000007                     tolower@c:
   532                           	callstack 0
   533  000007                     ___xxtofl@val:
   534                           	callstack 0
   535                           
   536                           ; 4 bytes @ 0x6
   537  000007                     	ds	1
   538  000008                     ?_atoi:
   539                           	callstack 0
   540  000008                     atoi@s:
   541                           	callstack 0
   542  000008                     strncmp@l:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x7
   546  000008                     	ds	1
   547  000009                     ??___fladd:
   548  000009                     ??___flmul:
   549  000009                     ??_tolower:
   550  000009                     ??___fleq:
   551  000009                     Lcd_Out2@y:
   552                           	callstack 0
   553  000009                     ___fltol@sign1:
   554                           	callstack 0
   555  000009                     ___fpclassifyf@e:
   556                           	callstack 0
   557  000009                     strcpy@d:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x8
   561  000009                     	ds	1
   562  00000A                     ??_atoi:
   563  00000A                     Lcd_Out2@data:
   564                           	callstack 0
   565  00000A                     ___fltol@exp1:
   566                           	callstack 0
   567  00000A                     fputs@s:
   568                           	callstack 0
   569  00000A                     strncmp@r:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x9
   573  00000A                     	ds	1
   574  00000B                     ??___xxtofl:
   575  00000B                     ___fpclassifyf@u:
   576                           	callstack 0
   577                           
   578                           ; 4 bytes @ 0xA
   579  00000B                     	ds	1
   580  00000C                     fputs@fp:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0xB
   584  00000C                     	ds	1
   585  00000D                     ___fladd@signs:
   586                           	callstack 0
   587  00000D                     ___flmul@sign:
   588                           	callstack 0
   589  00000D                     _tolower$1010:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0xC
   593  00000D                     	ds	1
   594  00000E                     ___fladd@aexp:
   595                           	callstack 0
   596  00000E                     fputs@c:
   597                           	callstack 0
   598  00000E                     atoi@neg:
   599                           	callstack 0
   600  00000E                     ___flmul@grs:
   601                           	callstack 0
   602                           
   603                           ; 4 bytes @ 0xD
   604  00000E                     	ds	1
   605  00000F                     ___fladd@bexp:
   606                           	callstack 0
   607  00000F                     ___xxtofl@sign:
   608                           	callstack 0
   609  00000F                     fputs@i:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0xE
   613  00000F                     	ds	1
   614  000010                     ___fladd@grs:
   615                           	callstack 0
   616  000010                     ___xxtofl@exp:
   617                           	callstack 0
   618  000010                     _atoi$915:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0xF
   622  000010                     	ds	1
   623  000011                     ?_pad:
   624                           	callstack 0
   625  000011                     pad@fp:
   626                           	callstack 0
   627  000011                     ___xxtofl@arg:
   628                           	callstack 0
   629                           
   630                           ; 4 bytes @ 0x10
   631  000011                     	ds	1
   632  000012                     ___flmul@aexp:
   633                           	callstack 0
   634  000012                     _atoi$917:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x11
   638  000012                     	ds	1
   639  000013                     ___flmul@bexp:
   640                           	callstack 0
   641  000013                     pad@buf:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x12
   645  000013                     	ds	1
   646  000014                     _atoi$916:
   647                           	callstack 0
   648  000014                     ___flmul@prod:
   649                           	callstack 0
   650                           
   651                           ; 4 bytes @ 0x13
   652  000014                     	ds	1
   653  000015                     ?___fldiv:
   654                           	callstack 0
   655  000015                     pad@p:
   656                           	callstack 0
   657  000015                     atoi@n:
   658                           	callstack 0
   659  000015                     ___fldiv@b:
   660                           	callstack 0
   661                           
   662                           ; 4 bytes @ 0x14
   663  000015                     	ds	2
   664  000017                     ??_pad:
   665                           
   666                           ; 1 bytes @ 0x16
   667  000017                     	ds	1
   668  000018                     ___flmul@temp:
   669                           	callstack 0
   670  000018                     pad@i:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x17
   674  000018                     	ds	1
   675  000019                     ___fldiv@a:
   676                           	callstack 0
   677                           
   678                           ; 4 bytes @ 0x18
   679  000019                     	ds	1
   680  00001A                     ?___flsub:
   681                           	callstack 0
   682  00001A                     pad@w:
   683                           	callstack 0
   684  00001A                     ___flge@ff1:
   685                           	callstack 0
   686  00001A                     ___flsub@b:
   687                           	callstack 0
   688                           
   689                           ; 4 bytes @ 0x19
   690  00001A                     	ds	3
   691  00001D                     ??___fldiv:
   692                           
   693                           ; 1 bytes @ 0x1C
   694  00001D                     	ds	1
   695  00001E                     ___flge@ff2:
   696                           	callstack 0
   697  00001E                     ___flsub@a:
   698                           	callstack 0
   699                           
   700                           ; 4 bytes @ 0x1D
   701  00001E                     	ds	3
   702  000021                     ___fldiv@rem:
   703                           	callstack 0
   704                           
   705                           ; 4 bytes @ 0x20
   706  000021                     	ds	1
   707  000022                     ??___flge:
   708                           
   709                           ; 1 bytes @ 0x21
   710  000022                     	ds	3
   711  000025                     ___fldiv@sign:
   712                           	callstack 0
   713                           
   714                           ; 1 bytes @ 0x24
   715  000025                     	ds	1
   716  000026                     ___fldiv@new_exp:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x25
   720  000026                     	ds	2
   721  000028                     ___fldiv@grs:
   722                           	callstack 0
   723                           
   724                           ; 4 bytes @ 0x27
   725  000028                     	ds	4
   726  00002C                     ___fldiv@bexp:
   727                           	callstack 0
   728                           
   729                           ; 1 bytes @ 0x2B
   730  00002C                     	ds	1
   731  00002D                     ___fldiv@aexp:
   732                           	callstack 0
   733                           
   734                           ; 1 bytes @ 0x2C
   735  00002D                     	ds	1
   736  00002E                     ?_floorf:
   737                           	callstack 0
   738  00002E                     floorf@x:
   739                           	callstack 0
   740                           
   741                           ; 4 bytes @ 0x2D
   742  00002E                     	ds	4
   743  000032                     ??_floorf:
   744                           
   745                           ; 1 bytes @ 0x31
   746  000032                     	ds	6
   747  000038                     floorf@m:
   748                           	callstack 0
   749                           
   750                           ; 4 bytes @ 0x37
   751  000038                     	ds	4
   752  00003C                     floorf@e:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x3B
   756  00003C                     	ds	2
   757  00003E                     floorf@u:
   758                           	callstack 0
   759                           
   760                           ; 4 bytes @ 0x3D
   761  00003E                     	ds	4
   762  000042                     ?_efgtoa:
   763                           	callstack 0
   764  000042                     efgtoa@fp:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0x41
   768  000042                     	ds	2
   769  000044                     efgtoa@f:
   770                           	callstack 0
   771                           
   772                           ; 4 bytes @ 0x43
   773  000044                     	ds	4
   774  000048                     efgtoa@c:
   775                           	callstack 0
   776                           
   777                           ; 1 bytes @ 0x47
   778  000048                     	ds	1
   779  000049                     ??_efgtoa:
   780                           
   781                           ; 1 bytes @ 0x48
   782  000049                     	ds	5
   783  00004E                     ?_vfpfcnvrt:
   784                           	callstack 0
   785  00004E                     vfpfcnvrt@fp:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x4D
   789  00004E                     	ds	2
   790  000050                     vfpfcnvrt@fmt:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x4F
   794  000050                     	ds	2
   795  000052                     vfpfcnvrt@ap:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x51
   799  000052                     	ds	2
   800  000054                     ??_vfpfcnvrt:
   801                           
   802                           ; 1 bytes @ 0x53
   803  000054                     	ds	4
   804  000058                     ?_vfprintf:
   805                           	callstack 0
   806  000058                     vfprintf@fp:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x57
   810  000058                     	ds	2
   811  00005A                     vfprintf@fmt:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x59
   815  00005A                     	ds	2
   816  00005C                     vfprintf@ap:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x5B
   820  00005C                     	ds	2
   821  00005E                     vfprintf@cfmt:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x5D
   825  00005E                     	ds	2
   826  000060                     
   827                           ; 1 bytes @ 0x5F
   828 ;;
   829 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   830 ;;
   831 ;; *************** function _main *****************
   832 ;; Defined at:
   833 ;;		line 80 in file "Display.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;		None
   836 ;; Auto vars:     Size  Location     Type
   837 ;;		None
   838 ;; Return value:  Size  Location     Type
   839 ;;                  1    wreg      void 
   840 ;; Registers used:
   841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   847 ;;      Params:         0       0       0       0       0       0       0       0       0
   848 ;;      Locals:         0       0       0       0       0       0       0       0       0
   849 ;;      Temps:          0       2       0       0       0       0       0       0       0
   850 ;;      Totals:         0       2       0       0       0       0       0       0       0
   851 ;;Total ram usage:        2 bytes
   852 ;; Hardware stack levels required when called:    8
   853 ;; This function calls:
   854 ;;		_Lcd_Cmd
   855 ;;		_Lcd_Init
   856 ;;		_Lcd_Out2
   857 ;;		___fldiv
   858 ;;		___wmul
   859 ;;		___xxtofl
   860 ;;		_sprintf
   861 ;; This function is called by:
   862 ;;		Startup code after reset
   863 ;; This function uses a non-reentrant model
   864 ;;
   865                           
   866                           	psect	text0
   867  002E22                     __ptext0:
   868                           	callstack 0
   869  002E22                     _main:
   870                           	callstack 23
   871  002E22                     
   872                           ;Display.c: 81:     TRISA = 0b11111111;
   873  002E22  6892               	setf	146,c	;volatile
   874  002E24                     
   875                           ;Display.c: 82:     TRISB = 0b00000000;
   876  002E24  0E00               	movlw	0
   877  002E26  6E93               	movwf	147,c	;volatile
   878                           
   879                           ;Display.c: 83:     TRISC = 0b00000000;
   880  002E28  0E00               	movlw	0
   881  002E2A  6E94               	movwf	148,c	;volatile
   882  002E2C                     
   883                           ;Display.c: 84:     ADCON0bits.ADON = 1;
   884  002E2C  80C2               	bsf	194,0,c	;volatile
   885                           
   886                           ;Display.c: 85:     ADCON0bits.CHS = 1;
   887  002E2E  50C2               	movf	194,w,c	;volatile
   888  002E30  0BC3               	andlw	-61
   889  002E32  0904               	iorlw	4
   890  002E34  6EC2               	movwf	194,c	;volatile
   891                           
   892                           ;Display.c: 86:     ADCON2bits.ACQT = 2;
   893  002E36  50C0               	movf	192,w,c	;volatile
   894  002E38  0BC7               	andlw	-57
   895  002E3A  0910               	iorlw	16
   896  002E3C  6EC0               	movwf	192,c	;volatile
   897  002E3E                     
   898                           ;Display.c: 87:     ADCON2bits.ADFM = 1;
   899  002E3E  8EC0               	bsf	192,7,c	;volatile
   900  002E40                     
   901                           ;Display.c: 88:     Lcd_Init();
   902  002E40  EC89  F016         	call	_Lcd_Init	;wreg free
   903  002E44                     
   904                           ;Display.c: 89:     Lcd_Cmd(1);
   905  002E44  0E01               	movlw	1
   906  002E46  ECF7  F015         	call	_Lcd_Cmd
   907  002E4A                     
   908                           ;Display.c: 90:     Lcd_Cmd(12);
   909  002E4A  0E0C               	movlw	12
   910  002E4C  ECF7  F015         	call	_Lcd_Cmd
   911  002E50                     
   912                           ;Display.c: 91:     _delay((unsigned long)((100)*(8000000L/4000.0)));
   913  002E50  0E02               	movlw	2
   914  002E52  0100               	movlb	0	; () banked
   915  002E54  6FB7               	movwf	(??_main+1)& (0+255),b
   916  002E56  0E04               	movlw	4
   917  002E58  6FB6               	movwf	??_main& (0+255),b
   918  002E5A  0EBA               	movlw	186
   919  002E5C                     u4977:
   920  002E5C  2EE8               	decfsz	wreg,f,c
   921  002E5E  D7FE               	bra	u4977
   922  002E60  2FB6               	decfsz	??_main& (0+255),f,b
   923  002E62  D7FC               	bra	u4977
   924  002E64  2FB7               	decfsz	(??_main+1)& (0+255),f,b
   925  002E66  D7FA               	bra	u4977
   926  002E68  F000               	nop	
   927  002E6A                     l4091:
   928                           
   929                           ;Display.c: 93:         ADCON0bits.GO_DONE = 1;
   930  002E6A  82C2               	bsf	194,1,c	;volatile
   931  002E6C                     l77:
   932  002E6C  B2C2               	btfsc	194,1,c	;volatile
   933  002E6E  EF3B  F017         	goto	u4961
   934  002E72  EF3D  F017         	goto	u4960
   935  002E76                     u4961:
   936  002E76  EF36  F017         	goto	l77
   937  002E7A                     u4960:
   938  002E7A                     
   939                           ;Display.c: 95:         value_adc = ADRESH;
   940  002E7A  CFC4 F0CC          	movff	4036,_value_adc	;volatile
   941  002E7E  0100               	movlb	0	; () banked
   942  002E80  6BCD               	clrf	(_value_adc+1)& (0+255),b
   943  002E82                     
   944                           ; BSR set to: 0
   945                           ;Display.c: 96:         value_adc = (value_adc << 8) | ADRESL;
   946  002E82  51CC               	movf	_value_adc& (0+255),w,b
   947  002E84  6FB6               	movwf	??_main& (0+255),b
   948  002E86  50C3               	movf	195,w,c	;volatile
   949  002E88  6FCC               	movwf	_value_adc& (0+255),b
   950  002E8A  C0B6  F0CD         	movff	??_main,_value_adc+1
   951  002E8E                     
   952                           ; BSR set to: 0
   953                           ;Display.c: 98:         tension = (value_adc * 5)/1023.0;
   954  002E8E  C0CC  F001         	movff	_value_adc,___wmul@multiplier
   955  002E92  C0CD  F002         	movff	_value_adc+1,___wmul@multiplier+1
   956  002E96  0E00               	movlw	0
   957  002E98  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   958  002E9A  0E05               	movlw	5
   959  002E9C  6E03               	movwf	___wmul@multiplicand^0,c
   960  002E9E  EC40  F01D         	call	___wmul	;wreg free
   961  002EA2  C001  F007         	movff	?___wmul,___xxtofl@val
   962  002EA6  C002  F008         	movff	?___wmul+1,___xxtofl@val+1
   963  002EAA  6A09               	clrf	(___xxtofl@val+2)^0,c
   964  002EAC  6A0A               	clrf	(___xxtofl@val+3)^0,c
   965  002EAE  0E00               	movlw	0
   966  002EB0  ECBF  F013         	call	___xxtofl
   967  002EB4  C007  F015         	movff	?___xxtofl,___fldiv@b
   968  002EB8  C008  F016         	movff	?___xxtofl+1,___fldiv@b+1
   969  002EBC  C009  F017         	movff	?___xxtofl+2,___fldiv@b+2
   970  002EC0  C00A  F018         	movff	?___xxtofl+3,___fldiv@b+3
   971  002EC4  0E00               	movlw	0
   972  002EC6  6E19               	movwf	___fldiv@a^0,c
   973  002EC8  0EC0               	movlw	192
   974  002ECA  6E1A               	movwf	(___fldiv@a+1)^0,c
   975  002ECC  0E7F               	movlw	127
   976  002ECE  6E1B               	movwf	(___fldiv@a+2)^0,c
   977  002ED0  0E44               	movlw	68
   978  002ED2  6E1C               	movwf	(___fldiv@a+3)^0,c
   979  002ED4  ECE9  F010         	call	___fldiv	;wreg free
   980  002ED8  C015  F0C0         	movff	?___fldiv,_tension
   981  002EDC  C016  F0C1         	movff	?___fldiv+1,_tension+1
   982  002EE0  C017  F0C2         	movff	?___fldiv+2,_tension+2
   983  002EE4  C018  F0C3         	movff	?___fldiv+3,_tension+3
   984  002EE8                     
   985                           ;Display.c: 99:         sprintf (txt, "Tension %.2f    ",tension);
   986  002EE8  0ECE               	movlw	low _txt
   987  002EEA  0100               	movlb	0	; () banked
   988  002EEC  6FA4               	movwf	sprintf@s& (0+255),b
   989  002EEE  0E00               	movlw	high _txt
   990  002EF0  6FA5               	movwf	(sprintf@s+1)& (0+255),b
   991  002EF2  0E01               	movlw	low STR_1
   992  002EF4  6FA6               	movwf	sprintf@fmt& (0+255),b
   993  002EF6  0E08               	movlw	high STR_1
   994  002EF8  6FA7               	movwf	(sprintf@fmt+1)& (0+255),b
   995  002EFA  C0C0  F0A8         	movff	_tension,?_sprintf+4
   996  002EFE  C0C1  F0A9         	movff	_tension+1,?_sprintf+5
   997  002F02  C0C2  F0AA         	movff	_tension+2,?_sprintf+6
   998  002F06  C0C3  F0AB         	movff	_tension+3,?_sprintf+7
   999  002F0A  EC3A  F01C         	call	_sprintf	;wreg free
  1000  002F0E                     
  1001                           ;Display.c: 100:         Lcd_Out2(1,1,txt);
  1002  002F0E  0E01               	movlw	1
  1003  002F10  6E04               	movwf	Lcd_Out2@x^0,c
  1004  002F12  0ECE               	movlw	low _txt
  1005  002F14  6E05               	movwf	Lcd_Out2@buffer^0,c
  1006  002F16  0E00               	movlw	high _txt
  1007  002F18  6E06               	movwf	(Lcd_Out2@buffer+1)^0,c
  1008  002F1A  0E01               	movlw	1
  1009  002F1C  EC5C  F01B         	call	_Lcd_Out2
  1010  002F20                     
  1011                           ;Display.c: 101:         PORTC = value_adc;
  1012  002F20  C0CC  FF82         	movff	_value_adc,3970	;volatile
  1013  002F24  EF35  F017         	goto	l4091
  1014  002F28  EF00  F000         	goto	start
  1015  002F2C                     __end_of_main:
  1016                           	callstack 0
  1017                           
  1018 ;; *************** function _sprintf *****************
  1019 ;; Defined at:
  1020 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_sprintf.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;  s               2   68[BANK0 ] PTR unsigned char 
  1023 ;;		 -> txt(20), 
  1024 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  1025 ;;		 -> STR_1(17), 
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  f               6   80[BANK0 ] struct _IO_FILE
  1028 ;;  ap              2   78[BANK0 ] PTR void [1]
  1029 ;;		 -> ?_sprintf(2), 
  1030 ;;  ret             2    0        int 
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  2   68[BANK0 ] int 
  1033 ;; Registers used:
  1034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1040 ;;      Params:         0       8       0       0       0       0       0       0       0
  1041 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1042 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1043 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1044 ;;Total ram usage:       18 bytes
  1045 ;; Hardware stack levels used:    1
  1046 ;; Hardware stack levels required when called:    7
  1047 ;; This function calls:
  1048 ;;		_vfprintf
  1049 ;; This function is called by:
  1050 ;;		_main
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           	psect	text1
  1055  003874                     __ptext1:
  1056                           	callstack 0
  1057  003874                     _sprintf:
  1058                           	callstack 23
  1059  003874  0EA8               	movlw	low (?_sprintf+4)
  1060  003876  0100               	movlb	0	; () banked
  1061  003878  6FAE               	movwf	sprintf@ap& (0+255),b
  1062  00387A  0E00               	movlw	high (?_sprintf+4)
  1063  00387C  6FAF               	movwf	(sprintf@ap+1)& (0+255),b
  1064  00387E  C0A4  F0B0         	movff	sprintf@s,sprintf@f
  1065  003882  C0A5  F0B1         	movff	sprintf@s+1,sprintf@f+1
  1066  003886                     
  1067                           ; BSR set to: 0
  1068  003886  0E00               	movlw	0
  1069  003888  6FB3               	movwf	(sprintf@f+3)& (0+255),b
  1070  00388A  0E00               	movlw	0
  1071  00388C  6FB2               	movwf	(sprintf@f+2)& (0+255),b
  1072  00388E                     
  1073                           ; BSR set to: 0
  1074  00388E  0E00               	movlw	0
  1075  003890  6FB5               	movwf	(sprintf@f+5)& (0+255),b
  1076  003892  0E00               	movlw	0
  1077  003894  6FB4               	movwf	(sprintf@f+4)& (0+255),b
  1078  003896                     
  1079                           ; BSR set to: 0
  1080  003896  0EB0               	movlw	low sprintf@f
  1081  003898  6E58               	movwf	vfprintf@fp^0,c
  1082  00389A  0E00               	movlw	high sprintf@f
  1083  00389C  6E59               	movwf	(vfprintf@fp+1)^0,c
  1084  00389E  C0A6  F05A         	movff	sprintf@fmt,vfprintf@fmt
  1085  0038A2  C0A7  F05B         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1086  0038A6  0EAE               	movlw	low sprintf@ap
  1087  0038A8  6E5C               	movwf	vfprintf@ap^0,c
  1088  0038AA  0E00               	movlw	high sprintf@ap
  1089  0038AC  6E5D               	movwf	(vfprintf@ap+1)^0,c
  1090  0038AE  ECAB  F01B         	call	_vfprintf	;wreg free
  1091  0038B2  0100               	movlb	0	; () banked
  1092  0038B4  51B2               	movf	(sprintf@f+2)& (0+255),w,b
  1093  0038B6  25A4               	addwf	sprintf@s& (0+255),w,b
  1094  0038B8  6ED9               	movwf	fsr2l,c
  1095  0038BA  51B3               	movf	(sprintf@f+3)& (0+255),w,b
  1096  0038BC  21A5               	addwfc	(sprintf@s+1)& (0+255),w,b
  1097  0038BE  6EDA               	movwf	fsr2h,c
  1098  0038C0  0E00               	movlw	0
  1099  0038C2  6EDF               	movwf	indf2,c
  1100  0038C4                     
  1101                           ; BSR set to: 0
  1102  0038C4  0012               	return		;funcret
  1103  0038C6                     __end_of_sprintf:
  1104                           	callstack 0
  1105                           
  1106 ;; *************** function _vfprintf *****************
  1107 ;; Defined at:
  1108 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;  fp              2   87[COMRAM] PTR struct _IO_FILE
  1111 ;;		 -> sprintf@f(6), 
  1112 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  1113 ;;		 -> STR_1(17), 
  1114 ;;  ap              2   91[COMRAM] PTR PTR void 
  1115 ;;		 -> sprintf@ap(2), 
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;  cfmt            2   93[COMRAM] PTR unsigned char 
  1118 ;;		 -> STR_1(17), 
  1119 ;; Return value:  Size  Location     Type
  1120 ;;                  2   87[COMRAM] int 
  1121 ;; Registers used:
  1122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1128 ;;      Params:         6       0       0       0       0       0       0       0       0
  1129 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1130 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1131 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1132 ;;Total ram usage:        8 bytes
  1133 ;; Hardware stack levels used:    1
  1134 ;; Hardware stack levels required when called:    6
  1135 ;; This function calls:
  1136 ;;		_vfpfcnvrt
  1137 ;; This function is called by:
  1138 ;;		_sprintf
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           	psect	text2
  1143  003756                     __ptext2:
  1144                           	callstack 0
  1145  003756                     _vfprintf:
  1146                           	callstack 23
  1147  003756                     
  1148                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1149  003756  C05A  F05E         	movff	vfprintf@fmt,vfprintf@cfmt
  1150  00375A  C05B  F05F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1151  00375E                     
  1152                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1153  00375E  0E00               	movlw	0
  1154  003760  0100               	movlb	0	; () banked
  1155  003762  6FC5               	movwf	(_nout+1)& (0+255),b
  1156  003764  0E00               	movlw	0
  1157  003766  6FC4               	movwf	_nout& (0+255),b
  1158                           
  1159                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1160  003768  EFC9  F01B         	goto	l3907
  1161  00376C                     l3905:
  1162                           
  1163                           ; BSR set to: 0
  1164                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1165  00376C  C058  F04E         	movff	vfprintf@fp,vfpfcnvrt@fp
  1166  003770  C059  F04F         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1167  003774  0E5E               	movlw	low vfprintf@cfmt
  1168  003776  6E50               	movwf	vfpfcnvrt@fmt^0,c
  1169  003778  0E00               	movlw	high vfprintf@cfmt
  1170  00377A  6E51               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1171  00377C  C05C  F052         	movff	vfprintf@ap,vfpfcnvrt@ap
  1172  003780  C05D  F053         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1173  003784  EC9F  F00C         	call	_vfpfcnvrt	;wreg free
  1174  003788  504E               	movf	?_vfpfcnvrt^0,w,c
  1175  00378A  0100               	movlb	0	; () banked
  1176  00378C  27C4               	addwf	_nout& (0+255),f,b
  1177  00378E  504F               	movf	(?_vfpfcnvrt+1)^0,w,c
  1178  003790  23C5               	addwfc	(_nout+1)& (0+255),f,b
  1179  003792                     l3907:
  1180                           
  1181                           ; BSR set to: 0
  1182                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1183  003792  C05E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1184  003796  C05F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1185  00379A                     	if	0	;tblptru may be non-zero
  1186  00379A                     	endif
  1187  00379A                     	if	0	;tblptru may be non-zero
  1188  00379A                     	endif
  1189  00379A  0008               	tblrd		*
  1190  00379C  50F5               	movf	tablat,w,c
  1191  00379E  0900               	iorlw	0
  1192  0037A0  A4D8               	btfss	status,2,c
  1193  0037A2  EFD5  F01B         	goto	u4821
  1194  0037A6  EFD7  F01B         	goto	u4820
  1195  0037AA                     u4821:
  1196  0037AA  EFB6  F01B         	goto	l3905
  1197  0037AE                     u4820:
  1198  0037AE                     
  1199                           ; BSR set to: 0
  1200                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1201  0037AE  C0C4  F058         	movff	_nout,?_vfprintf
  1202  0037B2  C0C5  F059         	movff	_nout+1,?_vfprintf+1
  1203  0037B6                     
  1204                           ; BSR set to: 0
  1205  0037B6  0012               	return		;funcret
  1206  0037B8                     __end_of_vfprintf:
  1207                           	callstack 0
  1208                           
  1209 ;; *************** function _vfpfcnvrt *****************
  1210 ;; Defined at:
  1211 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;  fp              2   77[COMRAM] PTR struct _IO_FILE
  1214 ;;		 -> sprintf@f(6), 
  1215 ;;  fmt             2   79[COMRAM] PTR PTR unsigned char 
  1216 ;;		 -> vfprintf@cfmt(2), 
  1217 ;;  ap              2   81[COMRAM] PTR PTR void 
  1218 ;;		 -> sprintf@ap(2), 
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;  llu             8    0        unsigned long long 
  1221 ;;  ll              8    0        long long 
  1222 ;;  f               4   60[BANK0 ] long long 
  1223 ;;  ct              3   64[BANK0 ] unsigned char [3]
  1224 ;;  vp              3    0        PTR void 
  1225 ;;  cp              3    0        PTR unsigned char 
  1226 ;;  i               2    0        int 
  1227 ;;  done            2    0        int 
  1228 ;;  c               1   67[BANK0 ] unsigned char 
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  2   77[COMRAM] int 
  1231 ;; Registers used:
  1232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1238 ;;      Params:         6       0       0       0       0       0       0       0       0
  1239 ;;      Locals:         0      12       0       0       0       0       0       0       0
  1240 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1241 ;;      Totals:        10      12       0       0       0       0       0       0       0
  1242 ;;Total ram usage:       22 bytes
  1243 ;; Hardware stack levels used:    1
  1244 ;; Hardware stack levels required when called:    5
  1245 ;; This function calls:
  1246 ;;		_atoi
  1247 ;;		_efgtoa
  1248 ;;		_fputc
  1249 ;;		_isdigit
  1250 ;;		_isupper
  1251 ;;		_strncmp
  1252 ;;		_tolower
  1253 ;; This function is called by:
  1254 ;;		_vfprintf
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	text3
  1259  00193E                     __ptext3:
  1260                           	callstack 0
  1261  00193E                     _vfpfcnvrt:
  1262                           	callstack 23
  1263  00193E                     
  1264                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1265  00193E  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1266  001942  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1267  001946  CFDE FFF6          	movff	postinc2,tblptrl
  1268  00194A  CFDD FFF7          	movff	postdec2,tblptrh
  1269  00194E                     	if	0	;tblptru may be non-zero
  1270  00194E                     	endif
  1271  00194E                     	if	0	;tblptru may be non-zero
  1272  00194E                     	endif
  1273  00194E  0008               	tblrd		*
  1274  001950  50F5               	movf	tablat,w,c
  1275  001952  0A25               	xorlw	37
  1276  001954  A4D8               	btfss	status,2,c
  1277  001956  EFAF  F00C         	goto	u4621
  1278  00195A  EFB1  F00C         	goto	u4620
  1279  00195E                     u4621:
  1280  00195E  EFB8  F00E         	goto	l3847
  1281  001962                     u4620:
  1282  001962                     
  1283                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1284  001962  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1285  001966  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1286  00196A  2ADE               	incf	postinc2,f,c
  1287  00196C  0E00               	movlw	0
  1288  00196E  22DD               	addwfc	postdec2,f,c
  1289  001970                     
  1290                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1291  001970  0E00               	movlw	0
  1292  001972  0100               	movlb	0	; () banked
  1293  001974  6FC7               	movwf	(_width+1)& (0+255),b
  1294  001976  0E00               	movlw	0
  1295  001978  6FC6               	movwf	_width& (0+255),b
  1296  00197A  C0C6  F0CA         	movff	_width,_flags
  1297  00197E  C0C7  F0CB         	movff	_width+1,_flags+1
  1298  001982                     
  1299                           ; BSR set to: 0
  1300                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1301  001982  69C8               	setf	_prec& (0+255),b
  1302  001984  69C9               	setf	(_prec+1)& (0+255),b
  1303  001986                     
  1304                           ; BSR set to: 0
  1305                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1306  001986  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1307  00198A  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1308  00198E  CFDE FFF6          	movff	postinc2,tblptrl
  1309  001992  CFDD FFF7          	movff	postdec2,tblptrh
  1310  001996                     	if	0	;tblptru may be non-zero
  1311  001996                     	endif
  1312  001996                     	if	0	;tblptru may be non-zero
  1313  001996                     	endif
  1314  001996  0008               	tblrd		*
  1315  001998  50F5               	movf	tablat,w,c
  1316  00199A  0A2E               	xorlw	46
  1317  00199C  A4D8               	btfss	status,2,c
  1318  00199E  EFD3  F00C         	goto	u4631
  1319  0019A2  EFD5  F00C         	goto	u4630
  1320  0019A6                     u4631:
  1321  0019A6  EF53  F00D         	goto	l3793
  1322  0019AA                     u4630:
  1323  0019AA                     
  1324                           ; BSR set to: 0
  1325                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1326  0019AA  0E00               	movlw	0
  1327  0019AC  6FC9               	movwf	(_prec+1)& (0+255),b
  1328  0019AE  0E00               	movlw	0
  1329  0019B0  6FC8               	movwf	_prec& (0+255),b
  1330  0019B2                     
  1331                           ; BSR set to: 0
  1332                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1333  0019B2  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1334  0019B6  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1335  0019BA  2ADE               	incf	postinc2,f,c
  1336  0019BC  0E00               	movlw	0
  1337  0019BE  22DD               	addwfc	postdec2,f,c
  1338  0019C0                     
  1339                           ; BSR set to: 0
  1340                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1341  0019C0  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1342  0019C4  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1343  0019C8  CFDE FFF6          	movff	postinc2,tblptrl
  1344  0019CC  CFDD FFF7          	movff	postdec2,tblptrh
  1345  0019D0                     	if	0	;tblptru may be non-zero
  1346  0019D0                     	endif
  1347  0019D0                     	if	0	;tblptru may be non-zero
  1348  0019D0                     	endif
  1349  0019D0  0008               	tblrd		*
  1350  0019D2  50F5               	movf	tablat,w,c
  1351  0019D4  0A2A               	xorlw	42
  1352  0019D6  A4D8               	btfss	status,2,c
  1353  0019D8  EFF0  F00C         	goto	u4641
  1354  0019DC  EFF2  F00C         	goto	u4640
  1355  0019E0                     u4641:
  1356  0019E0  EF0F  F00D         	goto	l3783
  1357  0019E4                     u4640:
  1358  0019E4                     
  1359                           ; BSR set to: 0
  1360                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1361  0019E4  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1362  0019E8  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1363  0019EC  2ADE               	incf	postinc2,f,c
  1364  0019EE  0E00               	movlw	0
  1365  0019F0  22DD               	addwfc	postdec2,f,c
  1366                           
  1367                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1368  0019F2  C052  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1369  0019F6  C053  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1370  0019FA  CFDF F054          	movff	indf2,??_vfpfcnvrt
  1371  0019FE  0E02               	movlw	2
  1372  001A00  26DE               	addwf	postinc2,f,c
  1373  001A02  CFDF F055          	movff	indf2,??_vfpfcnvrt+1
  1374  001A06  0E00               	movlw	0
  1375  001A08  22DD               	addwfc	postdec2,f,c
  1376  001A0A  C054  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1377  001A0E  C055  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1378  001A12  CFDE F0C8          	movff	postinc2,_prec
  1379  001A16  CFDD F0C9          	movff	postdec2,_prec+1
  1380                           
  1381                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1382  001A1A  EF53  F00D         	goto	l3793
  1383  001A1E                     l3783:
  1384                           
  1385                           ; BSR set to: 0
  1386                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1387  001A1E  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1388  001A22  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1389  001A26  CFDE F008          	movff	postinc2,atoi@s
  1390  001A2A  CFDD F009          	movff	postdec2,atoi@s+1
  1391  001A2E  EC99  F014         	call	_atoi	;wreg free
  1392  001A32  C008  F0C8         	movff	?_atoi,_prec
  1393  001A36  C009  F0C9         	movff	?_atoi+1,_prec+1
  1394                           
  1395                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1396  001A3A  EF26  F00D         	goto	l3787
  1397  001A3E                     l3785:
  1398                           
  1399                           ; BSR set to: 0
  1400                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1401  001A3E  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1402  001A42  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1403  001A46  2ADE               	incf	postinc2,f,c
  1404  001A48  0E00               	movlw	0
  1405  001A4A  22DD               	addwfc	postdec2,f,c
  1406  001A4C                     l3787:
  1407  001A4C  0ED0               	movlw	208
  1408  001A4E  6E54               	movwf	??_vfpfcnvrt^0,c
  1409  001A50  0EFF               	movlw	255
  1410  001A52  6E55               	movwf	(??_vfpfcnvrt+1)^0,c
  1411  001A54  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1412  001A58  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1413  001A5C  CFDE FFF6          	movff	postinc2,tblptrl
  1414  001A60  CFDD FFF7          	movff	postdec2,tblptrh
  1415  001A64                     	if	0	;tblptru may be non-zero
  1416  001A64                     	endif
  1417  001A64                     	if	0	;tblptru may be non-zero
  1418  001A64                     	endif
  1419  001A64  0008               	tblrd		*
  1420  001A66  50F5               	movf	tablat,w,c
  1421  001A68  6E56               	movwf	(??_vfpfcnvrt+2)^0,c
  1422  001A6A  6A57               	clrf	(??_vfpfcnvrt+3)^0,c
  1423  001A6C  5054               	movf	??_vfpfcnvrt^0,w,c
  1424  001A6E  2656               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1425  001A70  5055               	movf	(??_vfpfcnvrt+1)^0,w,c
  1426  001A72  2257               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1427  001A74  5057               	movf	(??_vfpfcnvrt+3)^0,w,c
  1428  001A76  E10A               	bnz	u4650
  1429  001A78  0E0A               	movlw	10
  1430  001A7A  5C56               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1431  001A7C  A0D8               	btfss	status,0,c
  1432  001A7E  EF43  F00D         	goto	u4651
  1433  001A82  EF46  F00D         	goto	u4650
  1434  001A86                     u4651:
  1435  001A86  0E01               	movlw	1
  1436  001A88  EF47  F00D         	goto	u4660
  1437  001A8C                     u4650:
  1438  001A8C  0E00               	movlw	0
  1439  001A8E                     u4660:
  1440  001A8E  0100               	movlb	0	; () banked
  1441  001A90  6F98               	movwf	_vfpfcnvrt$877& (0+255),b
  1442  001A92  6B99               	clrf	(_vfpfcnvrt$877+1)& (0+255),b
  1443  001A94                     
  1444                           ; BSR set to: 0
  1445  001A94  5198               	movf	_vfpfcnvrt$877& (0+255),w,b
  1446  001A96  1199               	iorwf	(_vfpfcnvrt$877+1)& (0+255),w,b
  1447  001A98  A4D8               	btfss	status,2,c
  1448  001A9A  EF51  F00D         	goto	u4671
  1449  001A9E  EF53  F00D         	goto	u4670
  1450  001AA2                     u4671:
  1451  001AA2  EF1F  F00D         	goto	l3785
  1452  001AA6                     u4670:
  1453  001AA6                     l3793:
  1454                           
  1455                           ; BSR set to: 0
  1456                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1457  001AA6  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1458  001AAA  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1459  001AAE  CFDE FFF6          	movff	postinc2,tblptrl
  1460  001AB2  CFDD FFF7          	movff	postdec2,tblptrh
  1461  001AB6                     	if	0	;tblptru may be non-zero
  1462  001AB6                     	endif
  1463  001AB6                     	if	0	;tblptru may be non-zero
  1464  001AB6                     	endif
  1465  001AB6  0008               	tblrd		*
  1466  001AB8  50F5               	movf	tablat,w,c
  1467  001ABA  6E07               	movwf	tolower@c^0,c
  1468  001ABC  6A08               	clrf	(tolower@c+1)^0,c
  1469  001ABE  ECDC  F01B         	call	_tolower	;wreg free
  1470  001AC2  5007               	movf	?_tolower^0,w,c
  1471  001AC4  0100               	movlb	0	; () banked
  1472  001AC6  6FA0               	movwf	vfpfcnvrt@ct& (0+255),b
  1473  001AC8                     
  1474                           ; BSR set to: 0
  1475                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  1476  001AC8  51A0               	movf	vfpfcnvrt@ct& (0+255),w,b
  1477  001ACA  B4D8               	btfsc	status,2,c
  1478  001ACC  EF6A  F00D         	goto	u4681
  1479  001AD0  EF6C  F00D         	goto	u4680
  1480  001AD4                     u4681:
  1481  001AD4  EFA6  F00D         	goto	l3803
  1482  001AD8                     u4680:
  1483  001AD8                     
  1484                           ; BSR set to: 0
  1485                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  1486  001AD8  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1487  001ADC  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1488  001AE0  CFDE F054          	movff	postinc2,??_vfpfcnvrt
  1489  001AE4  CFDD F055          	movff	postdec2,??_vfpfcnvrt+1
  1490  001AE8  0E01               	movlw	1
  1491  001AEA  2654               	addwf	??_vfpfcnvrt^0,f,c
  1492  001AEC  0E00               	movlw	0
  1493  001AEE  2255               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1494  001AF0  C054  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1495  001AF4  C055  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1496  001AF8                     	if	0	;tblptru may be non-zero
  1497  001AF8                     	endif
  1498  001AF8                     	if	0	;tblptru may be non-zero
  1499  001AF8                     	endif
  1500  001AF8  0008               	tblrd		*
  1501  001AFA  50F5               	movf	tablat,w,c
  1502  001AFC  6E07               	movwf	tolower@c^0,c
  1503  001AFE  6A08               	clrf	(tolower@c+1)^0,c
  1504  001B00  ECDC  F01B         	call	_tolower	;wreg free
  1505  001B04  5007               	movf	?_tolower^0,w,c
  1506  001B06  0100               	movlb	0	; () banked
  1507  001B08  6FA1               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1508  001B0A                     
  1509                           ; BSR set to: 0
  1510                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  1511  001B0A  51A1               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1512  001B0C  B4D8               	btfsc	status,2,c
  1513  001B0E  EF8B  F00D         	goto	u4691
  1514  001B12  EF8D  F00D         	goto	u4690
  1515  001B16                     u4691:
  1516  001B16  EFA6  F00D         	goto	l3803
  1517  001B1A                     u4690:
  1518  001B1A                     
  1519                           ; BSR set to: 0
  1520                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  1521  001B1A  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1522  001B1E  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1523  001B22  CFDE F054          	movff	postinc2,??_vfpfcnvrt
  1524  001B26  CFDD F055          	movff	postdec2,??_vfpfcnvrt+1
  1525  001B2A  0E02               	movlw	2
  1526  001B2C  2654               	addwf	??_vfpfcnvrt^0,f,c
  1527  001B2E  0E00               	movlw	0
  1528  001B30  2255               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1529  001B32  C054  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1530  001B36  C055  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1531  001B3A                     	if	0	;tblptru may be non-zero
  1532  001B3A                     	endif
  1533  001B3A                     	if	0	;tblptru may be non-zero
  1534  001B3A                     	endif
  1535  001B3A  0008               	tblrd		*
  1536  001B3C  50F5               	movf	tablat,w,c
  1537  001B3E  6E07               	movwf	tolower@c^0,c
  1538  001B40  6A08               	clrf	(tolower@c+1)^0,c
  1539  001B42  ECDC  F01B         	call	_tolower	;wreg free
  1540  001B46  5007               	movf	?_tolower^0,w,c
  1541  001B48  0100               	movlb	0	; () banked
  1542  001B4A  6FA2               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1543  001B4C                     l3803:
  1544                           
  1545                           ; BSR set to: 0
  1546                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  1547  001B4C  0E66               	movlw	102
  1548  001B4E  19A0               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1549  001B50  A4D8               	btfss	status,2,c
  1550  001B52  EFAD  F00D         	goto	u4701
  1551  001B56  EFAF  F00D         	goto	u4700
  1552  001B5A                     u4701:
  1553  001B5A  EFEF  F00D         	goto	l3815
  1554  001B5E                     u4700:
  1555  001B5E                     
  1556                           ; BSR set to: 0
  1557                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  1558  001B5E  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1559  001B62  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1560  001B66  CFDE FFF6          	movff	postinc2,tblptrl
  1561  001B6A  CFDD FFF7          	movff	postdec2,tblptrh
  1562  001B6E                     	if	0	;tblptru may be non-zero
  1563  001B6E                     	endif
  1564  001B6E                     	if	0	;tblptru may be non-zero
  1565  001B6E                     	endif
  1566  001B6E  0008               	tblrd		*
  1567  001B70  CFF5 F0A3          	movff	tablat,vfpfcnvrt@c
  1568  001B74                     
  1569                           ; BSR set to: 0
  1570                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  1571  001B74  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1572  001B78  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1573  001B7C  2ADE               	incf	postinc2,f,c
  1574  001B7E  0E00               	movlw	0
  1575  001B80  22DD               	addwfc	postdec2,f,c
  1576  001B82                     
  1577                           ; BSR set to: 0
  1578                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1579  001B82  C052  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1580  001B86  C053  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1581  001B8A  CFDF F054          	movff	indf2,??_vfpfcnvrt
  1582  001B8E  0E04               	movlw	4
  1583  001B90  26DE               	addwf	postinc2,f,c
  1584  001B92  CFDF F055          	movff	indf2,??_vfpfcnvrt+1
  1585  001B96  0E00               	movlw	0
  1586  001B98  22DD               	addwfc	postdec2,f,c
  1587  001B9A  C054  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1588  001B9E  C055  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1589  001BA2  CFDE F09C          	movff	postinc2,vfpfcnvrt@f
  1590  001BA6  CFDE F09D          	movff	postinc2,vfpfcnvrt@f+1
  1591  001BAA  CFDE F09E          	movff	postinc2,vfpfcnvrt@f+2
  1592  001BAE  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+3
  1593  001BB2                     l3811:
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  1597  001BB2  C04E  F042         	movff	vfpfcnvrt@fp,efgtoa@fp
  1598  001BB6  C04F  F043         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1599  001BBA  C09C  F044         	movff	vfpfcnvrt@f,efgtoa@f
  1600  001BBE  C09D  F045         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1601  001BC2  C09E  F046         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1602  001BC6  C09F  F047         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1603  001BCA  C0A3  F048         	movff	vfpfcnvrt@c,efgtoa@c
  1604  001BCE  EC13  F004         	call	_efgtoa	;wreg free
  1605  001BD2  C042  F04E         	movff	?_efgtoa,?_vfpfcnvrt
  1606  001BD6  C043  F04F         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1607  001BDA  EFD3  F00E         	goto	l919
  1608  001BDE                     l3815:
  1609                           
  1610                           ; BSR set to: 0
  1611                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1612  001BDE  0EA0               	movlw	low vfpfcnvrt@ct
  1613  001BE0  6E01               	movwf	strncmp@_l^0,c
  1614  001BE2  0E00               	movlw	high vfpfcnvrt@ct
  1615  001BE4  6E02               	movwf	(strncmp@_l+1)^0,c
  1616  001BE6  0E22               	movlw	low STR_10
  1617  001BE8  6E03               	movwf	strncmp@_r^0,c
  1618  001BEA  0E08               	movlw	high STR_10
  1619  001BEC  6E04               	movwf	(strncmp@_r+1)^0,c
  1620  001BEE  0E00               	movlw	0
  1621  001BF0  6E06               	movwf	(strncmp@n+1)^0,c
  1622  001BF2  0E02               	movlw	2
  1623  001BF4  6E05               	movwf	strncmp@n^0,c
  1624  001BF6  EC1A  F019         	call	_strncmp	;wreg free
  1625  001BFA  5001               	movf	?_strncmp^0,w,c
  1626  001BFC  1002               	iorwf	(?_strncmp+1)^0,w,c
  1627  001BFE  A4D8               	btfss	status,2,c
  1628  001C00  EF04  F00E         	goto	u4711
  1629  001C04  EF06  F00E         	goto	u4710
  1630  001C08                     u4711:
  1631  001C08  EF82  F00E         	goto	l3831
  1632  001C0C                     u4710:
  1633  001C0C                     
  1634                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1635  001C0C  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1636  001C10  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1637  001C14  CFDE F054          	movff	postinc2,??_vfpfcnvrt
  1638  001C18  CFDD F055          	movff	postdec2,??_vfpfcnvrt+1
  1639  001C1C  0E01               	movlw	1
  1640  001C1E  2654               	addwf	??_vfpfcnvrt^0,f,c
  1641  001C20  0E00               	movlw	0
  1642  001C22  2255               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1643  001C24  C054  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1644  001C28  C055  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1645  001C2C                     	if	0	;tblptru may be non-zero
  1646  001C2C                     	endif
  1647  001C2C                     	if	0	;tblptru may be non-zero
  1648  001C2C                     	endif
  1649  001C2C  0008               	tblrd		*
  1650  001C2E  CFF5 F0A3          	movff	tablat,vfpfcnvrt@c
  1651  001C32  0EBF               	movlw	191
  1652  001C34  6E54               	movwf	??_vfpfcnvrt^0,c
  1653  001C36  0EFF               	movlw	255
  1654  001C38  6E55               	movwf	(??_vfpfcnvrt+1)^0,c
  1655  001C3A  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1656  001C3E  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1657  001C42  CFDE FFF6          	movff	postinc2,tblptrl
  1658  001C46  CFDD FFF7          	movff	postdec2,tblptrh
  1659  001C4A                     	if	0	;tblptru may be non-zero
  1660  001C4A                     	endif
  1661  001C4A                     	if	0	;tblptru may be non-zero
  1662  001C4A                     	endif
  1663  001C4A  0008               	tblrd		*
  1664  001C4C  50F5               	movf	tablat,w,c
  1665  001C4E  6E56               	movwf	(??_vfpfcnvrt+2)^0,c
  1666  001C50  6A57               	clrf	(??_vfpfcnvrt+3)^0,c
  1667  001C52  5054               	movf	??_vfpfcnvrt^0,w,c
  1668  001C54  2656               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1669  001C56  5055               	movf	(??_vfpfcnvrt+1)^0,w,c
  1670  001C58  2257               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1671  001C5A  5057               	movf	(??_vfpfcnvrt+3)^0,w,c
  1672  001C5C  E10A               	bnz	u4720
  1673  001C5E  0E1A               	movlw	26
  1674  001C60  5C56               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1675  001C62  A0D8               	btfss	status,0,c
  1676  001C64  EF36  F00E         	goto	u4721
  1677  001C68  EF39  F00E         	goto	u4720
  1678  001C6C                     u4721:
  1679  001C6C  0E01               	movlw	1
  1680  001C6E  EF3A  F00E         	goto	u4730
  1681  001C72                     u4720:
  1682  001C72  0E00               	movlw	0
  1683  001C74                     u4730:
  1684  001C74  0100               	movlb	0	; () banked
  1685  001C76  6F9A               	movwf	_vfpfcnvrt$881& (0+255),b
  1686  001C78  6B9B               	clrf	(_vfpfcnvrt$881+1)& (0+255),b
  1687  001C7A                     
  1688                           ; BSR set to: 0
  1689  001C7A  519A               	movf	_vfpfcnvrt$881& (0+255),w,b
  1690  001C7C  119B               	iorwf	(_vfpfcnvrt$881+1)& (0+255),w,b
  1691  001C7E  B4D8               	btfsc	status,2,c
  1692  001C80  EF44  F00E         	goto	u4741
  1693  001C84  EF46  F00E         	goto	u4740
  1694  001C88                     u4741:
  1695  001C88  EF60  F00E         	goto	l3825
  1696  001C8C                     u4740:
  1697  001C8C                     
  1698                           ; BSR set to: 0
  1699                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1700  001C8C  C052  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1701  001C90  C053  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1702  001C94  CFDF F054          	movff	indf2,??_vfpfcnvrt
  1703  001C98  0E04               	movlw	4
  1704  001C9A  26DE               	addwf	postinc2,f,c
  1705  001C9C  CFDF F055          	movff	indf2,??_vfpfcnvrt+1
  1706  001CA0  0E00               	movlw	0
  1707  001CA2  22DD               	addwfc	postdec2,f,c
  1708  001CA4  C054  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1709  001CA8  C055  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1710  001CAC  CFDE F09C          	movff	postinc2,vfpfcnvrt@f
  1711  001CB0  CFDE F09D          	movff	postinc2,vfpfcnvrt@f+1
  1712  001CB4  CFDE F09E          	movff	postinc2,vfpfcnvrt@f+2
  1713  001CB8  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+3
  1714                           
  1715                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  1716  001CBC  EF78  F00E         	goto	l926
  1717  001CC0                     l3825:
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1721  001CC0  C052  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1722  001CC4  C053  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1723  001CC8  CFDF F054          	movff	indf2,??_vfpfcnvrt
  1724  001CCC  0E04               	movlw	4
  1725  001CCE  26DE               	addwf	postinc2,f,c
  1726  001CD0  CFDF F055          	movff	indf2,??_vfpfcnvrt+1
  1727  001CD4  0E00               	movlw	0
  1728  001CD6  22DD               	addwfc	postdec2,f,c
  1729  001CD8  C054  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1730  001CDC  C055  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1731  001CE0  CFDE F09C          	movff	postinc2,vfpfcnvrt@f
  1732  001CE4  CFDE F09D          	movff	postinc2,vfpfcnvrt@f+1
  1733  001CE8  CFDE F09E          	movff	postinc2,vfpfcnvrt@f+2
  1734  001CEC  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+3
  1735  001CF0                     l926:
  1736                           
  1737                           ; BSR set to: 0
  1738                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  1739  001CF0  0E02               	movlw	2
  1740  001CF2  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1741  001CF6  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1742  001CFA  26DE               	addwf	postinc2,f,c
  1743  001CFC  0E00               	movlw	0
  1744  001CFE  22DD               	addwfc	postdec2,f,c
  1745  001D00  EFD9  F00D         	goto	l3811
  1746  001D04                     l3831:
  1747                           
  1748                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1749  001D04  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1750  001D08  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1751  001D0C  CFDE FFF6          	movff	postinc2,tblptrl
  1752  001D10  CFDD FFF7          	movff	postdec2,tblptrh
  1753  001D14                     	if	0	;tblptru may be non-zero
  1754  001D14                     	endif
  1755  001D14                     	if	0	;tblptru may be non-zero
  1756  001D14                     	endif
  1757  001D14  0008               	tblrd		*
  1758  001D16  50F5               	movf	tablat,w,c
  1759  001D18  0A25               	xorlw	37
  1760  001D1A  A4D8               	btfss	status,2,c
  1761  001D1C  EF92  F00E         	goto	u4751
  1762  001D20  EF94  F00E         	goto	u4750
  1763  001D24                     u4751:
  1764  001D24  EFAB  F00E         	goto	l3841
  1765  001D28                     u4750:
  1766  001D28                     
  1767                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1768  001D28  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1769  001D2C  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1770  001D30  2ADE               	incf	postinc2,f,c
  1771  001D32  0E00               	movlw	0
  1772  001D34  22DD               	addwfc	postdec2,f,c
  1773  001D36                     
  1774                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1775  001D36  0E00               	movlw	0
  1776  001D38  6E02               	movwf	(fputc@c+1)^0,c
  1777  001D3A  0E25               	movlw	37
  1778  001D3C  6E01               	movwf	fputc@c^0,c
  1779  001D3E  C04E  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1780  001D42  C04F  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1781  001D46  EC85  F019         	call	_fputc	;wreg free
  1782  001D4A                     l3837:
  1783                           
  1784                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1785  001D4A  0E00               	movlw	0
  1786  001D4C  6E4F               	movwf	(?_vfpfcnvrt+1)^0,c
  1787  001D4E  0E01               	movlw	1
  1788  001D50  6E4E               	movwf	?_vfpfcnvrt^0,c
  1789  001D52  EFD3  F00E         	goto	l919
  1790  001D56                     l3841:
  1791                           
  1792                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1793  001D56  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1794  001D5A  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1795  001D5E  2ADE               	incf	postinc2,f,c
  1796  001D60  0E00               	movlw	0
  1797  001D62  22DD               	addwfc	postdec2,f,c
  1798  001D64                     
  1799                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1800  001D64  0E00               	movlw	0
  1801  001D66  6E4F               	movwf	(?_vfpfcnvrt+1)^0,c
  1802  001D68  0E00               	movlw	0
  1803  001D6A  6E4E               	movwf	?_vfpfcnvrt^0,c
  1804  001D6C  EFD3  F00E         	goto	l919
  1805  001D70                     l3847:
  1806                           
  1807                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1808  001D70  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1809  001D74  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1810  001D78  CFDE FFF6          	movff	postinc2,tblptrl
  1811  001D7C  CFDD FFF7          	movff	postdec2,tblptrh
  1812  001D80                     	if	0	;tblptru may be non-zero
  1813  001D80                     	endif
  1814  001D80                     	if	0	;tblptru may be non-zero
  1815  001D80                     	endif
  1816  001D80  0008               	tblrd		*
  1817  001D82  50F5               	movf	tablat,w,c
  1818  001D84  6E01               	movwf	fputc@c^0,c
  1819  001D86  6A02               	clrf	(fputc@c+1)^0,c
  1820  001D88  C04E  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1821  001D8C  C04F  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1822  001D90  EC85  F019         	call	_fputc	;wreg free
  1823  001D94                     
  1824                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1825  001D94  C050  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1826  001D98  C051  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1827  001D9C  2ADE               	incf	postinc2,f,c
  1828  001D9E  0E00               	movlw	0
  1829  001DA0  22DD               	addwfc	postdec2,f,c
  1830  001DA2  EFA5  F00E         	goto	l3837
  1831  001DA6                     l919:
  1832  001DA6  0012               	return		;funcret
  1833  001DA8                     __end_of_vfpfcnvrt:
  1834                           	callstack 0
  1835                           
  1836 ;; *************** function _strncmp *****************
  1837 ;; Defined at:
  1838 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strncmp.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  1841 ;;		 -> vfpfcnvrt@ct(3), 
  1842 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  1843 ;;		 -> STR_12(3), 
  1844 ;;  n               2    4[COMRAM] unsigned int 
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  r               2    9[COMRAM] PTR const unsigned char 
  1847 ;;		 -> STR_12(3), 
  1848 ;;  l               2    7[COMRAM] PTR const unsigned char 
  1849 ;;		 -> vfpfcnvrt@ct(3), 
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  2    0[COMRAM] int 
  1852 ;; Registers used:
  1853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1859 ;;      Params:         6       0       0       0       0       0       0       0       0
  1860 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1861 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1862 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1863 ;;Total ram usage:       11 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; This function calls:
  1866 ;;		Nothing
  1867 ;; This function is called by:
  1868 ;;		_vfpfcnvrt
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text4
  1873  003234                     __ptext4:
  1874                           	callstack 0
  1875  003234                     _strncmp:
  1876                           	callstack 27
  1877  003234  C001  F008         	movff	strncmp@_l,strncmp@l
  1878  003238  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  1879  00323C  C003  F00A         	movff	strncmp@_r,strncmp@r
  1880  003240  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  1881  003244  0605               	decf	strncmp@n^0,f,c
  1882  003246  A0D8               	btfss	status,0,c
  1883  003248  0606               	decf	(strncmp@n+1)^0,f,c
  1884  00324A  2805               	incf	strncmp@n^0,w,c
  1885  00324C  E106               	bnz	u4571
  1886  00324E  2806               	incf	(strncmp@n+1)^0,w,c
  1887  003250  A4D8               	btfss	status,2,c
  1888  003252  EF2D  F019         	goto	u4571
  1889  003256  EF2F  F019         	goto	u4570
  1890  00325A                     u4571:
  1891  00325A  EF3C  F019         	goto	l3753
  1892  00325E                     u4570:
  1893  00325E  0E00               	movlw	0
  1894  003260  6E02               	movwf	(?_strncmp+1)^0,c
  1895  003262  0E00               	movlw	0
  1896  003264  6E01               	movwf	?_strncmp^0,c
  1897  003266  EF84  F019         	goto	l1047
  1898  00326A                     l3751:
  1899  00326A  4A08               	infsnz	strncmp@l^0,f,c
  1900  00326C  2A09               	incf	(strncmp@l+1)^0,f,c
  1901  00326E  4A0A               	infsnz	strncmp@r^0,f,c
  1902  003270  2A0B               	incf	(strncmp@r+1)^0,f,c
  1903  003272  0605               	decf	strncmp@n^0,f,c
  1904  003274  A0D8               	btfss	status,0,c
  1905  003276  0606               	decf	(strncmp@n+1)^0,f,c
  1906  003278                     l3753:
  1907  003278  C008  FFD9         	movff	strncmp@l,fsr2l
  1908  00327C  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1909  003280  50DF               	movf	indf2,w,c
  1910  003282  B4D8               	btfsc	status,2,c
  1911  003284  EF46  F019         	goto	u4581
  1912  003288  EF48  F019         	goto	u4580
  1913  00328C                     u4581:
  1914  00328C  EF73  F019         	goto	l3761
  1915  003290                     u4580:
  1916  003290  C00A  FFF6         	movff	strncmp@r,tblptrl
  1917  003294  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1918  003298                     	if	0	;tblptru may be non-zero
  1919  003298                     	endif
  1920  003298                     	if	0	;tblptru may be non-zero
  1921  003298                     	endif
  1922  003298  0008               	tblrd		*
  1923  00329A  50F5               	movf	tablat,w,c
  1924  00329C  0900               	iorlw	0
  1925  00329E  B4D8               	btfsc	status,2,c
  1926  0032A0  EF54  F019         	goto	u4591
  1927  0032A4  EF56  F019         	goto	u4590
  1928  0032A8                     u4591:
  1929  0032A8  EF73  F019         	goto	l3761
  1930  0032AC                     u4590:
  1931  0032AC  5005               	movf	strncmp@n^0,w,c
  1932  0032AE  1006               	iorwf	(strncmp@n+1)^0,w,c
  1933  0032B0  B4D8               	btfsc	status,2,c
  1934  0032B2  EF5D  F019         	goto	u4601
  1935  0032B6  EF5F  F019         	goto	u4600
  1936  0032BA                     u4601:
  1937  0032BA  EF73  F019         	goto	l3761
  1938  0032BE                     u4600:
  1939  0032BE  C008  FFD9         	movff	strncmp@l,fsr2l
  1940  0032C2  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1941  0032C6  50DF               	movf	indf2,w,c
  1942  0032C8  6E07               	movwf	??_strncmp^0,c
  1943  0032CA  C00A  FFF6         	movff	strncmp@r,tblptrl
  1944  0032CE  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1945  0032D2                     	if	0	;tblptru may be non-zero
  1946  0032D2                     	endif
  1947  0032D2                     	if	0	;tblptru may be non-zero
  1948  0032D2                     	endif
  1949  0032D2  0008               	tblrd		*
  1950  0032D4  50F5               	movf	tablat,w,c
  1951  0032D6  1807               	xorwf	??_strncmp^0,w,c
  1952  0032D8  B4D8               	btfsc	status,2,c
  1953  0032DA  EF71  F019         	goto	u4611
  1954  0032DE  EF73  F019         	goto	u4610
  1955  0032E2                     u4611:
  1956  0032E2  EF35  F019         	goto	l3751
  1957  0032E6                     u4610:
  1958  0032E6                     l3761:
  1959  0032E6  C008  FFD9         	movff	strncmp@l,fsr2l
  1960  0032EA  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1961  0032EE  50DF               	movf	indf2,w,c
  1962  0032F0  6E07               	movwf	??_strncmp^0,c
  1963  0032F2  C00A  FFF6         	movff	strncmp@r,tblptrl
  1964  0032F6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1965  0032FA                     	if	0	;tblptru may be non-zero
  1966  0032FA                     	endif
  1967  0032FA                     	if	0	;tblptru may be non-zero
  1968  0032FA                     	endif
  1969  0032FA  0008               	tblrd		*
  1970  0032FC  50F5               	movf	tablat,w,c
  1971  0032FE  5C07               	subwf	??_strncmp^0,w,c
  1972  003300  6E01               	movwf	?_strncmp^0,c
  1973  003302  6A02               	clrf	(?_strncmp+1)^0,c
  1974  003304  A0D8               	btfss	status,0,c
  1975  003306  0602               	decf	(?_strncmp+1)^0,f,c
  1976  003308                     l1047:
  1977  003308  0012               	return		;funcret
  1978  00330A                     __end_of_strncmp:
  1979                           	callstack 0
  1980                           
  1981 ;; *************** function _efgtoa *****************
  1982 ;; Defined at:
  1983 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
  1986 ;;		 -> sprintf@f(6), 
  1987 ;;  f               4   67[COMRAM] PTR struct _IO_FILE
  1988 ;;  c               1   71[COMRAM] unsigned char 
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;  u               4   52[BANK0 ] unsigned char 
  1991 ;;  g               4   44[BANK0 ] unsigned char 
  1992 ;;  l               4   38[BANK0 ] unsigned char 
  1993 ;;  h               4   34[BANK0 ] unsigned char 
  1994 ;;  ou              4   20[BANK0 ] unsigned char 
  1995 ;;  n               2   50[BANK0 ] int 
  1996 ;;  e               2   48[BANK0 ] int 
  1997 ;;  i               2   42[BANK0 ] int 
  1998 ;;  w               2   30[BANK0 ] int 
  1999 ;;  p               2   28[BANK0 ] int 
  2000 ;;  sign            2   26[BANK0 ] int 
  2001 ;;  d               2   24[BANK0 ] int 
  2002 ;;  m               2   18[BANK0 ] int 
  2003 ;;  ne              2   16[BANK0 ] int 
  2004 ;;  pp              2   14[BANK0 ] int 
  2005 ;;  t               2   12[BANK0 ] int 
  2006 ;;  mode            1   33[BANK0 ] unsigned char 
  2007 ;;  nmode           1   32[BANK0 ] unsigned char 
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  2   65[COMRAM] int 
  2010 ;; Registers used:
  2011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2017 ;;      Params:         7       0       0       0       0       0       0       0       0
  2018 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2019 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2020 ;;      Totals:        12      56       0       0       0       0       0       0       0
  2021 ;;Total ram usage:       68 bytes
  2022 ;; Hardware stack levels used:    1
  2023 ;; Hardware stack levels required when called:    4
  2024 ;; This function calls:
  2025 ;;		___awdiv
  2026 ;;		___awmod
  2027 ;;		___fladd
  2028 ;;		___fldiv
  2029 ;;		___fleq
  2030 ;;		___flge
  2031 ;;		___flmul
  2032 ;;		___flneg
  2033 ;;		___flsub
  2034 ;;		___fltol
  2035 ;;		___fpclassifyf
  2036 ;;		_floorf
  2037 ;;		_isupper
  2038 ;;		_pad
  2039 ;;		_strcpy
  2040 ;;		_tolower
  2041 ;; This function is called by:
  2042 ;;		_vfpfcnvrt
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	text5
  2047  000826                     __ptext5:
  2048                           	callstack 0
  2049  000826                     _efgtoa:
  2050                           	callstack 23
  2051  000826                     
  2052                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.30\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2053  000826  0E00               	movlw	0
  2054  000828  0100               	movlb	0	; () banked
  2055  00082A  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2056  00082C  0E00               	movlw	0
  2057  00082E  6F7A               	movwf	efgtoa@sign& (0+255),b
  2058  000830                     
  2059                           ; BSR set to: 0
  2060                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2061  000830  C044  F08C         	movff	efgtoa@f,efgtoa@g
  2062  000834  C045  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2063  000838  C046  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2064  00083C  C047  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2065  000840                     
  2066                           ; BSR set to: 0
  2067                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2068  000840  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2069  000842  EF27  F004         	goto	u3960
  2070  000846  EF25  F004         	goto	u3961
  2071  00084A                     u3961:
  2072  00084A  EF3D  F004         	goto	l3405
  2073  00084E                     u3960:
  2074  00084E                     
  2075                           ; BSR set to: 0
  2076                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2077  00084E  0E00               	movlw	0
  2078  000850  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2079  000852  0E01               	movlw	1
  2080  000854  6F7A               	movwf	efgtoa@sign& (0+255),b
  2081  000856                     
  2082                           ; BSR set to: 0
  2083                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2084  000856  C08C  F001         	movff	efgtoa@g,___flneg@f1
  2085  00085A  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2086  00085E  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2087  000862  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2088  000866  ECED  F01C         	call	___flneg	;wreg free
  2089  00086A  C001  F08C         	movff	?___flneg,efgtoa@g
  2090  00086E  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  2091  000872  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  2092  000876  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  2093  00087A                     l3405:
  2094                           
  2095                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2096  00087A  0E00               	movlw	0
  2097  00087C  0100               	movlb	0	; () banked
  2098  00087E  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2099  000880  0E00               	movlw	0
  2100  000882  6F92               	movwf	efgtoa@n& (0+255),b
  2101  000884                     
  2102                           ; BSR set to: 0
  2103                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2104  000884  C0C6  F07E         	movff	_width,efgtoa@w
  2105  000888  C0C7  F07F         	movff	_width+1,efgtoa@w+1
  2106  00088C                     
  2107                           ; BSR set to: 0
  2108                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2109  00088C  517A               	movf	efgtoa@sign& (0+255),w,b
  2110  00088E  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2111  000890  A4D8               	btfss	status,2,c
  2112  000892  EF4D  F004         	goto	u3971
  2113  000896  EF4F  F004         	goto	u3970
  2114  00089A                     u3971:
  2115  00089A  EF56  F004         	goto	l3413
  2116  00089E                     u3970:
  2117  00089E                     
  2118                           ; BSR set to: 0
  2119  00089E  A5CA               	btfss	_flags& (0+255),2,b
  2120  0008A0  EF54  F004         	goto	u3981
  2121  0008A4  EF56  F004         	goto	u3980
  2122  0008A8                     u3981:
  2123  0008A8  EF70  F004         	goto	l3425
  2124  0008AC                     u3980:
  2125  0008AC                     l3413:
  2126                           
  2127                           ; BSR set to: 0
  2128                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2129  0008AC  517A               	movf	efgtoa@sign& (0+255),w,b
  2130  0008AE  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2131  0008B0  A4D8               	btfss	status,2,c
  2132  0008B2  EF5D  F004         	goto	u3991
  2133  0008B6  EF5F  F004         	goto	u3990
  2134  0008BA                     u3991:
  2135  0008BA  EF65  F004         	goto	l3417
  2136  0008BE                     u3990:
  2137  0008BE                     
  2138                           ; BSR set to: 0
  2139  0008BE  0E00               	movlw	0
  2140  0008C0  6F61               	movwf	(_efgtoa$851+1)& (0+255),b
  2141  0008C2  0E2B               	movlw	43
  2142  0008C4  6F60               	movwf	_efgtoa$851& (0+255),b
  2143  0008C6  EF69  F004         	goto	l3419
  2144  0008CA                     l3417:
  2145                           
  2146                           ; BSR set to: 0
  2147  0008CA  0E00               	movlw	0
  2148  0008CC  6F61               	movwf	(_efgtoa$851+1)& (0+255),b
  2149  0008CE  0E2D               	movlw	45
  2150  0008D0  6F60               	movwf	_efgtoa$851& (0+255),b
  2151  0008D2                     l3419:
  2152                           
  2153                           ; BSR set to: 0
  2154  0008D2  C060  F100         	movff	_efgtoa$851,_dbuf
  2155  0008D6                     
  2156                           ; BSR set to: 0
  2157                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2158  0008D6  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2159  0008D8  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2160  0008DA                     
  2161                           ; BSR set to: 0
  2162                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 352:         --w;
  2163  0008DA  077E               	decf	efgtoa@w& (0+255),f,b
  2164  0008DC  A0D8               	btfss	status,0,c
  2165  0008DE  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  2166  0008E0                     l3425:
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2170  0008E0  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2171  0008E4  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2172  0008E8  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2173  0008EC  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2174  0008F0  EC9B  F018         	call	___fpclassifyf	;wreg free
  2175  0008F4  0401               	decf	?___fpclassifyf^0,w,c
  2176  0008F6  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2177  0008F8  A4D8               	btfss	status,2,c
  2178  0008FA  EF81  F004         	goto	u4001
  2179  0008FE  EF83  F004         	goto	u4000
  2180  000902                     u4001:
  2181  000902  EFDA  F004         	goto	l3443
  2182  000906                     u4000:
  2183  000906  0EBF               	movlw	191
  2184  000908  6E49               	movwf	??_efgtoa^0,c
  2185  00090A  0EFF               	movlw	255
  2186  00090C  6E4A               	movwf	(??_efgtoa+1)^0,c
  2187  00090E  5048               	movf	efgtoa@c^0,w,c
  2188  000910  6E4B               	movwf	(??_efgtoa+2)^0,c
  2189  000912  6A4C               	clrf	(??_efgtoa+3)^0,c
  2190  000914  5049               	movf	??_efgtoa^0,w,c
  2191  000916  264B               	addwf	(??_efgtoa+2)^0,f,c
  2192  000918  504A               	movf	(??_efgtoa+1)^0,w,c
  2193  00091A  224C               	addwfc	(??_efgtoa+3)^0,f,c
  2194  00091C  504C               	movf	(??_efgtoa+3)^0,w,c
  2195  00091E  E10A               	bnz	u4010
  2196  000920  0E1A               	movlw	26
  2197  000922  5C4B               	subwf	(??_efgtoa+2)^0,w,c
  2198  000924  A0D8               	btfss	status,0,c
  2199  000926  EF97  F004         	goto	u4011
  2200  00092A  EF9A  F004         	goto	u4010
  2201  00092E                     u4011:
  2202  00092E  0E01               	movlw	1
  2203  000930  EF9B  F004         	goto	u4020
  2204  000934                     u4010:
  2205  000934  0E00               	movlw	0
  2206  000936                     u4020:
  2207  000936  0100               	movlb	0	; () banked
  2208  000938  6F62               	movwf	_efgtoa$852& (0+255),b
  2209  00093A  6B63               	clrf	(_efgtoa$852+1)& (0+255),b
  2210  00093C                     
  2211                           ; BSR set to: 0
  2212  00093C  5162               	movf	_efgtoa$852& (0+255),w,b
  2213  00093E  1163               	iorwf	(_efgtoa$852+1)& (0+255),w,b
  2214  000940  B4D8               	btfsc	status,2,c
  2215  000942  EFA5  F004         	goto	u4031
  2216  000946  EFA7  F004         	goto	u4030
  2217  00094A                     u4031:
  2218  00094A  EFB5  F004         	goto	l3435
  2219  00094E                     u4030:
  2220  00094E                     
  2221                           ; BSR set to: 0
  2222                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2223  00094E  0E00               	movlw	low _dbuf
  2224  000950  2592               	addwf	efgtoa@n& (0+255),w,b
  2225  000952  6E01               	movwf	strcpy@dest^0,c
  2226  000954  0E01               	movlw	high _dbuf
  2227  000956  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2228  000958  6E02               	movwf	(strcpy@dest+1)^0,c
  2229  00095A  0E12               	movlw	low STR_2
  2230  00095C  6E03               	movwf	strcpy@src^0,c
  2231  00095E  0E08               	movlw	high STR_2
  2232  000960  6E04               	movwf	(strcpy@src+1)^0,c
  2233  000962  EC0C  F01C         	call	_strcpy	;wreg free
  2234                           
  2235                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2236  000966  EFC1  F004         	goto	l3437
  2237  00096A                     l3435:
  2238                           
  2239                           ; BSR set to: 0
  2240                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2241  00096A  0E00               	movlw	low _dbuf
  2242  00096C  2592               	addwf	efgtoa@n& (0+255),w,b
  2243  00096E  6E01               	movwf	strcpy@dest^0,c
  2244  000970  0E01               	movlw	high _dbuf
  2245  000972  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2246  000974  6E02               	movwf	(strcpy@dest+1)^0,c
  2247  000976  0E1A               	movlw	low STR_3
  2248  000978  6E03               	movwf	strcpy@src^0,c
  2249  00097A  0E08               	movlw	high STR_3
  2250  00097C  6E04               	movwf	(strcpy@src+1)^0,c
  2251  00097E  EC0C  F01C         	call	_strcpy	;wreg free
  2252  000982                     l3437:
  2253                           
  2254                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2255  000982  0100               	movlb	0	; () banked
  2256  000984  0EFD               	movlw	253
  2257  000986  277E               	addwf	efgtoa@w& (0+255),f,b
  2258  000988  0EFF               	movlw	255
  2259  00098A  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2260  00098C                     l3439:
  2261                           
  2262                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2263  00098C  C042  F011         	movff	efgtoa@fp,pad@fp
  2264  000990  C043  F012         	movff	efgtoa@fp+1,pad@fp+1
  2265  000994  0E00               	movlw	low _dbuf
  2266  000996  6E13               	movwf	pad@buf^0,c
  2267  000998  0E01               	movlw	high _dbuf
  2268  00099A  6E14               	movwf	(pad@buf+1)^0,c
  2269  00099C  C07E  F015         	movff	efgtoa@w,pad@p
  2270  0009A0  C07F  F016         	movff	efgtoa@w+1,pad@p+1
  2271  0009A4  ECEA  F019         	call	_pad	;wreg free
  2272  0009A8  C011  F042         	movff	?_pad,?_efgtoa
  2273  0009AC  C012  F043         	movff	?_pad+1,?_efgtoa+1
  2274  0009B0  EF3E  F00A         	goto	l827
  2275  0009B4                     l3443:
  2276                           
  2277                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2278  0009B4  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2279  0009B8  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2280  0009BC  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2281  0009C0  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2282  0009C4  EC9B  F018         	call	___fpclassifyf	;wreg free
  2283  0009C8  5001               	movf	?___fpclassifyf^0,w,c
  2284  0009CA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2285  0009CC  A4D8               	btfss	status,2,c
  2286  0009CE  EFEB  F004         	goto	u4041
  2287  0009D2  EFED  F004         	goto	u4040
  2288  0009D6                     u4041:
  2289  0009D6  EF2D  F005         	goto	l3461
  2290  0009DA                     u4040:
  2291  0009DA  0EBF               	movlw	191
  2292  0009DC  6E49               	movwf	??_efgtoa^0,c
  2293  0009DE  0EFF               	movlw	255
  2294  0009E0  6E4A               	movwf	(??_efgtoa+1)^0,c
  2295  0009E2  5048               	movf	efgtoa@c^0,w,c
  2296  0009E4  6E4B               	movwf	(??_efgtoa+2)^0,c
  2297  0009E6  6A4C               	clrf	(??_efgtoa+3)^0,c
  2298  0009E8  5049               	movf	??_efgtoa^0,w,c
  2299  0009EA  264B               	addwf	(??_efgtoa+2)^0,f,c
  2300  0009EC  504A               	movf	(??_efgtoa+1)^0,w,c
  2301  0009EE  224C               	addwfc	(??_efgtoa+3)^0,f,c
  2302  0009F0  504C               	movf	(??_efgtoa+3)^0,w,c
  2303  0009F2  E10A               	bnz	u4050
  2304  0009F4  0E1A               	movlw	26
  2305  0009F6  5C4B               	subwf	(??_efgtoa+2)^0,w,c
  2306  0009F8  A0D8               	btfss	status,0,c
  2307  0009FA  EF01  F005         	goto	u4051
  2308  0009FE  EF04  F005         	goto	u4050
  2309  000A02                     u4051:
  2310  000A02  0E01               	movlw	1
  2311  000A04  EF05  F005         	goto	u4060
  2312  000A08                     u4050:
  2313  000A08  0E00               	movlw	0
  2314  000A0A                     u4060:
  2315  000A0A  0100               	movlb	0	; () banked
  2316  000A0C  6F64               	movwf	_efgtoa$857& (0+255),b
  2317  000A0E  6B65               	clrf	(_efgtoa$857+1)& (0+255),b
  2318  000A10                     
  2319                           ; BSR set to: 0
  2320  000A10  5164               	movf	_efgtoa$857& (0+255),w,b
  2321  000A12  1165               	iorwf	(_efgtoa$857+1)& (0+255),w,b
  2322  000A14  B4D8               	btfsc	status,2,c
  2323  000A16  EF0F  F005         	goto	u4071
  2324  000A1A  EF11  F005         	goto	u4070
  2325  000A1E                     u4071:
  2326  000A1E  EF1F  F005         	goto	l3453
  2327  000A22                     u4070:
  2328  000A22                     
  2329                           ; BSR set to: 0
  2330                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2331  000A22  0E00               	movlw	low _dbuf
  2332  000A24  2592               	addwf	efgtoa@n& (0+255),w,b
  2333  000A26  6E01               	movwf	strcpy@dest^0,c
  2334  000A28  0E01               	movlw	high _dbuf
  2335  000A2A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2336  000A2C  6E02               	movwf	(strcpy@dest+1)^0,c
  2337  000A2E  0E16               	movlw	low STR_6
  2338  000A30  6E03               	movwf	strcpy@src^0,c
  2339  000A32  0E08               	movlw	high STR_6
  2340  000A34  6E04               	movwf	(strcpy@src+1)^0,c
  2341  000A36  EC0C  F01C         	call	_strcpy	;wreg free
  2342                           
  2343                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2344  000A3A  EFC1  F004         	goto	l3437
  2345  000A3E                     l3453:
  2346                           
  2347                           ; BSR set to: 0
  2348                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2349  000A3E  0E00               	movlw	low _dbuf
  2350  000A40  2592               	addwf	efgtoa@n& (0+255),w,b
  2351  000A42  6E01               	movwf	strcpy@dest^0,c
  2352  000A44  0E01               	movlw	high _dbuf
  2353  000A46  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2354  000A48  6E02               	movwf	(strcpy@dest+1)^0,c
  2355  000A4A  0E1E               	movlw	low STR_7
  2356  000A4C  6E03               	movwf	strcpy@src^0,c
  2357  000A4E  0E08               	movlw	high STR_7
  2358  000A50  6E04               	movwf	(strcpy@src+1)^0,c
  2359  000A52  EC0C  F01C         	call	_strcpy	;wreg free
  2360  000A56  EFC1  F004         	goto	l3437
  2361  000A5A                     l3461:
  2362                           
  2363                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2364  000A5A  0E00               	movlw	0
  2365  000A5C  0100               	movlb	0	; () banked
  2366  000A5E  6F94               	movwf	efgtoa@u& (0+255),b
  2367  000A60  0E00               	movlw	0
  2368  000A62  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2369  000A64  0E80               	movlw	128
  2370  000A66  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2371  000A68  0E3F               	movlw	63
  2372  000A6A  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2373                           
  2374                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2375  000A6C  0E00               	movlw	0
  2376  000A6E  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2377  000A70  0E00               	movlw	0
  2378  000A72  6F90               	movwf	efgtoa@e& (0+255),b
  2379  000A74                     
  2380                           ; BSR set to: 0
  2381                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2382  000A74  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  2383  000A78  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2384  000A7C  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2385  000A80  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2386  000A84  0E00               	movlw	0
  2387  000A86  6E05               	movwf	___fleq@ff2^0,c
  2388  000A88  0E00               	movlw	0
  2389  000A8A  6E06               	movwf	(___fleq@ff2+1)^0,c
  2390  000A8C  0E00               	movlw	0
  2391  000A8E  6E07               	movwf	(___fleq@ff2+2)^0,c
  2392  000A90  0E00               	movlw	0
  2393  000A92  6E08               	movwf	(___fleq@ff2+3)^0,c
  2394  000A94  EC07  F01B         	call	___fleq	;wreg free
  2395  000A98  B0D8               	btfsc	status,0,c
  2396  000A9A  EF51  F005         	goto	u4081
  2397  000A9E  EF53  F005         	goto	u4080
  2398  000AA2                     u4081:
  2399  000AA2  EFD6  F005         	goto	l3479
  2400  000AA6                     u4080:
  2401  000AA6  EF72  F005         	goto	l3471
  2402  000AAA                     l3467:
  2403                           
  2404                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2405  000AAA  C094  F001         	movff	efgtoa@u,___flmul@b
  2406  000AAE  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  2407  000AB2  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  2408  000AB6  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  2409  000ABA  0E00               	movlw	0
  2410  000ABC  6E05               	movwf	___flmul@a^0,c
  2411  000ABE  0E00               	movlw	0
  2412  000AC0  6E06               	movwf	(___flmul@a+1)^0,c
  2413  000AC2  0E20               	movlw	32
  2414  000AC4  6E07               	movwf	(___flmul@a+2)^0,c
  2415  000AC6  0E41               	movlw	65
  2416  000AC8  6E08               	movwf	(___flmul@a+3)^0,c
  2417  000ACA  ECD4  F00E         	call	___flmul	;wreg free
  2418  000ACE  C001  F094         	movff	?___flmul,efgtoa@u
  2419  000AD2  C002  F095         	movff	?___flmul+1,efgtoa@u+1
  2420  000AD6  C003  F096         	movff	?___flmul+2,efgtoa@u+2
  2421  000ADA  C004  F097         	movff	?___flmul+3,efgtoa@u+3
  2422  000ADE                     
  2423                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2424  000ADE  0100               	movlb	0	; () banked
  2425  000AE0  4B90               	infsnz	efgtoa@e& (0+255),f,b
  2426  000AE2  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  2427  000AE4                     l3471:
  2428                           
  2429                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2430  000AE4  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  2431  000AE8  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2432  000AEC  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2433  000AF0  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2434  000AF4  0E00               	movlw	0
  2435  000AF6  6E05               	movwf	___flmul@a^0,c
  2436  000AF8  0E00               	movlw	0
  2437  000AFA  6E06               	movwf	(___flmul@a+1)^0,c
  2438  000AFC  0E20               	movlw	32
  2439  000AFE  6E07               	movwf	(___flmul@a+2)^0,c
  2440  000B00  0E41               	movlw	65
  2441  000B02  6E08               	movwf	(___flmul@a+3)^0,c
  2442  000B04  C094  F001         	movff	efgtoa@u,___flmul@b
  2443  000B08  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  2444  000B0C  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  2445  000B10  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  2446  000B14  ECD4  F00E         	call	___flmul	;wreg free
  2447  000B18  C001  F01E         	movff	?___flmul,___flge@ff2
  2448  000B1C  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  2449  000B20  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  2450  000B24  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  2451  000B28  EC19  F018         	call	___flge	;wreg free
  2452  000B2C  B0D8               	btfsc	status,0,c
  2453  000B2E  EF9B  F005         	goto	u4091
  2454  000B32  EF9D  F005         	goto	u4090
  2455  000B36                     u4091:
  2456  000B36  EF55  F005         	goto	l3467
  2457  000B3A                     u4090:
  2458  000B3A  EFBD  F005         	goto	l3477
  2459  000B3E                     l3473:
  2460                           
  2461                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  2462  000B3E  C094  F015         	movff	efgtoa@u,___fldiv@b
  2463  000B42  C095  F016         	movff	efgtoa@u+1,___fldiv@b+1
  2464  000B46  C096  F017         	movff	efgtoa@u+2,___fldiv@b+2
  2465  000B4A  C097  F018         	movff	efgtoa@u+3,___fldiv@b+3
  2466  000B4E  0E00               	movlw	0
  2467  000B50  6E19               	movwf	___fldiv@a^0,c
  2468  000B52  0E00               	movlw	0
  2469  000B54  6E1A               	movwf	(___fldiv@a+1)^0,c
  2470  000B56  0E20               	movlw	32
  2471  000B58  6E1B               	movwf	(___fldiv@a+2)^0,c
  2472  000B5A  0E41               	movlw	65
  2473  000B5C  6E1C               	movwf	(___fldiv@a+3)^0,c
  2474  000B5E  ECE9  F010         	call	___fldiv	;wreg free
  2475  000B62  C015  F094         	movff	?___fldiv,efgtoa@u
  2476  000B66  C016  F095         	movff	?___fldiv+1,efgtoa@u+1
  2477  000B6A  C017  F096         	movff	?___fldiv+2,efgtoa@u+2
  2478  000B6E  C018  F097         	movff	?___fldiv+3,efgtoa@u+3
  2479  000B72                     
  2480                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  2481  000B72  0100               	movlb	0	; () banked
  2482  000B74  0790               	decf	efgtoa@e& (0+255),f,b
  2483  000B76  A0D8               	btfss	status,0,c
  2484  000B78  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  2485  000B7A                     l3477:
  2486                           
  2487                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  2488  000B7A  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  2489  000B7E  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2490  000B82  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2491  000B86  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2492  000B8A  C094  F01E         	movff	efgtoa@u,___flge@ff2
  2493  000B8E  C095  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  2494  000B92  C096  F020         	movff	efgtoa@u+2,___flge@ff2+2
  2495  000B96  C097  F021         	movff	efgtoa@u+3,___flge@ff2+3
  2496  000B9A  EC19  F018         	call	___flge	;wreg free
  2497  000B9E  A0D8               	btfss	status,0,c
  2498  000BA0  EFD4  F005         	goto	u4101
  2499  000BA4  EFD6  F005         	goto	u4100
  2500  000BA8                     u4101:
  2501  000BA8  EF9F  F005         	goto	l3473
  2502  000BAC                     u4100:
  2503  000BAC                     l3479:
  2504                           
  2505                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  2506  000BAC  C048  F007         	movff	efgtoa@c,tolower@c
  2507  000BB0  6A08               	clrf	(tolower@c+1)^0,c
  2508  000BB2  ECDC  F01B         	call	_tolower	;wreg free
  2509  000BB6  5007               	movf	?_tolower^0,w,c
  2510  000BB8  0100               	movlb	0	; () banked
  2511  000BBA  6F81               	movwf	efgtoa@mode& (0+255),b
  2512  000BBC                     
  2513                           ; BSR set to: 0
  2514                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  2515  000BBC  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  2516  000BC0                     
  2517                           ; BSR set to: 0
  2518                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  2519  000BC0  0E67               	movlw	103
  2520  000BC2  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2521  000BC4  A4D8               	btfss	status,2,c
  2522  000BC6  EFE7  F005         	goto	u4111
  2523  000BCA  EFE9  F005         	goto	u4110
  2524  000BCE                     u4111:
  2525  000BCE  EF0F  F006         	goto	l3493
  2526  000BD2                     u4110:
  2527  000BD2                     
  2528                           ; BSR set to: 0
  2529                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  2530  000BD2  51C8               	movf	_prec& (0+255),w,b
  2531  000BD4  11C9               	iorwf	(_prec+1)& (0+255),w,b
  2532  000BD6  A4D8               	btfss	status,2,c
  2533  000BD8  EFF0  F005         	goto	u4121
  2534  000BDC  EFF2  F005         	goto	u4120
  2535  000BE0                     u4121:
  2536  000BE0  EFF6  F005         	goto	l3489
  2537  000BE4                     u4120:
  2538  000BE4                     
  2539                           ; BSR set to: 0
  2540                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  2541  000BE4  0E00               	movlw	0
  2542  000BE6  6FC9               	movwf	(_prec+1)& (0+255),b
  2543  000BE8  0E01               	movlw	1
  2544  000BEA  6FC8               	movwf	_prec& (0+255),b
  2545  000BEC                     l3489:
  2546                           
  2547                           ; BSR set to: 0
  2548                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  2549  000BEC  BFC9               	btfsc	(_prec+1)& (0+255),7,b
  2550  000BEE  EF03  F006         	goto	u4130
  2551  000BF2  51C9               	movf	(_prec+1)& (0+255),w,b
  2552  000BF4  E106               	bnz	u4131
  2553  000BF6  05C8               	decf	_prec& (0+255),w,b
  2554  000BF8  B0D8               	btfsc	status,0,c
  2555  000BFA  EF01  F006         	goto	u4131
  2556  000BFE  EF03  F006         	goto	u4130
  2557  000C02                     u4131:
  2558  000C02  EF09  F006         	goto	l845
  2559  000C06                     u4130:
  2560  000C06                     l3491:
  2561                           
  2562                           ; BSR set to: 0
  2563  000C06  0E00               	movlw	0
  2564  000C08  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  2565  000C0A  0E06               	movlw	6
  2566  000C0C  6F7C               	movwf	efgtoa@p& (0+255),b
  2567  000C0E  EF18  F006         	goto	l3499
  2568  000C12                     l845:
  2569                           
  2570                           ; BSR set to: 0
  2571  000C12  C0C8  F07C         	movff	_prec,efgtoa@p
  2572  000C16  C0C9  F07D         	movff	_prec+1,efgtoa@p+1
  2573  000C1A  EF18  F006         	goto	l3499
  2574  000C1E                     l3493:
  2575                           
  2576                           ; BSR set to: 0
  2577                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  2578  000C1E  BFC9               	btfsc	(_prec+1)& (0+255),7,b
  2579  000C20  EF14  F006         	goto	u4141
  2580  000C24  EF16  F006         	goto	u4140
  2581  000C28                     u4141:
  2582  000C28  EF03  F006         	goto	l3491
  2583  000C2C                     u4140:
  2584  000C2C  EF09  F006         	goto	l845
  2585  000C30                     l3499:
  2586                           
  2587                           ; BSR set to: 0
  2588                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  2589  000C30  0E67               	movlw	103
  2590  000C32  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2591  000C34  A4D8               	btfss	status,2,c
  2592  000C36  EF1F  F006         	goto	u4151
  2593  000C3A  EF21  F006         	goto	u4150
  2594  000C3E                     u4151:
  2595  000C3E  EF50  F006         	goto	l3509
  2596  000C42                     u4150:
  2597  000C42                     
  2598                           ; BSR set to: 0
  2599                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  2600  000C42  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  2601  000C44  EF2F  F006         	goto	u4160
  2602  000C48  0EFC               	movlw	252
  2603  000C4A  5D90               	subwf	efgtoa@e& (0+255),w,b
  2604  000C4C  0EFF               	movlw	255
  2605  000C4E  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2606  000C50  A0D8               	btfss	status,0,c
  2607  000C52  EF2D  F006         	goto	u4161
  2608  000C56  EF2F  F006         	goto	u4160
  2609  000C5A                     u4161:
  2610  000C5A  EF4E  F006         	goto	l3507
  2611  000C5E                     u4160:
  2612  000C5E                     
  2613                           ; BSR set to: 0
  2614  000C5E  0EFF               	movlw	255
  2615  000C60  6E49               	movwf	??_efgtoa^0,c
  2616  000C62  0EFF               	movlw	255
  2617  000C64  6E4A               	movwf	(??_efgtoa+1)^0,c
  2618  000C66  C07C  F04B         	movff	efgtoa@p,??_efgtoa+2
  2619  000C6A  C07D  F04C         	movff	efgtoa@p+1,??_efgtoa+3
  2620  000C6E  5049               	movf	??_efgtoa^0,w,c
  2621  000C70  264B               	addwf	(??_efgtoa+2)^0,f,c
  2622  000C72  504A               	movf	(??_efgtoa+1)^0,w,c
  2623  000C74  224C               	addwfc	(??_efgtoa+3)^0,f,c
  2624  000C76  5190               	movf	efgtoa@e& (0+255),w,b
  2625  000C78  5C4B               	subwf	(??_efgtoa+2)^0,w,c
  2626  000C7A  504C               	movf	(??_efgtoa+3)^0,w,c
  2627  000C7C  0A80               	xorlw	128
  2628  000C7E  6E4D               	movwf	(??_efgtoa+4)^0,c
  2629  000C80  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2630  000C82  0A80               	xorlw	128
  2631  000C84  584D               	subwfb	(??_efgtoa+4)^0,w,c
  2632  000C86  A0D8               	btfss	status,0,c
  2633  000C88  EF48  F006         	goto	u4171
  2634  000C8C  EF4A  F006         	goto	u4170
  2635  000C90                     u4171:
  2636  000C90  EF4E  F006         	goto	l3507
  2637  000C94                     u4170:
  2638  000C94                     
  2639                           ; BSR set to: 0
  2640                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  2641  000C94  0E66               	movlw	102
  2642  000C96  6F80               	movwf	efgtoa@nmode& (0+255),b
  2643                           
  2644                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  2645  000C98  EF50  F006         	goto	l3509
  2646  000C9C                     l3507:
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  2650  000C9C  0E65               	movlw	101
  2651  000C9E  6F80               	movwf	efgtoa@nmode& (0+255),b
  2652  000CA0                     l3509:
  2653                           
  2654                           ; BSR set to: 0
  2655                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 411:     m = p;
  2656  000CA0  C07C  F072         	movff	efgtoa@p,efgtoa@m
  2657  000CA4  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  2658  000CA8                     
  2659                           ; BSR set to: 0
  2660                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  2661  000CA8  0E67               	movlw	103
  2662  000CAA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2663  000CAC  A4D8               	btfss	status,2,c
  2664  000CAE  EF5B  F006         	goto	u4181
  2665  000CB2  EF5D  F006         	goto	u4180
  2666  000CB6                     u4181:
  2667  000CB6  EF6D  F006         	goto	l3517
  2668  000CBA                     u4180:
  2669  000CBA                     
  2670                           ; BSR set to: 0
  2671  000CBA  0E66               	movlw	102
  2672  000CBC  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  2673  000CBE  A4D8               	btfss	status,2,c
  2674  000CC0  EF64  F006         	goto	u4191
  2675  000CC4  EF66  F006         	goto	u4190
  2676  000CC8                     u4191:
  2677  000CC8  EF6F  F006         	goto	l3519
  2678  000CCC                     u4190:
  2679  000CCC                     
  2680                           ; BSR set to: 0
  2681  000CCC  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2682  000CCE  EF6D  F006         	goto	u4200
  2683  000CD2  EF6B  F006         	goto	u4201
  2684  000CD6                     u4201:
  2685  000CD6  EF6F  F006         	goto	l3519
  2686  000CDA                     u4200:
  2687  000CDA                     l3517:
  2688                           
  2689                           ; BSR set to: 0
  2690                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 413:         ++m;
  2691  000CDA  4B72               	infsnz	efgtoa@m& (0+255),f,b
  2692  000CDC  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  2693  000CDE                     l3519:
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  2697  000CDE  0E66               	movlw	102
  2698  000CE0  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  2699  000CE2  A4D8               	btfss	status,2,c
  2700  000CE4  EF76  F006         	goto	u4211
  2701  000CE8  EF78  F006         	goto	u4210
  2702  000CEC                     u4211:
  2703  000CEC  EF98  F006         	goto	l3529
  2704  000CF0                     u4210:
  2705  000CF0                     
  2706                           ; BSR set to: 0
  2707                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  2708  000CF0  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2709  000CF2  EF7F  F006         	goto	u4220
  2710  000CF6  EF7D  F006         	goto	u4221
  2711  000CFA                     u4221:
  2712  000CFA  EF8B  F006         	goto	l3525
  2713  000CFE                     u4220:
  2714  000CFE                     
  2715                           ; BSR set to: 0
  2716                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  2717  000CFE  0E00               	movlw	0
  2718  000D00  6F94               	movwf	efgtoa@u& (0+255),b
  2719  000D02  0E00               	movlw	0
  2720  000D04  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2721  000D06  0E80               	movlw	128
  2722  000D08  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2723  000D0A  0E3F               	movlw	63
  2724  000D0C  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2725                           
  2726                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  2727  000D0E  0E00               	movlw	0
  2728  000D10  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2729  000D12  0E00               	movlw	0
  2730  000D14  6F90               	movwf	efgtoa@e& (0+255),b
  2731  000D16                     l3525:
  2732                           
  2733                           ; BSR set to: 0
  2734                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  2735  000D16  0E67               	movlw	103
  2736  000D18  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2737  000D1A  B4D8               	btfsc	status,2,c
  2738  000D1C  EF92  F006         	goto	u4231
  2739  000D20  EF94  F006         	goto	u4230
  2740  000D24                     u4231:
  2741  000D24  EF98  F006         	goto	l3529
  2742  000D28                     u4230:
  2743  000D28                     
  2744                           ; BSR set to: 0
  2745                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  2746  000D28  5190               	movf	efgtoa@e& (0+255),w,b
  2747  000D2A  2772               	addwf	efgtoa@m& (0+255),f,b
  2748  000D2C  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2749  000D2E  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2750  000D30                     l3529:
  2751                           
  2752                           ; BSR set to: 0
  2753                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  2754  000D30  0E00               	movlw	0
  2755  000D32  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  2756  000D34  0E00               	movlw	0
  2757  000D36  6F8A               	movwf	efgtoa@i& (0+255),b
  2758  000D38                     
  2759                           ; BSR set to: 0
  2760                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 429:     h = g;
  2761  000D38  C08C  F082         	movff	efgtoa@g,efgtoa@h
  2762  000D3C  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  2763  000D40  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  2764  000D44  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  2765  000D48                     
  2766                           ; BSR set to: 0
  2767                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  2768  000D48  C094  F074         	movff	efgtoa@u,efgtoa@ou
  2769  000D4C  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  2770  000D50  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  2771  000D54  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  2772                           
  2773                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  2774  000D58  EF29  F007         	goto	l3543
  2775  000D5C                     l3535:
  2776                           
  2777                           ; BSR set to: 0
  2778                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  2779  000D5C  C082  F015         	movff	efgtoa@h,___fldiv@b
  2780  000D60  C083  F016         	movff	efgtoa@h+1,___fldiv@b+1
  2781  000D64  C084  F017         	movff	efgtoa@h+2,___fldiv@b+2
  2782  000D68  C085  F018         	movff	efgtoa@h+3,___fldiv@b+3
  2783  000D6C  C094  F019         	movff	efgtoa@u,___fldiv@a
  2784  000D70  C095  F01A         	movff	efgtoa@u+1,___fldiv@a+1
  2785  000D74  C096  F01B         	movff	efgtoa@u+2,___fldiv@a+2
  2786  000D78  C097  F01C         	movff	efgtoa@u+3,___fldiv@a+3
  2787  000D7C  ECE9  F010         	call	___fldiv	;wreg free
  2788  000D80  C015  F02E         	movff	?___fldiv,floorf@x
  2789  000D84  C016  F02F         	movff	?___fldiv+1,floorf@x+1
  2790  000D88  C017  F030         	movff	?___fldiv+2,floorf@x+2
  2791  000D8C  C018  F031         	movff	?___fldiv+3,floorf@x+3
  2792  000D90  ECB6  F012         	call	_floorf	;wreg free
  2793  000D94  C02E  F086         	movff	?_floorf,efgtoa@l
  2794  000D98  C02F  F087         	movff	?_floorf+1,efgtoa@l+1
  2795  000D9C  C030  F088         	movff	?_floorf+2,efgtoa@l+2
  2796  000DA0  C031  F089         	movff	?_floorf+3,efgtoa@l+3
  2797                           
  2798                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  2799  000DA4  C086  F001         	movff	efgtoa@l,___fltol@f1
  2800  000DA8  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2801  000DAC  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2802  000DB0  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2803  000DB4  EC96  F017         	call	___fltol	;wreg free
  2804  000DB8  C001  F078         	movff	?___fltol,efgtoa@d
  2805  000DBC  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  2806  000DC0                     
  2807                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  2808  000DC0  C082  F01A         	movff	efgtoa@h,___flsub@b
  2809  000DC4  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  2810  000DC8  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  2811  000DCC  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  2812  000DD0  C094  F005         	movff	efgtoa@u,___flmul@a
  2813  000DD4  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  2814  000DD8  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  2815  000DDC  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  2816  000DE0  C086  F001         	movff	efgtoa@l,___flmul@b
  2817  000DE4  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  2818  000DE8  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  2819  000DEC  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  2820  000DF0  ECD4  F00E         	call	___flmul	;wreg free
  2821  000DF4  C001  F01E         	movff	?___flmul,___flsub@a
  2822  000DF8  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  2823  000DFC  C003  F020         	movff	?___flmul+2,___flsub@a+2
  2824  000E00  C004  F021         	movff	?___flmul+3,___flsub@a+3
  2825  000E04  EC8C  F01C         	call	___flsub	;wreg free
  2826  000E08  C01A  F082         	movff	?___flsub,efgtoa@h
  2827  000E0C  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  2828  000E10  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  2829  000E14  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  2830  000E18                     
  2831                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  2832  000E18  C094  F015         	movff	efgtoa@u,___fldiv@b
  2833  000E1C  C095  F016         	movff	efgtoa@u+1,___fldiv@b+1
  2834  000E20  C096  F017         	movff	efgtoa@u+2,___fldiv@b+2
  2835  000E24  C097  F018         	movff	efgtoa@u+3,___fldiv@b+3
  2836  000E28  0E00               	movlw	0
  2837  000E2A  6E19               	movwf	___fldiv@a^0,c
  2838  000E2C  0E00               	movlw	0
  2839  000E2E  6E1A               	movwf	(___fldiv@a+1)^0,c
  2840  000E30  0E20               	movlw	32
  2841  000E32  6E1B               	movwf	(___fldiv@a+2)^0,c
  2842  000E34  0E41               	movlw	65
  2843  000E36  6E1C               	movwf	(___fldiv@a+3)^0,c
  2844  000E38  ECE9  F010         	call	___fldiv	;wreg free
  2845  000E3C  C015  F094         	movff	?___fldiv,efgtoa@u
  2846  000E40  C016  F095         	movff	?___fldiv+1,efgtoa@u+1
  2847  000E44  C017  F096         	movff	?___fldiv+2,efgtoa@u+2
  2848  000E48  C018  F097         	movff	?___fldiv+3,efgtoa@u+3
  2849  000E4C                     
  2850                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 436:         ++i;
  2851  000E4C  0100               	movlb	0	; () banked
  2852  000E4E  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  2853  000E50  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  2854  000E52                     l3543:
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  2858  000E52  5172               	movf	efgtoa@m& (0+255),w,b
  2859  000E54  5D8A               	subwf	efgtoa@i& (0+255),w,b
  2860  000E56  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  2861  000E58  0A80               	xorlw	128
  2862  000E5A  6E49               	movwf	??_efgtoa^0,c
  2863  000E5C  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  2864  000E5E  0A80               	xorlw	128
  2865  000E60  5849               	subwfb	??_efgtoa^0,w,c
  2866  000E62  A0D8               	btfss	status,0,c
  2867  000E64  EF36  F007         	goto	u4241
  2868  000E68  EF38  F007         	goto	u4240
  2869  000E6C                     u4241:
  2870  000E6C  EFAE  F006         	goto	l3535
  2871  000E70                     u4240:
  2872  000E70                     
  2873                           ; BSR set to: 0
  2874                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  2875  000E70  C094  F001         	movff	efgtoa@u,___flmul@b
  2876  000E74  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  2877  000E78  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  2878  000E7C  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  2879  000E80  0E00               	movlw	0
  2880  000E82  6E05               	movwf	___flmul@a^0,c
  2881  000E84  0E00               	movlw	0
  2882  000E86  6E06               	movwf	(___flmul@a+1)^0,c
  2883  000E88  0EA0               	movlw	160
  2884  000E8A  6E07               	movwf	(___flmul@a+2)^0,c
  2885  000E8C  0E40               	movlw	64
  2886  000E8E  6E08               	movwf	(___flmul@a+3)^0,c
  2887  000E90  ECD4  F00E         	call	___flmul	;wreg free
  2888  000E94  C001  F086         	movff	?___flmul,efgtoa@l
  2889  000E98  C002  F087         	movff	?___flmul+1,efgtoa@l+1
  2890  000E9C  C003  F088         	movff	?___flmul+2,efgtoa@l+2
  2891  000EA0  C004  F089         	movff	?___flmul+3,efgtoa@l+3
  2892  000EA4                     
  2893                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  2894  000EA4  C082  F01A         	movff	efgtoa@h,___flge@ff1
  2895  000EA8  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  2896  000EAC  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  2897  000EB0  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  2898  000EB4  C086  F01E         	movff	efgtoa@l,___flge@ff2
  2899  000EB8  C087  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  2900  000EBC  C088  F020         	movff	efgtoa@l+2,___flge@ff2+2
  2901  000EC0  C089  F021         	movff	efgtoa@l+3,___flge@ff2+3
  2902  000EC4  EC19  F018         	call	___flge	;wreg free
  2903  000EC8  B0D8               	btfsc	status,0,c
  2904  000ECA  EF69  F007         	goto	u4251
  2905  000ECE  EF6B  F007         	goto	u4250
  2906  000ED2                     u4251:
  2907  000ED2  EF76  F007         	goto	l3551
  2908  000ED6                     u4250:
  2909  000ED6                     
  2910                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  2911  000ED6  0E00               	movlw	0
  2912  000ED8  0100               	movlb	0	; () banked
  2913  000EDA  6F86               	movwf	efgtoa@l& (0+255),b
  2914  000EDC  0E00               	movlw	0
  2915  000EDE  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  2916  000EE0  0E00               	movlw	0
  2917  000EE2  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  2918  000EE4  0E00               	movlw	0
  2919  000EE6  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  2920                           
  2921                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 443:     } else {
  2922  000EE8  EF9F  F007         	goto	l3557
  2923  000EEC                     l3551:
  2924                           
  2925                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  2926  000EEC  C082  F001         	movff	efgtoa@h,___fleq@ff1
  2927  000EF0  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2928  000EF4  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2929  000EF8  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2930  000EFC  C086  F005         	movff	efgtoa@l,___fleq@ff2
  2931  000F00  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2932  000F04  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2933  000F08  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2934  000F0C  EC07  F01B         	call	___fleq	;wreg free
  2935  000F10  A0D8               	btfss	status,0,c
  2936  000F12  EF8D  F007         	goto	u4261
  2937  000F16  EF8F  F007         	goto	u4260
  2938  000F1A                     u4261:
  2939  000F1A  EF9F  F007         	goto	l3557
  2940  000F1E                     u4260:
  2941  000F1E  0100               	movlb	0	; () banked
  2942  000F20  B178               	btfsc	efgtoa@d& (0+255),0,b
  2943  000F22  EF95  F007         	goto	u4271
  2944  000F26  EF97  F007         	goto	u4270
  2945  000F2A                     u4271:
  2946  000F2A  EF9F  F007         	goto	l3557
  2947  000F2E                     u4270:
  2948  000F2E                     
  2949                           ; BSR set to: 0
  2950                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  2951  000F2E  0E00               	movlw	0
  2952  000F30  6F86               	movwf	efgtoa@l& (0+255),b
  2953  000F32  0E00               	movlw	0
  2954  000F34  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  2955  000F36  0E00               	movlw	0
  2956  000F38  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  2957  000F3A  0E00               	movlw	0
  2958  000F3C  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  2959  000F3E                     l3557:
  2960                           
  2961                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  2962  000F3E  C08C  F001         	movff	efgtoa@g,___fladd@b
  2963  000F42  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  2964  000F46  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  2965  000F4A  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  2966  000F4E  C086  F005         	movff	efgtoa@l,___fladd@a
  2967  000F52  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  2968  000F56  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  2969  000F5A  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  2970  000F5E  EC3F  F00A         	call	___fladd	;wreg free
  2971  000F62  C001  F082         	movff	?___fladd,efgtoa@h
  2972  000F66  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  2973  000F6A  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  2974  000F6E  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  2975  000F72                     
  2976                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  2977  000F72  C082  F01A         	movff	efgtoa@h,___flge@ff1
  2978  000F76  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  2979  000F7A  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  2980  000F7E  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  2981  000F82  0E00               	movlw	0
  2982  000F84  6E05               	movwf	___flmul@a^0,c
  2983  000F86  0E00               	movlw	0
  2984  000F88  6E06               	movwf	(___flmul@a+1)^0,c
  2985  000F8A  0E20               	movlw	32
  2986  000F8C  6E07               	movwf	(___flmul@a+2)^0,c
  2987  000F8E  0E41               	movlw	65
  2988  000F90  6E08               	movwf	(___flmul@a+3)^0,c
  2989  000F92  C074  F001         	movff	efgtoa@ou,___flmul@b
  2990  000F96  C075  F002         	movff	efgtoa@ou+1,___flmul@b+1
  2991  000F9A  C076  F003         	movff	efgtoa@ou+2,___flmul@b+2
  2992  000F9E  C077  F004         	movff	efgtoa@ou+3,___flmul@b+3
  2993  000FA2  ECD4  F00E         	call	___flmul	;wreg free
  2994  000FA6  C001  F01E         	movff	?___flmul,___flge@ff2
  2995  000FAA  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  2996  000FAE  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  2997  000FB2  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  2998  000FB6  EC19  F018         	call	___flge	;wreg free
  2999  000FBA  A0D8               	btfss	status,0,c
  3000  000FBC  EFE2  F007         	goto	u4281
  3001  000FC0  EFE4  F007         	goto	u4280
  3002  000FC4                     u4281:
  3003  000FC4  EF0D  F008         	goto	l3569
  3004  000FC8                     u4280:
  3005  000FC8                     
  3006                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 454:   e++;
  3007  000FC8  0100               	movlb	0	; () banked
  3008  000FCA  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3009  000FCC  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3010  000FCE                     
  3011                           ; BSR set to: 0
  3012                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3013  000FCE  C074  F001         	movff	efgtoa@ou,___flmul@b
  3014  000FD2  C075  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3015  000FD6  C076  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3016  000FDA  C077  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3017  000FDE  0E00               	movlw	0
  3018  000FE0  6E05               	movwf	___flmul@a^0,c
  3019  000FE2  0E00               	movlw	0
  3020  000FE4  6E06               	movwf	(___flmul@a+1)^0,c
  3021  000FE6  0E20               	movlw	32
  3022  000FE8  6E07               	movwf	(___flmul@a+2)^0,c
  3023  000FEA  0E41               	movlw	65
  3024  000FEC  6E08               	movwf	(___flmul@a+3)^0,c
  3025  000FEE  ECD4  F00E         	call	___flmul	;wreg free
  3026  000FF2  C001  F074         	movff	?___flmul,efgtoa@ou
  3027  000FF6  C002  F075         	movff	?___flmul+1,efgtoa@ou+1
  3028  000FFA  C003  F076         	movff	?___flmul+2,efgtoa@ou+2
  3029  000FFE  C004  F077         	movff	?___flmul+3,efgtoa@ou+3
  3030  001002                     
  3031                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3032  001002  0E66               	movlw	102
  3033  001004  0100               	movlb	0	; () banked
  3034  001006  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3035  001008  A4D8               	btfss	status,2,c
  3036  00100A  EF09  F008         	goto	u4291
  3037  00100E  EF0B  F008         	goto	u4290
  3038  001012                     u4291:
  3039  001012  EF0D  F008         	goto	l3569
  3040  001016                     u4290:
  3041  001016                     
  3042                           ; BSR set to: 0
  3043                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 458:    m++;
  3044  001016  4B72               	infsnz	efgtoa@m& (0+255),f,b
  3045  001018  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  3046  00101A                     l3569:
  3047                           
  3048                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3049  00101A  C074  F094         	movff	efgtoa@ou,efgtoa@u
  3050  00101E  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  3051  001022  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  3052  001026  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  3053  00102A                     
  3054                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3055  00102A  0E65               	movlw	101
  3056  00102C  0100               	movlb	0	; () banked
  3057  00102E  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3058  001030  B4D8               	btfsc	status,2,c
  3059  001032  EF1D  F008         	goto	u4301
  3060  001036  EF1F  F008         	goto	u4300
  3061  00103A                     u4301:
  3062  00103A  EF25  F008         	goto	l3575
  3063  00103E                     u4300:
  3064  00103E                     
  3065                           ; BSR set to: 0
  3066  00103E  C090  F070         	movff	efgtoa@e,efgtoa@ne
  3067  001042  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  3068  001046  EF29  F008         	goto	l873
  3069  00104A                     l3575:
  3070                           
  3071                           ; BSR set to: 0
  3072  00104A  0E00               	movlw	0
  3073  00104C  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  3074  00104E  0E00               	movlw	0
  3075  001050  6F70               	movwf	efgtoa@ne& (0+255),b
  3076  001052                     l873:
  3077                           
  3078                           ; BSR set to: 0
  3079                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3080  001052  0E00               	movlw	0
  3081  001054  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  3082  001056  0E00               	movlw	0
  3083  001058  6F6E               	movwf	efgtoa@pp& (0+255),b
  3084                           
  3085                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3086  00105A  0E00               	movlw	0
  3087  00105C  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  3088  00105E  0E00               	movlw	0
  3089  001060  6F6C               	movwf	efgtoa@t& (0+255),b
  3090                           
  3091                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3092  001062  0E00               	movlw	0
  3093  001064  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3094  001066  0E00               	movlw	0
  3095  001068  6F8A               	movwf	efgtoa@i& (0+255),b
  3096                           
  3097                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3098  00106A  EF24  F009         	goto	l3625
  3099  00106E                     l3577:
  3100                           
  3101                           ; BSR set to: 0
  3102                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3103  00106E  C082  F015         	movff	efgtoa@h,___fldiv@b
  3104  001072  C083  F016         	movff	efgtoa@h+1,___fldiv@b+1
  3105  001076  C084  F017         	movff	efgtoa@h+2,___fldiv@b+2
  3106  00107A  C085  F018         	movff	efgtoa@h+3,___fldiv@b+3
  3107  00107E  C094  F019         	movff	efgtoa@u,___fldiv@a
  3108  001082  C095  F01A         	movff	efgtoa@u+1,___fldiv@a+1
  3109  001086  C096  F01B         	movff	efgtoa@u+2,___fldiv@a+2
  3110  00108A  C097  F01C         	movff	efgtoa@u+3,___fldiv@a+3
  3111  00108E  ECE9  F010         	call	___fldiv	;wreg free
  3112  001092  C015  F02E         	movff	?___fldiv,floorf@x
  3113  001096  C016  F02F         	movff	?___fldiv+1,floorf@x+1
  3114  00109A  C017  F030         	movff	?___fldiv+2,floorf@x+2
  3115  00109E  C018  F031         	movff	?___fldiv+3,floorf@x+3
  3116  0010A2  ECB6  F012         	call	_floorf	;wreg free
  3117  0010A6  C02E  F086         	movff	?_floorf,efgtoa@l
  3118  0010AA  C02F  F087         	movff	?_floorf+1,efgtoa@l+1
  3119  0010AE  C030  F088         	movff	?_floorf+2,efgtoa@l+2
  3120  0010B2  C031  F089         	movff	?_floorf+3,efgtoa@l+3
  3121                           
  3122                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3123  0010B6  C086  F001         	movff	efgtoa@l,___fltol@f1
  3124  0010BA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3125  0010BE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3126  0010C2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3127  0010C6  EC96  F017         	call	___fltol	;wreg free
  3128  0010CA  C001  F078         	movff	?___fltol,efgtoa@d
  3129  0010CE  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3130  0010D2                     
  3131                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3132  0010D2  0100               	movlb	0	; () banked
  3133  0010D4  B9CA               	btfsc	_flags& (0+255),4,b
  3134  0010D6  EF6F  F008         	goto	u4311
  3135  0010DA  EF71  F008         	goto	u4310
  3136  0010DE                     u4311:
  3137  0010DE  EF8E  F008         	goto	l3589
  3138  0010E2                     u4310:
  3139  0010E2                     
  3140                           ; BSR set to: 0
  3141  0010E2  5178               	movf	efgtoa@d& (0+255),w,b
  3142  0010E4  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3143  0010E6  A4D8               	btfss	status,2,c
  3144  0010E8  EF78  F008         	goto	u4321
  3145  0010EC  EF7A  F008         	goto	u4320
  3146  0010F0                     u4321:
  3147  0010F0  EF8E  F008         	goto	l3589
  3148  0010F4                     u4320:
  3149  0010F4                     
  3150                           ; BSR set to: 0
  3151  0010F4  0E67               	movlw	103
  3152  0010F6  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3153  0010F8  A4D8               	btfss	status,2,c
  3154  0010FA  EF81  F008         	goto	u4331
  3155  0010FE  EF83  F008         	goto	u4330
  3156  001102                     u4331:
  3157  001102  EF8E  F008         	goto	l3589
  3158  001106                     u4330:
  3159  001106                     
  3160                           ; BSR set to: 0
  3161  001106  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3162  001108  EF8A  F008         	goto	u4340
  3163  00110C  EF88  F008         	goto	u4341
  3164  001110                     u4341:
  3165  001110  EF8E  F008         	goto	l3589
  3166  001114                     u4340:
  3167  001114                     
  3168                           ; BSR set to: 0
  3169                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3170  001114  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  3171  001116  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  3172                           
  3173                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3174  001118  EFD8  F008         	goto	l3617
  3175  00111C                     l3589:
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3179  00111C  516E               	movf	efgtoa@pp& (0+255),w,b
  3180  00111E  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3181  001120  A4D8               	btfss	status,2,c
  3182  001122  EF95  F008         	goto	u4351
  3183  001126  EF97  F008         	goto	u4350
  3184  00112A                     u4351:
  3185  00112A  EFC1  F008         	goto	l3609
  3186  00112E                     u4350:
  3187  00112E                     
  3188                           ; BSR set to: 0
  3189  00112E  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3190  001130  EF9E  F008         	goto	u4360
  3191  001134  EF9C  F008         	goto	u4361
  3192  001138                     u4361:
  3193  001138  EFC1  F008         	goto	l3609
  3194  00113C                     u4360:
  3195  00113C                     
  3196                           ; BSR set to: 0
  3197                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3198  00113C  0E00               	movlw	low _dbuf
  3199  00113E  2592               	addwf	efgtoa@n& (0+255),w,b
  3200  001140  6ED9               	movwf	fsr2l,c
  3201  001142  0E01               	movlw	high _dbuf
  3202  001144  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3203  001146  6EDA               	movwf	fsr2h,c
  3204  001148  0E2E               	movlw	46
  3205  00114A  6EDF               	movwf	indf2,c
  3206  00114C                     
  3207                           ; BSR set to: 0
  3208  00114C  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3209  00114E  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3210  001150                     
  3211                           ; BSR set to: 0
  3212                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3213  001150  077E               	decf	efgtoa@w& (0+255),f,b
  3214  001152  A0D8               	btfss	status,0,c
  3215  001154  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3216  001156                     
  3217                           ; BSR set to: 0
  3218                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3219  001156  0E00               	movlw	0
  3220  001158  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  3221  00115A  0E01               	movlw	1
  3222  00115C  6F6E               	movwf	efgtoa@pp& (0+255),b
  3223  00115E  EFC1  F008         	goto	l3609
  3224  001162                     l3601:
  3225                           
  3226                           ; BSR set to: 0
  3227                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3228  001162  0E00               	movlw	low _dbuf
  3229  001164  2592               	addwf	efgtoa@n& (0+255),w,b
  3230  001166  6ED9               	movwf	fsr2l,c
  3231  001168  0E01               	movlw	high _dbuf
  3232  00116A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3233  00116C  6EDA               	movwf	fsr2h,c
  3234  00116E  0E30               	movlw	48
  3235  001170  6EDF               	movwf	indf2,c
  3236  001172                     
  3237                           ; BSR set to: 0
  3238  001172  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3239  001174  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3240  001176                     
  3241                           ; BSR set to: 0
  3242                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3243  001176  077E               	decf	efgtoa@w& (0+255),f,b
  3244  001178  A0D8               	btfss	status,0,c
  3245  00117A  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3246  00117C                     
  3247                           ; BSR set to: 0
  3248                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3249  00117C  076C               	decf	efgtoa@t& (0+255),f,b
  3250  00117E  A0D8               	btfss	status,0,c
  3251  001180  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  3252  001182                     l3609:
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3256  001182  516C               	movf	efgtoa@t& (0+255),w,b
  3257  001184  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3258  001186  A4D8               	btfss	status,2,c
  3259  001188  EFC8  F008         	goto	u4371
  3260  00118C  EFCA  F008         	goto	u4370
  3261  001190                     u4371:
  3262  001190  EFB1  F008         	goto	l3601
  3263  001194                     u4370:
  3264  001194                     
  3265                           ; BSR set to: 0
  3266                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3267  001194  0E00               	movlw	low _dbuf
  3268  001196  2592               	addwf	efgtoa@n& (0+255),w,b
  3269  001198  6ED9               	movwf	fsr2l,c
  3270  00119A  0E01               	movlw	high _dbuf
  3271  00119C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3272  00119E  6EDA               	movwf	fsr2h,c
  3273  0011A0  5178               	movf	efgtoa@d& (0+255),w,b
  3274  0011A2  0F30               	addlw	48
  3275  0011A4  6EDF               	movwf	indf2,c
  3276  0011A6                     
  3277                           ; BSR set to: 0
  3278  0011A6  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3279  0011A8  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3280  0011AA                     
  3281                           ; BSR set to: 0
  3282                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3283  0011AA  077E               	decf	efgtoa@w& (0+255),f,b
  3284  0011AC  A0D8               	btfss	status,0,c
  3285  0011AE  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3286  0011B0                     l3617:
  3287                           
  3288                           ; BSR set to: 0
  3289                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3290  0011B0  C082  F01A         	movff	efgtoa@h,___flsub@b
  3291  0011B4  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3292  0011B8  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3293  0011BC  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3294  0011C0  C094  F005         	movff	efgtoa@u,___flmul@a
  3295  0011C4  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  3296  0011C8  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  3297  0011CC  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  3298  0011D0  C086  F001         	movff	efgtoa@l,___flmul@b
  3299  0011D4  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  3300  0011D8  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  3301  0011DC  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  3302  0011E0  ECD4  F00E         	call	___flmul	;wreg free
  3303  0011E4  C001  F01E         	movff	?___flmul,___flsub@a
  3304  0011E8  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3305  0011EC  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3306  0011F0  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3307  0011F4  EC8C  F01C         	call	___flsub	;wreg free
  3308  0011F8  C01A  F082         	movff	?___flsub,efgtoa@h
  3309  0011FC  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  3310  001200  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  3311  001204  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  3312  001208                     
  3313                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3314  001208  C094  F015         	movff	efgtoa@u,___fldiv@b
  3315  00120C  C095  F016         	movff	efgtoa@u+1,___fldiv@b+1
  3316  001210  C096  F017         	movff	efgtoa@u+2,___fldiv@b+2
  3317  001214  C097  F018         	movff	efgtoa@u+3,___fldiv@b+3
  3318  001218  0E00               	movlw	0
  3319  00121A  6E19               	movwf	___fldiv@a^0,c
  3320  00121C  0E00               	movlw	0
  3321  00121E  6E1A               	movwf	(___fldiv@a+1)^0,c
  3322  001220  0E20               	movlw	32
  3323  001222  6E1B               	movwf	(___fldiv@a+2)^0,c
  3324  001224  0E41               	movlw	65
  3325  001226  6E1C               	movwf	(___fldiv@a+3)^0,c
  3326  001228  ECE9  F010         	call	___fldiv	;wreg free
  3327  00122C  C015  F094         	movff	?___fldiv,efgtoa@u
  3328  001230  C016  F095         	movff	?___fldiv+1,efgtoa@u+1
  3329  001234  C017  F096         	movff	?___fldiv+2,efgtoa@u+2
  3330  001238  C018  F097         	movff	?___fldiv+3,efgtoa@u+3
  3331  00123C                     
  3332                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3333  00123C  0100               	movlb	0	; () banked
  3334  00123E  0770               	decf	efgtoa@ne& (0+255),f,b
  3335  001240  A0D8               	btfss	status,0,c
  3336  001242  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  3337  001244                     
  3338                           ; BSR set to: 0
  3339                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3340  001244  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3341  001246  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3342  001248                     l3625:
  3343                           
  3344                           ; BSR set to: 0
  3345                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3346  001248  5172               	movf	efgtoa@m& (0+255),w,b
  3347  00124A  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3348  00124C  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3349  00124E  0A80               	xorlw	128
  3350  001250  6E49               	movwf	??_efgtoa^0,c
  3351  001252  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  3352  001254  0A80               	xorlw	128
  3353  001256  5849               	subwfb	??_efgtoa^0,w,c
  3354  001258  B0D8               	btfsc	status,0,c
  3355  00125A  EF31  F009         	goto	u4381
  3356  00125E  EF33  F009         	goto	u4380
  3357  001262                     u4381:
  3358  001262  EF41  F009         	goto	l3629
  3359  001266                     u4380:
  3360  001266                     
  3361                           ; BSR set to: 0
  3362  001266  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3363  001268  EF3F  F009         	goto	u4391
  3364  00126C  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  3365  00126E  E109               	bnz	u4390
  3366  001270  0E4B               	movlw	75
  3367  001272  5D92               	subwf	efgtoa@n& (0+255),w,b
  3368  001274  A0D8               	btfss	status,0,c
  3369  001276  EF3F  F009         	goto	u4391
  3370  00127A  EF41  F009         	goto	u4390
  3371  00127E                     u4391:
  3372  00127E  EF37  F008         	goto	l3577
  3373  001282                     u4390:
  3374  001282                     l3629:
  3375                           
  3376                           ; BSR set to: 0
  3377                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3378  001282  516E               	movf	efgtoa@pp& (0+255),w,b
  3379  001284  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3380  001286  A4D8               	btfss	status,2,c
  3381  001288  EF48  F009         	goto	u4401
  3382  00128C  EF4A  F009         	goto	u4400
  3383  001290                     u4401:
  3384  001290  EF5B  F009         	goto	l3637
  3385  001294                     u4400:
  3386  001294                     
  3387                           ; BSR set to: 0
  3388  001294  A9CA               	btfss	_flags& (0+255),4,b
  3389  001296  EF4F  F009         	goto	u4411
  3390  00129A  EF51  F009         	goto	u4410
  3391  00129E                     u4411:
  3392  00129E  EF5B  F009         	goto	l3637
  3393  0012A2                     u4410:
  3394  0012A2                     
  3395                           ; BSR set to: 0
  3396                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3397  0012A2  0E00               	movlw	low _dbuf
  3398  0012A4  2592               	addwf	efgtoa@n& (0+255),w,b
  3399  0012A6  6ED9               	movwf	fsr2l,c
  3400  0012A8  0E01               	movlw	high _dbuf
  3401  0012AA  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3402  0012AC  6EDA               	movwf	fsr2h,c
  3403  0012AE  0E2E               	movlw	46
  3404  0012B0  6EDF               	movwf	indf2,c
  3405  0012B2                     
  3406                           ; BSR set to: 0
  3407  0012B2  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3408  0012B4  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3409  0012B6                     l3637:
  3410                           
  3411                           ; BSR set to: 0
  3412                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3413  0012B6  0E00               	movlw	low _dbuf
  3414  0012B8  2592               	addwf	efgtoa@n& (0+255),w,b
  3415  0012BA  6ED9               	movwf	fsr2l,c
  3416  0012BC  0E01               	movlw	high _dbuf
  3417  0012BE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3418  0012C0  6EDA               	movwf	fsr2h,c
  3419  0012C2  0E00               	movlw	0
  3420  0012C4  6EDF               	movwf	indf2,c
  3421  0012C6                     
  3422                           ; BSR set to: 0
  3423                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3424  0012C6  0E65               	movlw	101
  3425  0012C8  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3426  0012CA  A4D8               	btfss	status,2,c
  3427  0012CC  EF6A  F009         	goto	u4421
  3428  0012D0  EF6C  F009         	goto	u4420
  3429  0012D4                     u4421:
  3430  0012D4  EFC6  F004         	goto	l3439
  3431  0012D8                     u4420:
  3432  0012D8                     
  3433                           ; BSR set to: 0
  3434                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3435  0012D8  0E00               	movlw	0
  3436  0012DA  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3437  0012DC  0E4F               	movlw	79
  3438  0012DE  6F8A               	movwf	efgtoa@i& (0+255),b
  3439  0012E0                     
  3440                           ; BSR set to: 0
  3441                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3442  0012E0  0E00               	movlw	low _dbuf
  3443  0012E2  258A               	addwf	efgtoa@i& (0+255),w,b
  3444  0012E4  6ED9               	movwf	fsr2l,c
  3445  0012E6  0E01               	movlw	high _dbuf
  3446  0012E8  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3447  0012EA  6EDA               	movwf	fsr2h,c
  3448  0012EC  0E00               	movlw	0
  3449  0012EE  6EDF               	movwf	indf2,c
  3450  0012F0                     
  3451                           ; BSR set to: 0
  3452                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3453  0012F0  0E00               	movlw	0
  3454  0012F2  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3455  0012F4  0E00               	movlw	0
  3456  0012F6  6F7A               	movwf	efgtoa@sign& (0+255),b
  3457  0012F8                     
  3458                           ; BSR set to: 0
  3459                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  3460  0012F8  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3461  0012FA  EF83  F009         	goto	u4430
  3462  0012FE  EF81  F009         	goto	u4431
  3463  001302                     u4431:
  3464  001302  EF8B  F009         	goto	l3653
  3465  001306                     u4430:
  3466  001306                     
  3467                           ; BSR set to: 0
  3468                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  3469  001306  0E00               	movlw	0
  3470  001308  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3471  00130A  0E01               	movlw	1
  3472  00130C  6F7A               	movwf	efgtoa@sign& (0+255),b
  3473  00130E                     
  3474                           ; BSR set to: 0
  3475                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  3476  00130E  6D90               	negf	efgtoa@e& (0+255),b
  3477  001310  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  3478  001312  B0D8               	btfsc	status,0,c
  3479  001314  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3480  001316                     l3653:
  3481                           
  3482                           ; BSR set to: 0
  3483                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  3484  001316  0E00               	movlw	0
  3485  001318  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3486  00131A  0E02               	movlw	2
  3487  00131C  6F7C               	movwf	efgtoa@p& (0+255),b
  3488                           
  3489                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3490  00131E  EFBC  F009         	goto	l3665
  3491  001322                     l3655:
  3492                           
  3493                           ; BSR set to: 0
  3494                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  3495  001322  078A               	decf	efgtoa@i& (0+255),f,b
  3496  001324  A0D8               	btfss	status,0,c
  3497  001326  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3498  001328                     
  3499                           ; BSR set to: 0
  3500                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  3501  001328  0E00               	movlw	low _dbuf
  3502  00132A  258A               	addwf	efgtoa@i& (0+255),w,b
  3503  00132C  6ED9               	movwf	fsr2l,c
  3504  00132E  0E01               	movlw	high _dbuf
  3505  001330  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3506  001332  6EDA               	movwf	fsr2h,c
  3507  001334  C090  F001         	movff	efgtoa@e,___awmod@dividend
  3508  001338  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3509  00133C  0E00               	movlw	0
  3510  00133E  6E04               	movwf	(___awmod@divisor+1)^0,c
  3511  001340  0E0A               	movlw	10
  3512  001342  6E03               	movwf	___awmod@divisor^0,c
  3513  001344  ECAF  F01A         	call	___awmod	;wreg free
  3514  001348  5001               	movf	?___awmod^0,w,c
  3515  00134A  0F30               	addlw	48
  3516  00134C  6EDF               	movwf	indf2,c
  3517  00134E                     
  3518                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  3519  00134E  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  3520  001352  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3521  001356  0E00               	movlw	0
  3522  001358  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3523  00135A  0E0A               	movlw	10
  3524  00135C  6E03               	movwf	___awdiv@divisor^0,c
  3525  00135E  EC4D  F01A         	call	___awdiv	;wreg free
  3526  001362  C001  F090         	movff	?___awdiv,efgtoa@e
  3527  001366  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  3528  00136A                     
  3529                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  3530  00136A  0100               	movlb	0	; () banked
  3531  00136C  077C               	decf	efgtoa@p& (0+255),f,b
  3532  00136E  A0D8               	btfss	status,0,c
  3533  001370  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  3534  001372                     
  3535                           ; BSR set to: 0
  3536                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  3537  001372  077E               	decf	efgtoa@w& (0+255),f,b
  3538  001374  A0D8               	btfss	status,0,c
  3539  001376  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3540  001378                     l3665:
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3544  001378  5190               	movf	efgtoa@e& (0+255),w,b
  3545  00137A  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3546  00137C  A4D8               	btfss	status,2,c
  3547  00137E  EFC3  F009         	goto	u4441
  3548  001382  EFC5  F009         	goto	u4440
  3549  001386                     u4441:
  3550  001386  EF91  F009         	goto	l3655
  3551  00138A                     u4440:
  3552  00138A                     
  3553                           ; BSR set to: 0
  3554  00138A  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3555  00138C  EFD2  F009         	goto	u4450
  3556  001390  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  3557  001392  E106               	bnz	u4451
  3558  001394  057C               	decf	efgtoa@p& (0+255),w,b
  3559  001396  B0D8               	btfsc	status,0,c
  3560  001398  EFD0  F009         	goto	u4451
  3561  00139C  EFD2  F009         	goto	u4450
  3562  0013A0                     u4451:
  3563  0013A0  EF91  F009         	goto	l3655
  3564  0013A4                     u4450:
  3565  0013A4                     
  3566                           ; BSR set to: 0
  3567                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 514:         --i;
  3568  0013A4  078A               	decf	efgtoa@i& (0+255),f,b
  3569  0013A6  A0D8               	btfss	status,0,c
  3570  0013A8  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3571  0013AA                     
  3572                           ; BSR set to: 0
  3573                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  3574  0013AA  517A               	movf	efgtoa@sign& (0+255),w,b
  3575  0013AC  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3576  0013AE  A4D8               	btfss	status,2,c
  3577  0013B0  EFDC  F009         	goto	u4461
  3578  0013B4  EFDE  F009         	goto	u4460
  3579  0013B8                     u4461:
  3580  0013B8  EFE4  F009         	goto	l3675
  3581  0013BC                     u4460:
  3582  0013BC                     
  3583                           ; BSR set to: 0
  3584  0013BC  0E00               	movlw	0
  3585  0013BE  6F67               	movwf	(_efgtoa$861+1)& (0+255),b
  3586  0013C0  0E2B               	movlw	43
  3587  0013C2  6F66               	movwf	_efgtoa$861& (0+255),b
  3588  0013C4  EFE8  F009         	goto	l3677
  3589  0013C8                     l3675:
  3590                           
  3591                           ; BSR set to: 0
  3592  0013C8  0E00               	movlw	0
  3593  0013CA  6F67               	movwf	(_efgtoa$861+1)& (0+255),b
  3594  0013CC  0E2D               	movlw	45
  3595  0013CE  6F66               	movwf	_efgtoa$861& (0+255),b
  3596  0013D0                     l3677:
  3597                           
  3598                           ; BSR set to: 0
  3599  0013D0  0E00               	movlw	low _dbuf
  3600  0013D2  258A               	addwf	efgtoa@i& (0+255),w,b
  3601  0013D4  6ED9               	movwf	fsr2l,c
  3602  0013D6  0E01               	movlw	high _dbuf
  3603  0013D8  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3604  0013DA  6EDA               	movwf	fsr2h,c
  3605  0013DC  C066  FFDF         	movff	_efgtoa$861,indf2
  3606  0013E0                     
  3607                           ; BSR set to: 0
  3608                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 516:         --w;
  3609  0013E0  077E               	decf	efgtoa@w& (0+255),f,b
  3610  0013E2  A0D8               	btfss	status,0,c
  3611  0013E4  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3612  0013E6                     
  3613                           ; BSR set to: 0
  3614                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3615  0013E6  078A               	decf	efgtoa@i& (0+255),f,b
  3616  0013E8  A0D8               	btfss	status,0,c
  3617  0013EA  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3618  0013EC                     
  3619                           ; BSR set to: 0
  3620  0013EC  0EBF               	movlw	191
  3621  0013EE  6E49               	movwf	??_efgtoa^0,c
  3622  0013F0  0EFF               	movlw	255
  3623  0013F2  6E4A               	movwf	(??_efgtoa+1)^0,c
  3624  0013F4  5048               	movf	efgtoa@c^0,w,c
  3625  0013F6  6E4B               	movwf	(??_efgtoa+2)^0,c
  3626  0013F8  6A4C               	clrf	(??_efgtoa+3)^0,c
  3627  0013FA  5049               	movf	??_efgtoa^0,w,c
  3628  0013FC  264B               	addwf	(??_efgtoa+2)^0,f,c
  3629  0013FE  504A               	movf	(??_efgtoa+1)^0,w,c
  3630  001400  224C               	addwfc	(??_efgtoa+3)^0,f,c
  3631  001402  504C               	movf	(??_efgtoa+3)^0,w,c
  3632  001404  E10A               	bnz	u4470
  3633  001406  0E1A               	movlw	26
  3634  001408  5C4B               	subwf	(??_efgtoa+2)^0,w,c
  3635  00140A  A0D8               	btfss	status,0,c
  3636  00140C  EF0A  F00A         	goto	u4471
  3637  001410  EF0D  F00A         	goto	u4470
  3638  001414                     u4471:
  3639  001414  0E01               	movlw	1
  3640  001416  EF0E  F00A         	goto	u4480
  3641  00141A                     u4470:
  3642  00141A  0E00               	movlw	0
  3643  00141C                     u4480:
  3644  00141C  6F6A               	movwf	_efgtoa$863& (0+255),b
  3645  00141E  6B6B               	clrf	(_efgtoa$863+1)& (0+255),b
  3646  001420                     
  3647                           ; BSR set to: 0
  3648  001420  516A               	movf	_efgtoa$863& (0+255),w,b
  3649  001422  116B               	iorwf	(_efgtoa$863+1)& (0+255),w,b
  3650  001424  A4D8               	btfss	status,2,c
  3651  001426  EF17  F00A         	goto	u4491
  3652  00142A  EF19  F00A         	goto	u4490
  3653  00142E                     u4491:
  3654  00142E  EF1F  F00A         	goto	l3691
  3655  001432                     u4490:
  3656  001432                     
  3657                           ; BSR set to: 0
  3658  001432  0E00               	movlw	0
  3659  001434  6F69               	movwf	(_efgtoa$862+1)& (0+255),b
  3660  001436  0E65               	movlw	101
  3661  001438  6F68               	movwf	_efgtoa$862& (0+255),b
  3662  00143A  EF23  F00A         	goto	l3693
  3663  00143E                     l3691:
  3664                           
  3665                           ; BSR set to: 0
  3666  00143E  0E00               	movlw	0
  3667  001440  6F69               	movwf	(_efgtoa$862+1)& (0+255),b
  3668  001442  0E45               	movlw	69
  3669  001444  6F68               	movwf	_efgtoa$862& (0+255),b
  3670  001446                     l3693:
  3671                           
  3672                           ; BSR set to: 0
  3673  001446  0E00               	movlw	low _dbuf
  3674  001448  258A               	addwf	efgtoa@i& (0+255),w,b
  3675  00144A  6ED9               	movwf	fsr2l,c
  3676  00144C  0E01               	movlw	high _dbuf
  3677  00144E  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3678  001450  6EDA               	movwf	fsr2h,c
  3679  001452  C068  FFDF         	movff	_efgtoa$862,indf2
  3680  001456                     
  3681                           ; BSR set to: 0
  3682                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 519:         --w;
  3683  001456  077E               	decf	efgtoa@w& (0+255),f,b
  3684  001458  A0D8               	btfss	status,0,c
  3685  00145A  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3686  00145C                     
  3687                           ; BSR set to: 0
  3688                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  3689  00145C  0E00               	movlw	low _dbuf
  3690  00145E  2592               	addwf	efgtoa@n& (0+255),w,b
  3691  001460  6E01               	movwf	strcpy@dest^0,c
  3692  001462  0E01               	movlw	high _dbuf
  3693  001464  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3694  001466  6E02               	movwf	(strcpy@dest+1)^0,c
  3695  001468  0E00               	movlw	low _dbuf
  3696  00146A  258A               	addwf	efgtoa@i& (0+255),w,b
  3697  00146C  6E03               	movwf	strcpy@src^0,c
  3698  00146E  0E01               	movlw	high _dbuf
  3699  001470  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3700  001472  6E04               	movwf	(strcpy@src+1)^0,c
  3701  001474  EC0C  F01C         	call	_strcpy	;wreg free
  3702  001478  EFC6  F004         	goto	l3439
  3703  00147C                     l827:
  3704  00147C  0012               	return		;funcret
  3705  00147E                     __end_of_efgtoa:
  3706                           	callstack 0
  3707                           
  3708 ;; *************** function _tolower *****************
  3709 ;; Defined at:
  3710 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\tolower.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;  c               2    6[COMRAM] int 
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;		None
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  2    6[COMRAM] int 
  3717 ;; Registers used:
  3718 ;;		wreg, status,2, status,0
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3724 ;;      Params:         2       0       0       0       0       0       0       0       0
  3725 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3726 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3727 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3728 ;;Total ram usage:        8 bytes
  3729 ;; Hardware stack levels used:    1
  3730 ;; Hardware stack levels required when called:    1
  3731 ;; This function calls:
  3732 ;;		_isupper
  3733 ;; This function is called by:
  3734 ;;		_efgtoa
  3735 ;;		_vfpfcnvrt
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           	psect	text6
  3740  0037B8                     __ptext6:
  3741                           	callstack 0
  3742  0037B8                     _tolower:
  3743                           	callstack 26
  3744  0037B8  0EBF               	movlw	191
  3745  0037BA  6E09               	movwf	??_tolower^0,c
  3746  0037BC  0EFF               	movlw	255
  3747  0037BE  6E0A               	movwf	(??_tolower+1)^0,c
  3748  0037C0  C007  F00B         	movff	tolower@c,??_tolower+2
  3749  0037C4  C008  F00C         	movff	tolower@c+1,??_tolower+3
  3750  0037C8  5009               	movf	??_tolower^0,w,c
  3751  0037CA  260B               	addwf	(??_tolower+2)^0,f,c
  3752  0037CC  500A               	movf	(??_tolower+1)^0,w,c
  3753  0037CE  220C               	addwfc	(??_tolower+3)^0,f,c
  3754  0037D0  500C               	movf	(??_tolower+3)^0,w,c
  3755  0037D2  E10A               	bnz	u3790
  3756  0037D4  0E1A               	movlw	26
  3757  0037D6  5C0B               	subwf	(??_tolower+2)^0,w,c
  3758  0037D8  A0D8               	btfss	status,0,c
  3759  0037DA  EFF1  F01B         	goto	u3791
  3760  0037DE  EFF4  F01B         	goto	u3790
  3761  0037E2                     u3791:
  3762  0037E2  0E01               	movlw	1
  3763  0037E4  EFF5  F01B         	goto	u3800
  3764  0037E8                     u3790:
  3765  0037E8  0E00               	movlw	0
  3766  0037EA                     u3800:
  3767  0037EA  6E0D               	movwf	_tolower$1010^0,c
  3768  0037EC  6A0E               	clrf	(_tolower$1010+1)^0,c
  3769  0037EE  500D               	movf	_tolower$1010^0,w,c
  3770  0037F0  100E               	iorwf	(_tolower$1010+1)^0,w,c
  3771  0037F2  B4D8               	btfsc	status,2,c
  3772  0037F4  EFFE  F01B         	goto	u3811
  3773  0037F8  EF00  F01C         	goto	u3810
  3774  0037FC                     u3811:
  3775  0037FC  EF07  F01C         	goto	l1057
  3776  003800                     u3810:
  3777  003800  0E20               	movlw	32
  3778  003802  1007               	iorwf	tolower@c^0,w,c
  3779  003804  6E07               	movwf	?_tolower^0,c
  3780  003806  5008               	movf	(tolower@c+1)^0,w,c
  3781  003808  6E08               	movwf	(?_tolower+1)^0,c
  3782  00380A  EF0B  F01C         	goto	l1062
  3783  00380E                     l1057:
  3784  00380E  C007  F007         	movff	tolower@c,?_tolower
  3785  003812  C008  F008         	movff	tolower@c+1,?_tolower+1
  3786  003816                     l1062:
  3787  003816  0012               	return		;funcret
  3788  003818                     __end_of_tolower:
  3789                           	callstack 0
  3790                           
  3791 ;; *************** function _isupper *****************
  3792 ;; Defined at:
  3793 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isupper.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;  c               2    0[COMRAM] int 
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;		None
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  2    0[COMRAM] int 
  3800 ;; Registers used:
  3801 ;;		wreg, status,2, status,0
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3807 ;;      Params:         2       0       0       0       0       0       0       0       0
  3808 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3809 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3810 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3811 ;;Total ram usage:        6 bytes
  3812 ;; Hardware stack levels used:    1
  3813 ;; This function calls:
  3814 ;;		Nothing
  3815 ;; This function is called by:
  3816 ;;		_efgtoa
  3817 ;;		_vfpfcnvrt
  3818 ;;		_tolower
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           	psect	text7
  3823  0039A2                     __ptext7:
  3824                           	callstack 0
  3825  0039A2                     _isupper:
  3826                           	callstack 26
  3827  0039A2  0EBF               	movlw	191
  3828  0039A4  6E03               	movwf	??_isupper^0,c
  3829  0039A6  0EFF               	movlw	255
  3830  0039A8  6E04               	movwf	(??_isupper+1)^0,c
  3831  0039AA  C001  F005         	movff	isupper@c,??_isupper+2
  3832  0039AE  C002  F006         	movff	isupper@c+1,??_isupper+3
  3833  0039B2  5003               	movf	??_isupper^0,w,c
  3834  0039B4  2605               	addwf	(??_isupper+2)^0,f,c
  3835  0039B6  5004               	movf	(??_isupper+1)^0,w,c
  3836  0039B8  2206               	addwfc	(??_isupper+3)^0,f,c
  3837  0039BA  5006               	movf	(??_isupper+3)^0,w,c
  3838  0039BC  E10A               	bnz	u2940
  3839  0039BE  0E1A               	movlw	26
  3840  0039C0  5C05               	subwf	(??_isupper+2)^0,w,c
  3841  0039C2  A0D8               	btfss	status,0,c
  3842  0039C4  EFE6  F01C         	goto	u2941
  3843  0039C8  EFE9  F01C         	goto	u2940
  3844  0039CC                     u2941:
  3845  0039CC  0E01               	movlw	1
  3846  0039CE  EFEA  F01C         	goto	u2950
  3847  0039D2                     u2940:
  3848  0039D2  0E00               	movlw	0
  3849  0039D4                     u2950:
  3850  0039D4  6E01               	movwf	?_isupper^0,c
  3851  0039D6  6A02               	clrf	(?_isupper+1)^0,c
  3852  0039D8  0012               	return		;funcret
  3853  0039DA                     __end_of_isupper:
  3854                           	callstack 0
  3855                           
  3856 ;; *************** function _strcpy *****************
  3857 ;; Defined at:
  3858 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strcpy.c"
  3859 ;; Parameters:    Size  Location     Type
  3860 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3861 ;;		 -> dbuf(80), 
  3862 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3863 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  3864 ;;		 -> dbuf(80), 
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;  d               2    8[COMRAM] PTR unsigned char 
  3867 ;;		 -> dbuf(80), 
  3868 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3869 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  3870 ;;		 -> dbuf(80), 
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  2    0[COMRAM] PTR unsigned char 
  3873 ;; Registers used:
  3874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3880 ;;      Params:         4       0       0       0       0       0       0       0       0
  3881 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3882 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3883 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3884 ;;Total ram usage:       10 bytes
  3885 ;; Hardware stack levels used:    1
  3886 ;; This function calls:
  3887 ;;		Nothing
  3888 ;; This function is called by:
  3889 ;;		_efgtoa
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           	psect	text8
  3894  003818                     __ptext8:
  3895                           	callstack 0
  3896  003818                     _strcpy:
  3897                           	callstack 26
  3898  003818  C003  F007         	movff	strcpy@src,strcpy@s
  3899  00381C  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  3900  003820  C001  F009         	movff	strcpy@dest,strcpy@d
  3901  003824  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  3902  003828                     l3339:
  3903  003828  5007               	movf	strcpy@s^0,w,c
  3904  00382A  6E05               	movwf	??_strcpy^0,c
  3905  00382C  5008               	movf	(strcpy@s+1)^0,w,c
  3906  00382E  6E06               	movwf	(??_strcpy+1)^0,c
  3907  003830  4A07               	infsnz	strcpy@s^0,f,c
  3908  003832  2A08               	incf	(strcpy@s+1)^0,f,c
  3909  003834  C005  FFF6         	movff	??_strcpy,tblptrl
  3910  003838  C006  FFF7         	movff	??_strcpy+1,tblptrh
  3911  00383C  6AF8               	clrf	tblptru,c
  3912  00383E  C009  FFD9         	movff	strcpy@d,fsr2l
  3913  003842  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  3914  003846  4A09               	infsnz	strcpy@d^0,f,c
  3915  003848  2A0A               	incf	(strcpy@d+1)^0,f,c
  3916  00384A  0E07               	movlw	(high __ramtop+-1)
  3917  00384C  64F7               	cpfsgt	tblptrh,c
  3918  00384E  D003               	bra	u3777
  3919  003850  0008               	tblrd		*
  3920  003852  50F5               	movf	tablat,w,c
  3921  003854  D005               	bra	u3770
  3922  003856                     u3777:
  3923  003856  CFF6 FFE1          	movff	tblptrl,fsr1l
  3924  00385A  CFF7 FFE2          	movff	tblptrh,fsr1h
  3925  00385E  50E7               	movf	indf1,w,c
  3926  003860                     u3770:
  3927  003860  6EDF               	movwf	indf2,c
  3928  003862  50DF               	movf	indf2,w,c
  3929  003864  A4D8               	btfss	status,2,c
  3930  003866  EF37  F01C         	goto	u3781
  3931  00386A  EF39  F01C         	goto	u3780
  3932  00386E                     u3781:
  3933  00386E  EF14  F01C         	goto	l3339
  3934  003872                     u3780:
  3935  003872  0012               	return		;funcret
  3936  003874                     __end_of_strcpy:
  3937                           	callstack 0
  3938                           
  3939 ;; *************** function _pad *****************
  3940 ;; Defined at:
  3941 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3944 ;;		 -> sprintf@f(6), 
  3945 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3946 ;;		 -> dbuf(80), 
  3947 ;;  p               2   20[COMRAM] int 
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;  w               2   25[COMRAM] int 
  3950 ;;  i               2   23[COMRAM] int 
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  2   16[COMRAM] int 
  3953 ;; Registers used:
  3954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3960 ;;      Params:         6       0       0       0       0       0       0       0       0
  3961 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3962 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3963 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3964 ;;Total ram usage:       11 bytes
  3965 ;; Hardware stack levels used:    1
  3966 ;; Hardware stack levels required when called:    3
  3967 ;; This function calls:
  3968 ;;		_fputc
  3969 ;;		_fputs
  3970 ;;		_strlen
  3971 ;; This function is called by:
  3972 ;;		_efgtoa
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           
  3976                           	psect	text9
  3977  0033D4                     __ptext9:
  3978                           	callstack 0
  3979  0033D4                     _pad:
  3980                           	callstack 23
  3981  0033D4                     
  3982                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3983  0033D4  0100               	movlb	0	; () banked
  3984  0033D6  A1CA               	btfss	_flags& (0+255),0,b
  3985  0033D8  EFF0  F019         	goto	u3661
  3986  0033DC  EFF2  F019         	goto	u3660
  3987  0033E0                     u3661:
  3988  0033E0  EFFC  F019         	goto	l3297
  3989  0033E4                     u3660:
  3990  0033E4                     
  3991                           ; BSR set to: 0
  3992                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3993  0033E4  C013  F00A         	movff	pad@buf,fputs@s
  3994  0033E8  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3995  0033EC  C011  F00C         	movff	pad@fp,fputs@fp
  3996  0033F0  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3997  0033F4  ECAF  F01C         	call	_fputs	;wreg free
  3998  0033F8                     l3297:
  3999                           
  4000                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4001  0033F8  BE16               	btfsc	(pad@p+1)^0,7,c
  4002  0033FA  EF01  F01A         	goto	u3671
  4003  0033FE  EF03  F01A         	goto	u3670
  4004  003402                     u3671:
  4005  003402  EF09  F01A         	goto	l3301
  4006  003406                     u3670:
  4007  003406  C015  F01A         	movff	pad@p,pad@w
  4008  00340A  C016  F01B         	movff	pad@p+1,pad@w+1
  4009  00340E  EF0D  F01A         	goto	l804
  4010  003412                     l3301:
  4011  003412  0E00               	movlw	0
  4012  003414  6E1B               	movwf	(pad@w+1)^0,c
  4013  003416  0E00               	movlw	0
  4014  003418  6E1A               	movwf	pad@w^0,c
  4015  00341A                     l804:
  4016                           
  4017                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4018  00341A  0E00               	movlw	0
  4019  00341C  6E19               	movwf	(pad@i+1)^0,c
  4020  00341E  0E00               	movlw	0
  4021  003420  6E18               	movwf	pad@i^0,c
  4022                           
  4023                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4024  003422  EF1F  F01A         	goto	l3307
  4025  003426                     l3303:
  4026                           
  4027                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4028  003426  0E00               	movlw	0
  4029  003428  6E02               	movwf	(fputc@c+1)^0,c
  4030  00342A  0E20               	movlw	32
  4031  00342C  6E01               	movwf	fputc@c^0,c
  4032  00342E  C011  F003         	movff	pad@fp,fputc@fp
  4033  003432  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4034  003436  EC85  F019         	call	_fputc	;wreg free
  4035  00343A                     
  4036                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4037  00343A  4A18               	infsnz	pad@i^0,f,c
  4038  00343C  2A19               	incf	(pad@i+1)^0,f,c
  4039  00343E                     l3307:
  4040                           
  4041                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4042  00343E  501A               	movf	pad@w^0,w,c
  4043  003440  5C18               	subwf	pad@i^0,w,c
  4044  003442  5019               	movf	(pad@i+1)^0,w,c
  4045  003444  0A80               	xorlw	128
  4046  003446  6E17               	movwf	??_pad^0,c
  4047  003448  501B               	movf	(pad@w+1)^0,w,c
  4048  00344A  0A80               	xorlw	128
  4049  00344C  5817               	subwfb	??_pad^0,w,c
  4050  00344E  A0D8               	btfss	status,0,c
  4051  003450  EF2C  F01A         	goto	u3681
  4052  003454  EF2E  F01A         	goto	u3680
  4053  003458                     u3681:
  4054  003458  EF13  F01A         	goto	l3303
  4055  00345C                     u3680:
  4056  00345C                     
  4057                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4058  00345C  0100               	movlb	0	; () banked
  4059  00345E  B1CA               	btfsc	_flags& (0+255),0,b
  4060  003460  EF34  F01A         	goto	u3691
  4061  003464  EF36  F01A         	goto	u3690
  4062  003468                     u3691:
  4063  003468  EF40  F01A         	goto	l3311
  4064  00346C                     u3690:
  4065  00346C                     
  4066                           ; BSR set to: 0
  4067                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4068  00346C  C013  F00A         	movff	pad@buf,fputs@s
  4069  003470  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4070  003474  C011  F00C         	movff	pad@fp,fputs@fp
  4071  003478  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4072  00347C  ECAF  F01C         	call	_fputs	;wreg free
  4073  003480                     l3311:
  4074                           
  4075                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4076  003480  C013  F001         	movff	pad@buf,strlen@s
  4077  003484  C014  F002         	movff	pad@buf+1,strlen@s+1
  4078  003488  EC25  F01D         	call	_strlen	;wreg free
  4079  00348C  501A               	movf	pad@w^0,w,c
  4080  00348E  2401               	addwf	?_strlen^0,w,c
  4081  003490  6E11               	movwf	?_pad^0,c
  4082  003492  501B               	movf	(pad@w+1)^0,w,c
  4083  003494  2002               	addwfc	(?_strlen+1)^0,w,c
  4084  003496  6E12               	movwf	(?_pad+1)^0,c
  4085  003498  0012               	return		;funcret
  4086  00349A                     __end_of_pad:
  4087                           	callstack 0
  4088                           
  4089 ;; *************** function _strlen *****************
  4090 ;; Defined at:
  4091 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4094 ;;		 -> dbuf(80), 
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4097 ;;		 -> dbuf(80), 
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  2    0[COMRAM] unsigned int 
  4100 ;; Registers used:
  4101 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4107 ;;      Params:         2       0       0       0       0       0       0       0       0
  4108 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4110 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4111 ;;Total ram usage:        4 bytes
  4112 ;; Hardware stack levels used:    1
  4113 ;; This function calls:
  4114 ;;		Nothing
  4115 ;; This function is called by:
  4116 ;;		_pad
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           	psect	text10
  4121  003A4A                     __ptext10:
  4122                           	callstack 0
  4123  003A4A                     _strlen:
  4124                           	callstack 25
  4125  003A4A  C001  F003         	movff	strlen@s,strlen@a
  4126  003A4E  C002  F004         	movff	strlen@s+1,strlen@a+1
  4127  003A52  EF2D  F01D         	goto	l2833
  4128  003A56                     l2831:
  4129  003A56  4A01               	infsnz	strlen@s^0,f,c
  4130  003A58  2A02               	incf	(strlen@s+1)^0,f,c
  4131  003A5A                     l2833:
  4132  003A5A  C001  FFD9         	movff	strlen@s,fsr2l
  4133  003A5E  C002  FFDA         	movff	strlen@s+1,fsr2h
  4134  003A62  50DF               	movf	indf2,w,c
  4135  003A64  A4D8               	btfss	status,2,c
  4136  003A66  EF37  F01D         	goto	u2931
  4137  003A6A  EF39  F01D         	goto	u2930
  4138  003A6E                     u2931:
  4139  003A6E  EF2B  F01D         	goto	l2831
  4140  003A72                     u2930:
  4141  003A72  5003               	movf	strlen@a^0,w,c
  4142  003A74  5C01               	subwf	strlen@s^0,w,c
  4143  003A76  6E01               	movwf	?_strlen^0,c
  4144  003A78  5004               	movf	(strlen@a+1)^0,w,c
  4145  003A7A  5802               	subwfb	(strlen@s+1)^0,w,c
  4146  003A7C  6E02               	movwf	(?_strlen+1)^0,c
  4147  003A7E  0012               	return		;funcret
  4148  003A80                     __end_of_strlen:
  4149                           	callstack 0
  4150                           
  4151 ;; *************** function _fputs *****************
  4152 ;; Defined at:
  4153 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  4154 ;; Parameters:    Size  Location     Type
  4155 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4156 ;;		 -> dbuf(80), 
  4157 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4158 ;;		 -> sprintf@f(6), 
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;  i               2   14[COMRAM] int 
  4161 ;;  c               1   13[COMRAM] unsigned char 
  4162 ;; Return value:  Size  Location     Type
  4163 ;;                  2    9[COMRAM] int 
  4164 ;; Registers used:
  4165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4171 ;;      Params:         4       0       0       0       0       0       0       0       0
  4172 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4173 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4174 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4175 ;;Total ram usage:        7 bytes
  4176 ;; Hardware stack levels used:    1
  4177 ;; Hardware stack levels required when called:    2
  4178 ;; This function calls:
  4179 ;;		_fputc
  4180 ;; This function is called by:
  4181 ;;		_pad
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           	psect	text11
  4186  00395E                     __ptext11:
  4187                           	callstack 0
  4188  00395E                     _fputs:
  4189                           	callstack 23
  4190  00395E  0E00               	movlw	0
  4191  003960  6E10               	movwf	(fputs@i+1)^0,c
  4192  003962  0E00               	movlw	0
  4193  003964  6E0F               	movwf	fputs@i^0,c
  4194  003966  EFC0  F01C         	goto	l2827
  4195  00396A                     l2823:
  4196  00396A  C00E  F001         	movff	fputs@c,fputc@c
  4197  00396E  6A02               	clrf	(fputc@c+1)^0,c
  4198  003970  C00C  F003         	movff	fputs@fp,fputc@fp
  4199  003974  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4200  003978  EC85  F019         	call	_fputc	;wreg free
  4201  00397C  4A0F               	infsnz	fputs@i^0,f,c
  4202  00397E  2A10               	incf	(fputs@i+1)^0,f,c
  4203  003980                     l2827:
  4204  003980  500F               	movf	fputs@i^0,w,c
  4205  003982  240A               	addwf	fputs@s^0,w,c
  4206  003984  6ED9               	movwf	fsr2l,c
  4207  003986  5010               	movf	(fputs@i+1)^0,w,c
  4208  003988  200B               	addwfc	(fputs@s+1)^0,w,c
  4209  00398A  6EDA               	movwf	fsr2h,c
  4210  00398C  50DF               	movf	indf2,w,c
  4211  00398E  6E0E               	movwf	fputs@c^0,c
  4212  003990  500E               	movf	fputs@c^0,w,c
  4213  003992  A4D8               	btfss	status,2,c
  4214  003994  EFCE  F01C         	goto	u2921
  4215  003998  EFD0  F01C         	goto	u2920
  4216  00399C                     u2921:
  4217  00399C  EFB5  F01C         	goto	l2823
  4218  0039A0                     u2920:
  4219  0039A0  0012               	return		;funcret
  4220  0039A2                     __end_of_fputs:
  4221                           	callstack 0
  4222                           
  4223 ;; *************** function _fputc *****************
  4224 ;; Defined at:
  4225 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;  c               2    0[COMRAM] int 
  4228 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4229 ;;		 -> sprintf@f(6), 
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;		None
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  2    0[COMRAM] int 
  4234 ;; Registers used:
  4235 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4241 ;;      Params:         4       0       0       0       0       0       0       0       0
  4242 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4243 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4244 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4245 ;;Total ram usage:        9 bytes
  4246 ;; Hardware stack levels used:    1
  4247 ;; Hardware stack levels required when called:    1
  4248 ;; This function calls:
  4249 ;;		_putch
  4250 ;; This function is called by:
  4251 ;;		_pad
  4252 ;;		_vfpfcnvrt
  4253 ;;		_fputs
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           	psect	text12
  4258  00330A                     __ptext12:
  4259                           	callstack 0
  4260  00330A                     _fputc:
  4261                           	callstack 26
  4262  00330A  5003               	movf	fputc@fp^0,w,c
  4263  00330C  1004               	iorwf	(fputc@fp+1)^0,w,c
  4264  00330E  B4D8               	btfsc	status,2,c
  4265  003310  EF8C  F019         	goto	u2491
  4266  003314  EF8E  F019         	goto	u2490
  4267  003318                     u2491:
  4268  003318  EF97  F019         	goto	l2609
  4269  00331C                     u2490:
  4270  00331C  5003               	movf	fputc@fp^0,w,c
  4271  00331E  1004               	iorwf	(fputc@fp+1)^0,w,c
  4272  003320  A4D8               	btfss	status,2,c
  4273  003322  EF95  F019         	goto	u2501
  4274  003326  EF97  F019         	goto	u2500
  4275  00332A                     u2501:
  4276  00332A  EF9C  F019         	goto	l2611
  4277  00332E                     u2500:
  4278  00332E                     l2609:
  4279  00332E  5001               	movf	fputc@c^0,w,c
  4280  003330  EC64  F01D         	call	_putch
  4281  003334  EFE9  F019         	goto	l1020
  4282  003338                     l2611:
  4283  003338  EE20 F004          	lfsr	2,4
  4284  00333C  5003               	movf	fputc@fp^0,w,c
  4285  00333E  26D9               	addwf	fsr2l,f,c
  4286  003340  5004               	movf	(fputc@fp+1)^0,w,c
  4287  003342  22DA               	addwfc	fsr2h,f,c
  4288  003344  50DE               	movf	postinc2,w,c
  4289  003346  10DE               	iorwf	postinc2,w,c
  4290  003348  B4D8               	btfsc	status,2,c
  4291  00334A  EFA9  F019         	goto	u2511
  4292  00334E  EFAB  F019         	goto	u2510
  4293  003352                     u2511:
  4294  003352  EFC6  F019         	goto	l2615
  4295  003356                     u2510:
  4296  003356  EE20 F004          	lfsr	2,4
  4297  00335A  5003               	movf	fputc@fp^0,w,c
  4298  00335C  26D9               	addwf	fsr2l,f,c
  4299  00335E  5004               	movf	(fputc@fp+1)^0,w,c
  4300  003360  22DA               	addwfc	fsr2h,f,c
  4301  003362  EE10 F002          	lfsr	1,2
  4302  003366  5003               	movf	fputc@fp^0,w,c
  4303  003368  26E1               	addwf	fsr1l,f,c
  4304  00336A  5004               	movf	(fputc@fp+1)^0,w,c
  4305  00336C  22E2               	addwfc	fsr1h,f,c
  4306  00336E  50DE               	movf	postinc2,w,c
  4307  003370  5CE6               	subwf	postinc1,w,c
  4308  003372  50E6               	movf	postinc1,w,c
  4309  003374  0A80               	xorlw	128
  4310  003376  6E09               	movwf	(??_fputc+4)^0,c
  4311  003378  50DE               	movf	postinc2,w,c
  4312  00337A  0A80               	xorlw	128
  4313  00337C  5809               	subwfb	(??_fputc+4)^0,w,c
  4314  00337E  B0D8               	btfsc	status,0,c
  4315  003380  EFC4  F019         	goto	u2521
  4316  003384  EFC6  F019         	goto	u2520
  4317  003388                     u2521:
  4318  003388  EFE9  F019         	goto	l1020
  4319  00338C                     u2520:
  4320  00338C                     l2615:
  4321  00338C  EE20 F002          	lfsr	2,2
  4322  003390  5003               	movf	fputc@fp^0,w,c
  4323  003392  26D9               	addwf	fsr2l,f,c
  4324  003394  5004               	movf	(fputc@fp+1)^0,w,c
  4325  003396  22DA               	addwfc	fsr2h,f,c
  4326  003398  CFDE F005          	movff	postinc2,??_fputc
  4327  00339C  CFDD F006          	movff	postdec2,??_fputc+1
  4328  0033A0  C003  FFD9         	movff	fputc@fp,fsr2l
  4329  0033A4  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4330  0033A8  CFDE F007          	movff	postinc2,??_fputc+2
  4331  0033AC  CFDD F008          	movff	postdec2,??_fputc+3
  4332  0033B0  5005               	movf	??_fputc^0,w,c
  4333  0033B2  2407               	addwf	(??_fputc+2)^0,w,c
  4334  0033B4  6ED9               	movwf	fsr2l,c
  4335  0033B6  5006               	movf	(??_fputc+1)^0,w,c
  4336  0033B8  2008               	addwfc	(??_fputc+3)^0,w,c
  4337  0033BA  6EDA               	movwf	fsr2h,c
  4338  0033BC  C001  FFDF         	movff	fputc@c,indf2
  4339  0033C0  EE20 F002          	lfsr	2,2
  4340  0033C4  5003               	movf	fputc@fp^0,w,c
  4341  0033C6  26D9               	addwf	fsr2l,f,c
  4342  0033C8  5004               	movf	(fputc@fp+1)^0,w,c
  4343  0033CA  22DA               	addwfc	fsr2h,f,c
  4344  0033CC  2ADE               	incf	postinc2,f,c
  4345  0033CE  0E00               	movlw	0
  4346  0033D0  22DD               	addwfc	postdec2,f,c
  4347  0033D2                     l1020:
  4348  0033D2  0012               	return		;funcret
  4349  0033D4                     __end_of_fputc:
  4350                           	callstack 0
  4351                           
  4352 ;; *************** function _putch *****************
  4353 ;; Defined at:
  4354 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\putch.c"
  4355 ;; Parameters:    Size  Location     Type
  4356 ;;  c               1    wreg     unsigned char 
  4357 ;; Auto vars:     Size  Location     Type
  4358 ;;  c               1    0[COMRAM] unsigned char 
  4359 ;; Return value:  Size  Location     Type
  4360 ;;                  1    wreg      void 
  4361 ;; Registers used:
  4362 ;;		wreg
  4363 ;; Tracked objects:
  4364 ;;		On entry : 0/0
  4365 ;;		On exit  : 0/0
  4366 ;;		Unchanged: 0/0
  4367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4368 ;;      Params:         0       0       0       0       0       0       0       0       0
  4369 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4370 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4371 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4372 ;;Total ram usage:        0 bytes
  4373 ;; Hardware stack levels used:    1
  4374 ;; This function calls:
  4375 ;;		Nothing
  4376 ;; This function is called by:
  4377 ;;		_fputc
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           	psect	text13
  4382  003AC8                     __ptext13:
  4383                           	callstack 0
  4384  003AC8                     _putch:
  4385                           	callstack 26
  4386  003AC8  0012               	return		;funcret
  4387  003ACA                     __end_of_putch:
  4388                           	callstack 0
  4389                           
  4390 ;; *************** function _floorf *****************
  4391 ;; Defined at:
  4392 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\floorf.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;  x               4   45[COMRAM] float 
  4395 ;; Auto vars:     Size  Location     Type
  4396 ;;  u               4   61[COMRAM] struct .
  4397 ;;  m               4   55[COMRAM] unsigned long 
  4398 ;;  e               2   59[COMRAM] int 
  4399 ;; Return value:  Size  Location     Type
  4400 ;;                  4   45[COMRAM] float 
  4401 ;; Registers used:
  4402 ;;		wreg, status,2, status,0
  4403 ;; Tracked objects:
  4404 ;;		On entry : 0/0
  4405 ;;		On exit  : 0/0
  4406 ;;		Unchanged: 0/0
  4407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4408 ;;      Params:         4       0       0       0       0       0       0       0       0
  4409 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4410 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4411 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4412 ;;Total ram usage:       20 bytes
  4413 ;; Hardware stack levels used:    1
  4414 ;; This function calls:
  4415 ;;		Nothing
  4416 ;; This function is called by:
  4417 ;;		_efgtoa
  4418 ;; This function uses a non-reentrant model
  4419 ;;
  4420                           
  4421                           	psect	text14
  4422  00256C                     __ptext14:
  4423                           	callstack 0
  4424  00256C                     _floorf:
  4425                           	callstack 26
  4426  00256C  C0B8  F03E         	movff	floorf@F527,floorf@u
  4427  002570  C0B9  F03F         	movff	floorf@F527+1,floorf@u+1
  4428  002574  C0BA  F040         	movff	floorf@F527+2,floorf@u+2
  4429  002578  C0BB  F041         	movff	floorf@F527+3,floorf@u+3
  4430  00257C  C02E  F03E         	movff	floorf@x,floorf@u
  4431  002580  C02F  F03F         	movff	floorf@x+1,floorf@u+1
  4432  002584  C030  F040         	movff	floorf@x+2,floorf@u+2
  4433  002588  C031  F041         	movff	floorf@x+3,floorf@u+3
  4434  00258C  0E81               	movlw	129
  4435  00258E  6E32               	movwf	??_floorf^0,c
  4436  002590  0EFF               	movlw	255
  4437  002592  6E33               	movwf	(??_floorf+1)^0,c
  4438  002594  C03E  F034         	movff	floorf@u,??_floorf+2
  4439  002598  C03F  F035         	movff	floorf@u+1,??_floorf+3
  4440  00259C  C040  F036         	movff	floorf@u+2,??_floorf+4
  4441  0025A0  C041  F037         	movff	floorf@u+3,??_floorf+5
  4442  0025A4  0E18               	movlw	24
  4443  0025A6  EFDA  F012         	goto	u3820
  4444  0025AA                     u3825:
  4445  0025AA  90D8               	bcf	status,0,c
  4446  0025AC  3237               	rrcf	(??_floorf+5)^0,f,c
  4447  0025AE  3236               	rrcf	(??_floorf+4)^0,f,c
  4448  0025B0  3235               	rrcf	(??_floorf+3)^0,f,c
  4449  0025B2  3234               	rrcf	(??_floorf+2)^0,f,c
  4450  0025B4                     u3820:
  4451  0025B4  2EE8               	decfsz	wreg,f,c
  4452  0025B6  EFD5  F012         	goto	u3825
  4453  0025BA  5034               	movf	(??_floorf+2)^0,w,c
  4454  0025BC  2432               	addwf	??_floorf^0,w,c
  4455  0025BE  6E3C               	movwf	floorf@e^0,c
  4456  0025C0  0E00               	movlw	0
  4457  0025C2  2033               	addwfc	(??_floorf+1)^0,w,c
  4458  0025C4  6E3D               	movwf	(floorf@e+1)^0,c
  4459  0025C6  BE3D               	btfsc	(floorf@e+1)^0,7,c
  4460  0025C8  EFEF  F012         	goto	u3831
  4461  0025CC  503D               	movf	(floorf@e+1)^0,w,c
  4462  0025CE  E109               	bnz	u3830
  4463  0025D0  0E17               	movlw	23
  4464  0025D2  5C3C               	subwf	floorf@e^0,w,c
  4465  0025D4  A0D8               	btfss	status,0,c
  4466  0025D6  EFEF  F012         	goto	u3831
  4467  0025DA  EFF1  F012         	goto	u3830
  4468  0025DE                     u3831:
  4469  0025DE  EFFB  F012         	goto	l3357
  4470  0025E2                     u3830:
  4471  0025E2                     l3355:
  4472  0025E2  C02E  F02E         	movff	floorf@x,?_floorf
  4473  0025E6  C02F  F02F         	movff	floorf@x+1,?_floorf+1
  4474  0025EA  C030  F030         	movff	floorf@x+2,?_floorf+2
  4475  0025EE  C031  F031         	movff	floorf@x+3,?_floorf+3
  4476  0025F2  EFBE  F013         	goto	l981
  4477  0025F6                     l3357:
  4478  0025F6  BE3D               	btfsc	(floorf@e+1)^0,7,c
  4479  0025F8  EF00  F013         	goto	u3841
  4480  0025FC  EF02  F013         	goto	u3840
  4481  002600                     u3841:
  4482  002600  EF72  F013         	goto	l3367
  4483  002604                     u3840:
  4484  002604  C03C  F032         	movff	floorf@e,??_floorf
  4485  002608  0EFF               	movlw	255
  4486  00260A  6E33               	movwf	(??_floorf+1)^0,c
  4487  00260C  0EFF               	movlw	255
  4488  00260E  6E34               	movwf	(??_floorf+2)^0,c
  4489  002610  0E7F               	movlw	127
  4490  002612  6E35               	movwf	(??_floorf+3)^0,c
  4491  002614  0E00               	movlw	0
  4492  002616  6E36               	movwf	(??_floorf+4)^0,c
  4493  002618                     u3855:
  4494  002618  6632               	tstfsz	??_floorf^0,c
  4495  00261A  EF11  F013         	goto	u3856
  4496  00261E  EF19  F013         	goto	u3857
  4497  002622                     u3856:
  4498  002622  3436               	rlcf	(??_floorf+4)^0,w,c
  4499  002624  3236               	rrcf	(??_floorf+4)^0,f,c
  4500  002626  3235               	rrcf	(??_floorf+3)^0,f,c
  4501  002628  3234               	rrcf	(??_floorf+2)^0,f,c
  4502  00262A  3233               	rrcf	(??_floorf+1)^0,f,c
  4503  00262C  2E32               	decfsz	??_floorf^0,f,c
  4504  00262E  EF0C  F013         	goto	u3855
  4505  002632                     u3857:
  4506  002632  C033  F038         	movff	??_floorf+1,floorf@m
  4507  002636  C034  F039         	movff	??_floorf+2,floorf@m+1
  4508  00263A  C035  F03A         	movff	??_floorf+3,floorf@m+2
  4509  00263E  C036  F03B         	movff	??_floorf+4,floorf@m+3
  4510  002642  5038               	movf	floorf@m^0,w,c
  4511  002644  143E               	andwf	floorf@u^0,w,c
  4512  002646  6E32               	movwf	??_floorf^0,c
  4513  002648  5039               	movf	(floorf@m+1)^0,w,c
  4514  00264A  143F               	andwf	(floorf@u+1)^0,w,c
  4515  00264C  6E33               	movwf	(??_floorf+1)^0,c
  4516  00264E  503A               	movf	(floorf@m+2)^0,w,c
  4517  002650  1440               	andwf	(floorf@u+2)^0,w,c
  4518  002652  6E34               	movwf	(??_floorf+2)^0,c
  4519  002654  503B               	movf	(floorf@m+3)^0,w,c
  4520  002656  1441               	andwf	(floorf@u+3)^0,w,c
  4521  002658  6E35               	movwf	(??_floorf+3)^0,c
  4522  00265A  5032               	movf	??_floorf^0,w,c
  4523  00265C  1033               	iorwf	(??_floorf+1)^0,w,c
  4524  00265E  1034               	iorwf	(??_floorf+2)^0,w,c
  4525  002660  1035               	iorwf	(??_floorf+3)^0,w,c
  4526  002662  A4D8               	btfss	status,2,c
  4527  002664  EF36  F013         	goto	u3861
  4528  002668  EF38  F013         	goto	u3860
  4529  00266C                     u3861:
  4530  00266C  EF3A  F013         	goto	l3363
  4531  002670                     u3860:
  4532  002670  EFF1  F012         	goto	l3355
  4533  002674                     l3363:
  4534  002674  C03E  F032         	movff	floorf@u,??_floorf
  4535  002678  C03F  F033         	movff	floorf@u+1,??_floorf+1
  4536  00267C  C040  F034         	movff	floorf@u+2,??_floorf+2
  4537  002680  C041  F035         	movff	floorf@u+3,??_floorf+3
  4538  002684  0E20               	movlw	32
  4539  002686  EF4A  F013         	goto	u3870
  4540  00268A                     u3875:
  4541  00268A  90D8               	bcf	status,0,c
  4542  00268C  3235               	rrcf	(??_floorf+3)^0,f,c
  4543  00268E  3234               	rrcf	(??_floorf+2)^0,f,c
  4544  002690  3233               	rrcf	(??_floorf+1)^0,f,c
  4545  002692  3232               	rrcf	??_floorf^0,f,c
  4546  002694                     u3870:
  4547  002694  2EE8               	decfsz	wreg,f,c
  4548  002696  EF45  F013         	goto	u3875
  4549  00269A  5032               	movf	??_floorf^0,w,c
  4550  00269C  1033               	iorwf	(??_floorf+1)^0,w,c
  4551  00269E  1034               	iorwf	(??_floorf+2)^0,w,c
  4552  0026A0  1035               	iorwf	(??_floorf+3)^0,w,c
  4553  0026A2  B4D8               	btfsc	status,2,c
  4554  0026A4  EF56  F013         	goto	u3881
  4555  0026A8  EF58  F013         	goto	u3880
  4556  0026AC                     u3881:
  4557  0026AC  EF60  F013         	goto	l984
  4558  0026B0                     u3880:
  4559  0026B0  5038               	movf	floorf@m^0,w,c
  4560  0026B2  263E               	addwf	floorf@u^0,f,c
  4561  0026B4  5039               	movf	(floorf@m+1)^0,w,c
  4562  0026B6  223F               	addwfc	(floorf@u+1)^0,f,c
  4563  0026B8  503A               	movf	(floorf@m+2)^0,w,c
  4564  0026BA  2240               	addwfc	(floorf@u+2)^0,f,c
  4565  0026BC  503B               	movf	(floorf@m+3)^0,w,c
  4566  0026BE  2241               	addwfc	(floorf@u+3)^0,f,c
  4567  0026C0                     l984:
  4568  0026C0  1C38               	comf	floorf@m^0,w,c
  4569  0026C2  6E32               	movwf	??_floorf^0,c
  4570  0026C4  1C39               	comf	(floorf@m+1)^0,w,c
  4571  0026C6  6E33               	movwf	(??_floorf+1)^0,c
  4572  0026C8  1C3A               	comf	(floorf@m+2)^0,w,c
  4573  0026CA  6E34               	movwf	(??_floorf+2)^0,c
  4574  0026CC  1C3B               	comf	(floorf@m+3)^0,w,c
  4575  0026CE  6E35               	movwf	(??_floorf+3)^0,c
  4576  0026D0  5032               	movf	??_floorf^0,w,c
  4577  0026D2  163E               	andwf	floorf@u^0,f,c
  4578  0026D4  5033               	movf	(??_floorf+1)^0,w,c
  4579  0026D6  163F               	andwf	(floorf@u+1)^0,f,c
  4580  0026D8  5034               	movf	(??_floorf+2)^0,w,c
  4581  0026DA  1640               	andwf	(floorf@u+2)^0,f,c
  4582  0026DC  5035               	movf	(??_floorf+3)^0,w,c
  4583  0026DE  1641               	andwf	(floorf@u+3)^0,f,c
  4584  0026E0  EFB6  F013         	goto	l3375
  4585  0026E4                     l3367:
  4586  0026E4  C03E  F032         	movff	floorf@u,??_floorf
  4587  0026E8  C03F  F033         	movff	floorf@u+1,??_floorf+1
  4588  0026EC  C040  F034         	movff	floorf@u+2,??_floorf+2
  4589  0026F0  C041  F035         	movff	floorf@u+3,??_floorf+3
  4590  0026F4  0E20               	movlw	32
  4591  0026F6  EF82  F013         	goto	u3890
  4592  0026FA                     u3895:
  4593  0026FA  90D8               	bcf	status,0,c
  4594  0026FC  3235               	rrcf	(??_floorf+3)^0,f,c
  4595  0026FE  3234               	rrcf	(??_floorf+2)^0,f,c
  4596  002700  3233               	rrcf	(??_floorf+1)^0,f,c
  4597  002702  3232               	rrcf	??_floorf^0,f,c
  4598  002704                     u3890:
  4599  002704  2EE8               	decfsz	wreg,f,c
  4600  002706  EF7D  F013         	goto	u3895
  4601  00270A  5032               	movf	??_floorf^0,w,c
  4602  00270C  1033               	iorwf	(??_floorf+1)^0,w,c
  4603  00270E  1034               	iorwf	(??_floorf+2)^0,w,c
  4604  002710  1035               	iorwf	(??_floorf+3)^0,w,c
  4605  002712  A4D8               	btfss	status,2,c
  4606  002714  EF8E  F013         	goto	u3901
  4607  002718  EF90  F013         	goto	u3900
  4608  00271C                     u3901:
  4609  00271C  EF9A  F013         	goto	l3371
  4610  002720                     u3900:
  4611  002720  0E00               	movlw	0
  4612  002722  6E3E               	movwf	floorf@u^0,c
  4613  002724  0E00               	movlw	0
  4614  002726  6E3F               	movwf	(floorf@u+1)^0,c
  4615  002728  0E00               	movlw	0
  4616  00272A  6E40               	movwf	(floorf@u+2)^0,c
  4617  00272C  0E00               	movlw	0
  4618  00272E  6E41               	movwf	(floorf@u+3)^0,c
  4619  002730  EFB6  F013         	goto	l3375
  4620  002734                     l3371:
  4621  002734  90D8               	bcf	status,0,c
  4622  002736  343E               	rlcf	floorf@u^0,w,c
  4623  002738  6E32               	movwf	??_floorf^0,c
  4624  00273A  343F               	rlcf	(floorf@u+1)^0,w,c
  4625  00273C  6E33               	movwf	(??_floorf+1)^0,c
  4626  00273E  3440               	rlcf	(floorf@u+2)^0,w,c
  4627  002740  6E34               	movwf	(??_floorf+2)^0,c
  4628  002742  3441               	rlcf	(floorf@u+3)^0,w,c
  4629  002744  6E35               	movwf	(??_floorf+3)^0,c
  4630  002746  5032               	movf	??_floorf^0,w,c
  4631  002748  1033               	iorwf	(??_floorf+1)^0,w,c
  4632  00274A  1034               	iorwf	(??_floorf+2)^0,w,c
  4633  00274C  1035               	iorwf	(??_floorf+3)^0,w,c
  4634  00274E  B4D8               	btfsc	status,2,c
  4635  002750  EFAC  F013         	goto	u3911
  4636  002754  EFAE  F013         	goto	u3910
  4637  002758                     u3911:
  4638  002758  EFB6  F013         	goto	l3375
  4639  00275C                     u3910:
  4640  00275C  0E00               	movlw	0
  4641  00275E  6E3E               	movwf	floorf@u^0,c
  4642  002760  0E00               	movlw	0
  4643  002762  6E3F               	movwf	(floorf@u+1)^0,c
  4644  002764  0E80               	movlw	128
  4645  002766  6E40               	movwf	(floorf@u+2)^0,c
  4646  002768  0EBF               	movlw	191
  4647  00276A  6E41               	movwf	(floorf@u+3)^0,c
  4648  00276C                     l3375:
  4649  00276C  C03E  F02E         	movff	floorf@u,?_floorf
  4650  002770  C03F  F02F         	movff	floorf@u+1,?_floorf+1
  4651  002774  C040  F030         	movff	floorf@u+2,?_floorf+2
  4652  002778  C041  F031         	movff	floorf@u+3,?_floorf+3
  4653  00277C                     l981:
  4654  00277C  0012               	return		;funcret
  4655  00277E                     __end_of_floorf:
  4656                           	callstack 0
  4657                           
  4658 ;; *************** function ___fpclassifyf *****************
  4659 ;; Defined at:
  4660 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\__fpclassifyf.c"
  4661 ;; Parameters:    Size  Location     Type
  4662 ;;  x               4    0[COMRAM] float 
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;  u               4   10[COMRAM] struct .
  4665 ;;  e               2    8[COMRAM] int 
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  2    0[COMRAM] int 
  4668 ;; Registers used:
  4669 ;;		wreg, status,2, status,0
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 0/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4675 ;;      Params:         4       0       0       0       0       0       0       0       0
  4676 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4677 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4678 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4679 ;;Total ram usage:       14 bytes
  4680 ;; Hardware stack levels used:    1
  4681 ;; This function calls:
  4682 ;;		Nothing
  4683 ;; This function is called by:
  4684 ;;		_efgtoa
  4685 ;; This function uses a non-reentrant model
  4686 ;;
  4687                           
  4688                           	psect	text15
  4689  003136                     __ptext15:
  4690                           	callstack 0
  4691  003136                     ___fpclassifyf:
  4692                           	callstack 26
  4693  003136  C0BC  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4694  00313A  C0BD  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4695  00313E  C0BE  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4696  003142  C0BF  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4697  003146  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4698  00314A  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4699  00314E  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4700  003152  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4701  003156  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4702  00315A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4703  00315E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4704  003162  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4705  003166  0E18               	movlw	24
  4706  003168  EFBB  F018         	goto	u3700
  4707  00316C                     u3705:
  4708  00316C  90D8               	bcf	status,0,c
  4709  00316E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4710  003170  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4711  003172  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4712  003174  3205               	rrcf	??___fpclassifyf^0,f,c
  4713  003176                     u3700:
  4714  003176  2EE8               	decfsz	wreg,f,c
  4715  003178  EFB6  F018         	goto	u3705
  4716  00317C  5005               	movf	??___fpclassifyf^0,w,c
  4717  00317E  6E09               	movwf	___fpclassifyf@e^0,c
  4718  003180  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4719  003182  5009               	movf	___fpclassifyf@e^0,w,c
  4720  003184  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4721  003186  A4D8               	btfss	status,2,c
  4722  003188  EFC8  F018         	goto	u3711
  4723  00318C  EFCA  F018         	goto	u3710
  4724  003190                     u3711:
  4725  003190  EFEA  F018         	goto	l3327
  4726  003194                     u3710:
  4727  003194  90D8               	bcf	status,0,c
  4728  003196  340B               	rlcf	___fpclassifyf@u^0,w,c
  4729  003198  6E05               	movwf	??___fpclassifyf^0,c
  4730  00319A  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4731  00319C  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4732  00319E  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4733  0031A0  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4734  0031A2  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4735  0031A4  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4736  0031A6  5005               	movf	??___fpclassifyf^0,w,c
  4737  0031A8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4738  0031AA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4739  0031AC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4740  0031AE  A4D8               	btfss	status,2,c
  4741  0031B0  EFDC  F018         	goto	u3721
  4742  0031B4  EFDE  F018         	goto	u3720
  4743  0031B8                     u3721:
  4744  0031B8  EFE4  F018         	goto	l3323
  4745  0031BC                     u3720:
  4746  0031BC  0E00               	movlw	0
  4747  0031BE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4748  0031C0  0E02               	movlw	2
  4749  0031C2  6E01               	movwf	?___fpclassifyf^0,c
  4750  0031C4  EF19  F019         	goto	l943
  4751  0031C8                     l3323:
  4752  0031C8  0E00               	movlw	0
  4753  0031CA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4754  0031CC  0E03               	movlw	3
  4755  0031CE  6E01               	movwf	?___fpclassifyf^0,c
  4756  0031D0  EF19  F019         	goto	l943
  4757  0031D4                     l3327:
  4758  0031D4  2809               	incf	___fpclassifyf@e^0,w,c
  4759  0031D6  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4760  0031D8  A4D8               	btfss	status,2,c
  4761  0031DA  EFF1  F018         	goto	u3731
  4762  0031DE  EFF3  F018         	goto	u3730
  4763  0031E2                     u3731:
  4764  0031E2  EF15  F019         	goto	l3333
  4765  0031E6                     u3730:
  4766  0031E6  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4767  0031EA  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4768  0031EE  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4769  0031F2  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4770  0031F6  0E09               	movlw	9
  4771  0031F8                     u3745:
  4772  0031F8  90D8               	bcf	status,0,c
  4773  0031FA  3605               	rlcf	??___fpclassifyf^0,f,c
  4774  0031FC  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4775  0031FE  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4776  003200  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4777  003202  2EE8               	decfsz	wreg,f,c
  4778  003204  EFFC  F018         	goto	u3745
  4779  003208  5005               	movf	??___fpclassifyf^0,w,c
  4780  00320A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4781  00320C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4782  00320E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4783  003210  B4D8               	btfsc	status,2,c
  4784  003212  EF0D  F019         	goto	u3751
  4785  003216  EF10  F019         	goto	u3750
  4786  00321A                     u3751:
  4787  00321A  0E01               	movlw	1
  4788  00321C  EF11  F019         	goto	u3760
  4789  003220                     u3750:
  4790  003220  0E00               	movlw	0
  4791  003222                     u3760:
  4792  003222  6E01               	movwf	?___fpclassifyf^0,c
  4793  003224  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4794  003226  EF19  F019         	goto	l943
  4795  00322A                     l3333:
  4796  00322A  0E00               	movlw	0
  4797  00322C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4798  00322E  0E04               	movlw	4
  4799  003230  6E01               	movwf	?___fpclassifyf^0,c
  4800  003232                     l943:
  4801  003232  0012               	return		;funcret
  4802  003234                     __end_of___fpclassifyf:
  4803                           	callstack 0
  4804                           
  4805 ;; *************** function ___fltol *****************
  4806 ;; Defined at:
  4807 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\fltol.c"
  4808 ;; Parameters:    Size  Location     Type
  4809 ;;  f1              4    0[COMRAM] int 
  4810 ;; Auto vars:     Size  Location     Type
  4811 ;;  exp1            1    9[COMRAM] unsigned char 
  4812 ;;  sign1           1    8[COMRAM] unsigned char 
  4813 ;; Return value:  Size  Location     Type
  4814 ;;                  4    0[COMRAM] long 
  4815 ;; Registers used:
  4816 ;;		wreg, status,2, status,0
  4817 ;; Tracked objects:
  4818 ;;		On entry : 0/0
  4819 ;;		On exit  : 0/0
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4822 ;;      Params:         4       0       0       0       0       0       0       0       0
  4823 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4824 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4825 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4826 ;;Total ram usage:       10 bytes
  4827 ;; Hardware stack levels used:    1
  4828 ;; This function calls:
  4829 ;;		Nothing
  4830 ;; This function is called by:
  4831 ;;		_efgtoa
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835                           	psect	text16
  4836  002F2C                     __ptext16:
  4837                           	callstack 0
  4838  002F2C                     ___fltol:
  4839                           	callstack 26
  4840  002F2C  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4841  002F2E  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4842  002F30  6E0A               	movwf	___fltol@exp1^0,c
  4843  002F32  500A               	movf	___fltol@exp1^0,w,c
  4844  002F34  A4D8               	btfss	status,2,c
  4845  002F36  EF9F  F017         	goto	u3591
  4846  002F3A  EFA1  F017         	goto	u3590
  4847  002F3E                     u3591:
  4848  002F3E  EFAB  F017         	goto	l3255
  4849  002F42                     u3590:
  4850  002F42                     l3251:
  4851  002F42  0E00               	movlw	0
  4852  002F44  6E01               	movwf	?___fltol^0,c
  4853  002F46  0E00               	movlw	0
  4854  002F48  6E02               	movwf	(?___fltol+1)^0,c
  4855  002F4A  0E00               	movlw	0
  4856  002F4C  6E03               	movwf	(?___fltol+2)^0,c
  4857  002F4E  0E00               	movlw	0
  4858  002F50  6E04               	movwf	(?___fltol+3)^0,c
  4859  002F52  EF18  F018         	goto	l382
  4860  002F56                     l3255:
  4861  002F56  C001  F005         	movff	___fltol@f1,??___fltol
  4862  002F5A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4863  002F5E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4864  002F62  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4865  002F66  0E20               	movlw	32
  4866  002F68  EFBB  F017         	goto	u3600
  4867  002F6C                     u3605:
  4868  002F6C  90D8               	bcf	status,0,c
  4869  002F6E  3208               	rrcf	(??___fltol+3)^0,f,c
  4870  002F70  3207               	rrcf	(??___fltol+2)^0,f,c
  4871  002F72  3206               	rrcf	(??___fltol+1)^0,f,c
  4872  002F74  3205               	rrcf	??___fltol^0,f,c
  4873  002F76                     u3600:
  4874  002F76  2EE8               	decfsz	wreg,f,c
  4875  002F78  EFB6  F017         	goto	u3605
  4876  002F7C  5005               	movf	??___fltol^0,w,c
  4877  002F7E  6E09               	movwf	___fltol@sign1^0,c
  4878  002F80  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4879  002F82  0EFF               	movlw	255
  4880  002F84  1601               	andwf	___fltol@f1^0,f,c
  4881  002F86  0EFF               	movlw	255
  4882  002F88  1602               	andwf	(___fltol@f1+1)^0,f,c
  4883  002F8A  0EFF               	movlw	255
  4884  002F8C  1603               	andwf	(___fltol@f1+2)^0,f,c
  4885  002F8E  0E00               	movlw	0
  4886  002F90  1604               	andwf	(___fltol@f1+3)^0,f,c
  4887  002F92  0E96               	movlw	150
  4888  002F94  5E0A               	subwf	___fltol@exp1^0,f,c
  4889  002F96  BE0A               	btfsc	___fltol@exp1^0,7,c
  4890  002F98  EFD2  F017         	goto	u3610
  4891  002F9C  EFD0  F017         	goto	u3611
  4892  002FA0                     u3611:
  4893  002FA0  EFE8  F017         	goto	l3275
  4894  002FA4                     u3610:
  4895  002FA4  500A               	movf	___fltol@exp1^0,w,c
  4896  002FA6  0A80               	xorlw	128
  4897  002FA8  0F97               	addlw	151
  4898  002FAA  B0D8               	btfsc	status,0,c
  4899  002FAC  EFDA  F017         	goto	u3621
  4900  002FB0  EFDC  F017         	goto	u3620
  4901  002FB4                     u3621:
  4902  002FB4  EFDE  F017         	goto	l3271
  4903  002FB8                     u3620:
  4904  002FB8  EFA1  F017         	goto	l3251
  4905  002FBC                     l3271:
  4906  002FBC  90D8               	bcf	status,0,c
  4907  002FBE  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4908  002FC0  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4909  002FC2  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4910  002FC4  3201               	rrcf	___fltol@f1^0,f,c
  4911  002FC6  3E0A               	incfsz	___fltol@exp1^0,f,c
  4912  002FC8  EFDE  F017         	goto	l3271
  4913  002FCC  EF00  F018         	goto	l3285
  4914  002FD0                     l3275:
  4915  002FD0  0E1F               	movlw	31
  4916  002FD2  640A               	cpfsgt	___fltol@exp1^0,c
  4917  002FD4  EFEE  F017         	goto	u3631
  4918  002FD8  EFF0  F017         	goto	u3630
  4919  002FDC                     u3631:
  4920  002FDC  EFF8  F017         	goto	l3283
  4921  002FE0                     u3630:
  4922  002FE0  EFA1  F017         	goto	l3251
  4923  002FE4                     l3281:
  4924  002FE4  90D8               	bcf	status,0,c
  4925  002FE6  3601               	rlcf	___fltol@f1^0,f,c
  4926  002FE8  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4927  002FEA  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4928  002FEC  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4929  002FEE  060A               	decf	___fltol@exp1^0,f,c
  4930  002FF0                     l3283:
  4931  002FF0  500A               	movf	___fltol@exp1^0,w,c
  4932  002FF2  A4D8               	btfss	status,2,c
  4933  002FF4  EFFE  F017         	goto	u3641
  4934  002FF8  EF00  F018         	goto	u3640
  4935  002FFC                     u3641:
  4936  002FFC  EFF2  F017         	goto	l3281
  4937  003000                     u3640:
  4938  003000                     l3285:
  4939  003000  5009               	movf	___fltol@sign1^0,w,c
  4940  003002  B4D8               	btfsc	status,2,c
  4941  003004  EF06  F018         	goto	u3651
  4942  003008  EF08  F018         	goto	u3650
  4943  00300C                     u3651:
  4944  00300C  EF10  F018         	goto	l3289
  4945  003010                     u3650:
  4946  003010  1E04               	comf	(___fltol@f1+3)^0,f,c
  4947  003012  1E03               	comf	(___fltol@f1+2)^0,f,c
  4948  003014  1E02               	comf	(___fltol@f1+1)^0,f,c
  4949  003016  6C01               	negf	___fltol@f1^0,c
  4950  003018  0E00               	movlw	0
  4951  00301A  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4952  00301C  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4953  00301E  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4954  003020                     l3289:
  4955  003020  C001  F001         	movff	___fltol@f1,?___fltol
  4956  003024  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4957  003028  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4958  00302C  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4959  003030                     l382:
  4960  003030  0012               	return		;funcret
  4961  003032                     __end_of___fltol:
  4962                           	callstack 0
  4963                           
  4964 ;; *************** function ___flsub *****************
  4965 ;; Defined at:
  4966 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcadd.c"
  4967 ;; Parameters:    Size  Location     Type
  4968 ;;  b               4   25[COMRAM] long 
  4969 ;;  a               4   29[COMRAM] long 
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;		None
  4972 ;; Return value:  Size  Location     Type
  4973 ;;                  4   25[COMRAM] long 
  4974 ;; Registers used:
  4975 ;;		wreg, status,2, status,0, cstack
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4981 ;;      Params:         8       0       0       0       0       0       0       0       0
  4982 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4983 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4984 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4985 ;;Total ram usage:        8 bytes
  4986 ;; Hardware stack levels used:    1
  4987 ;; Hardware stack levels required when called:    1
  4988 ;; This function calls:
  4989 ;;		___fladd
  4990 ;; This function is called by:
  4991 ;;		_efgtoa
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995                           	psect	text17
  4996  003918                     __ptext17:
  4997                           	callstack 0
  4998  003918                     ___flsub:
  4999                           	callstack 25
  5000  003918  0E00               	movlw	0
  5001  00391A  1A1E               	xorwf	___flsub@a^0,f,c
  5002  00391C  0E00               	movlw	0
  5003  00391E  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  5004  003920  0E00               	movlw	0
  5005  003922  1A20               	xorwf	(___flsub@a+2)^0,f,c
  5006  003924  0E80               	movlw	128
  5007  003926  1A21               	xorwf	(___flsub@a+3)^0,f,c
  5008  003928  C01A  F001         	movff	___flsub@b,___fladd@b
  5009  00392C  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  5010  003930  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  5011  003934  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  5012  003938  C01E  F005         	movff	___flsub@a,___fladd@a
  5013  00393C  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  5014  003940  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  5015  003944  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  5016  003948  EC3F  F00A         	call	___fladd	;wreg free
  5017  00394C  C001  F01A         	movff	?___fladd,?___flsub
  5018  003950  C002  F01B         	movff	?___fladd+1,?___flsub+1
  5019  003954  C003  F01C         	movff	?___fladd+2,?___flsub+2
  5020  003958  C004  F01D         	movff	?___fladd+3,?___flsub+3
  5021  00395C  0012               	return		;funcret
  5022  00395E                     __end_of___flsub:
  5023                           	callstack 0
  5024                           
  5025 ;; *************** function ___fladd *****************
  5026 ;; Defined at:
  5027 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcadd.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;  b               4    0[COMRAM] long 
  5030 ;;  a               4    4[COMRAM] long 
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;  grs             1   15[COMRAM] unsigned char 
  5033 ;;  bexp            1   14[COMRAM] unsigned char 
  5034 ;;  aexp            1   13[COMRAM] unsigned char 
  5035 ;;  signs           1   12[COMRAM] unsigned char 
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  4    0[COMRAM] unsigned char 
  5038 ;; Registers used:
  5039 ;;		wreg, status,2, status,0
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5045 ;;      Params:         8       0       0       0       0       0       0       0       0
  5046 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5047 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5048 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5049 ;;Total ram usage:       16 bytes
  5050 ;; Hardware stack levels used:    1
  5051 ;; This function calls:
  5052 ;;		Nothing
  5053 ;; This function is called by:
  5054 ;;		___flsub
  5055 ;;		_efgtoa
  5056 ;; This function uses a non-reentrant model
  5057 ;;
  5058                           
  5059                           	psect	text18
  5060  00147E                     __ptext18:
  5061                           	callstack 0
  5062  00147E                     ___fladd:
  5063                           	callstack 25
  5064  00147E  5004               	movf	(___fladd@b+3)^0,w,c
  5065  001480  0B80               	andlw	128
  5066  001482  6E0D               	movwf	___fladd@signs^0,c
  5067  001484  5004               	movf	(___fladd@b+3)^0,w,c
  5068  001486  2404               	addwf	(___fladd@b+3)^0,w,c
  5069  001488  6E0F               	movwf	___fladd@bexp^0,c
  5070  00148A  AE03               	btfss	(___fladd@b+2)^0,7,c
  5071  00148C  EF4A  F00A         	goto	u2531
  5072  001490  EF4C  F00A         	goto	u2530
  5073  001494                     u2531:
  5074  001494  EF4D  F00A         	goto	l2625
  5075  001498                     u2530:
  5076  001498  800F               	bsf	___fladd@bexp^0,0,c
  5077  00149A                     l2625:
  5078  00149A  500F               	movf	___fladd@bexp^0,w,c
  5079  00149C  B4D8               	btfsc	status,2,c
  5080  00149E  EF53  F00A         	goto	u2541
  5081  0014A2  EF55  F00A         	goto	u2540
  5082  0014A6                     u2541:
  5083  0014A6  EF6A  F00A         	goto	l2635
  5084  0014AA                     u2540:
  5085  0014AA  280F               	incf	___fladd@bexp^0,w,c
  5086  0014AC  A4D8               	btfss	status,2,c
  5087  0014AE  EF5B  F00A         	goto	u2551
  5088  0014B2  EF5D  F00A         	goto	u2550
  5089  0014B6                     u2551:
  5090  0014B6  EF65  F00A         	goto	l2631
  5091  0014BA                     u2550:
  5092  0014BA  0E00               	movlw	0
  5093  0014BC  6E01               	movwf	___fladd@b^0,c
  5094  0014BE  0E00               	movlw	0
  5095  0014C0  6E02               	movwf	(___fladd@b+1)^0,c
  5096  0014C2  0E00               	movlw	0
  5097  0014C4  6E03               	movwf	(___fladd@b+2)^0,c
  5098  0014C6  0E00               	movlw	0
  5099  0014C8  6E04               	movwf	(___fladd@b+3)^0,c
  5100  0014CA                     l2631:
  5101  0014CA  8E03               	bsf	(___fladd@b+2)^0,7,c
  5102  0014CC  0E00               	movlw	0
  5103  0014CE  6E04               	movwf	(___fladd@b+3)^0,c
  5104  0014D0  EF72  F00A         	goto	l2637
  5105  0014D4                     l2635:
  5106  0014D4  0E00               	movlw	0
  5107  0014D6  6E01               	movwf	___fladd@b^0,c
  5108  0014D8  0E00               	movlw	0
  5109  0014DA  6E02               	movwf	(___fladd@b+1)^0,c
  5110  0014DC  0E00               	movlw	0
  5111  0014DE  6E03               	movwf	(___fladd@b+2)^0,c
  5112  0014E0  0E00               	movlw	0
  5113  0014E2  6E04               	movwf	(___fladd@b+3)^0,c
  5114  0014E4                     l2637:
  5115  0014E4  5008               	movf	(___fladd@a+3)^0,w,c
  5116  0014E6  0B80               	andlw	128
  5117  0014E8  6E0E               	movwf	___fladd@aexp^0,c
  5118  0014EA  500D               	movf	___fladd@signs^0,w,c
  5119  0014EC  180E               	xorwf	___fladd@aexp^0,w,c
  5120  0014EE  B4D8               	btfsc	status,2,c
  5121  0014F0  EF7C  F00A         	goto	u2561
  5122  0014F4  EF7E  F00A         	goto	u2560
  5123  0014F8                     u2561:
  5124  0014F8  EF7F  F00A         	goto	l2643
  5125  0014FC                     u2560:
  5126  0014FC  8C0D               	bsf	___fladd@signs^0,6,c
  5127  0014FE                     l2643:
  5128  0014FE  5008               	movf	(___fladd@a+3)^0,w,c
  5129  001500  2408               	addwf	(___fladd@a+3)^0,w,c
  5130  001502  6E0E               	movwf	___fladd@aexp^0,c
  5131  001504  AE07               	btfss	(___fladd@a+2)^0,7,c
  5132  001506  EF87  F00A         	goto	u2571
  5133  00150A  EF89  F00A         	goto	u2570
  5134  00150E                     u2571:
  5135  00150E  EF8A  F00A         	goto	l2649
  5136  001512                     u2570:
  5137  001512  800E               	bsf	___fladd@aexp^0,0,c
  5138  001514                     l2649:
  5139  001514  500E               	movf	___fladd@aexp^0,w,c
  5140  001516  B4D8               	btfsc	status,2,c
  5141  001518  EF90  F00A         	goto	u2581
  5142  00151C  EF92  F00A         	goto	u2580
  5143  001520                     u2581:
  5144  001520  EFA7  F00A         	goto	l2659
  5145  001524                     u2580:
  5146  001524  280E               	incf	___fladd@aexp^0,w,c
  5147  001526  A4D8               	btfss	status,2,c
  5148  001528  EF98  F00A         	goto	u2591
  5149  00152C  EF9A  F00A         	goto	u2590
  5150  001530                     u2591:
  5151  001530  EFA2  F00A         	goto	l2655
  5152  001534                     u2590:
  5153  001534  0E00               	movlw	0
  5154  001536  6E05               	movwf	___fladd@a^0,c
  5155  001538  0E00               	movlw	0
  5156  00153A  6E06               	movwf	(___fladd@a+1)^0,c
  5157  00153C  0E00               	movlw	0
  5158  00153E  6E07               	movwf	(___fladd@a+2)^0,c
  5159  001540  0E00               	movlw	0
  5160  001542  6E08               	movwf	(___fladd@a+3)^0,c
  5161  001544                     l2655:
  5162  001544  8E07               	bsf	(___fladd@a+2)^0,7,c
  5163  001546  0E00               	movlw	0
  5164  001548  6E08               	movwf	(___fladd@a+3)^0,c
  5165  00154A  EFAF  F00A         	goto	l2661
  5166  00154E                     l2659:
  5167  00154E  0E00               	movlw	0
  5168  001550  6E05               	movwf	___fladd@a^0,c
  5169  001552  0E00               	movlw	0
  5170  001554  6E06               	movwf	(___fladd@a+1)^0,c
  5171  001556  0E00               	movlw	0
  5172  001558  6E07               	movwf	(___fladd@a+2)^0,c
  5173  00155A  0E00               	movlw	0
  5174  00155C  6E08               	movwf	(___fladd@a+3)^0,c
  5175  00155E                     l2661:
  5176  00155E  500F               	movf	___fladd@bexp^0,w,c
  5177  001560  5C0E               	subwf	___fladd@aexp^0,w,c
  5178  001562  B0D8               	btfsc	status,0,c
  5179  001564  EFB6  F00A         	goto	u2601
  5180  001568  EFB8  F00A         	goto	u2600
  5181  00156C                     u2601:
  5182  00156C  EFDF  F00A         	goto	l2697
  5183  001570                     u2600:
  5184  001570  AC0D               	btfss	___fladd@signs^0,6,c
  5185  001572  EFBD  F00A         	goto	u2611
  5186  001576  EFBF  F00A         	goto	u2610
  5187  00157A                     u2611:
  5188  00157A  EFC1  F00A         	goto	l2667
  5189  00157E                     u2610:
  5190  00157E  0E80               	movlw	128
  5191  001580  1A0D               	xorwf	___fladd@signs^0,f,c
  5192  001582                     l2667:
  5193  001582  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5194  001586  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5195  00158A  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5196  00158E  C001  F010         	movff	___fladd@b,___fladd@grs
  5197  001592  C005  F001         	movff	___fladd@a,___fladd@b
  5198  001596  C010  F005         	movff	___fladd@grs,___fladd@a
  5199  00159A  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5200  00159E  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5201  0015A2  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5202  0015A6  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5203  0015AA  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5204  0015AE  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5205  0015B2  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5206  0015B6  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5207  0015BA  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5208  0015BE                     l2697:
  5209  0015BE  0E00               	movlw	0
  5210  0015C0  6E10               	movwf	___fladd@grs^0,c
  5211  0015C2  500F               	movf	___fladd@bexp^0,w,c
  5212  0015C4  C00E  F009         	movff	___fladd@aexp,??___fladd
  5213  0015C8  6A0A               	clrf	(??___fladd+1)^0,c
  5214  0015CA  5E09               	subwf	??___fladd^0,f,c
  5215  0015CC  0E00               	movlw	0
  5216  0015CE  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5217  0015D0  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5218  0015D2  EFF4  F00A         	goto	u2621
  5219  0015D6  500A               	movf	(??___fladd+1)^0,w,c
  5220  0015D8  E109               	bnz	u2620
  5221  0015DA  0E1A               	movlw	26
  5222  0015DC  5C09               	subwf	??___fladd^0,w,c
  5223  0015DE  A0D8               	btfss	status,0,c
  5224  0015E0  EFF4  F00A         	goto	u2621
  5225  0015E4  EFF6  F00A         	goto	u2620
  5226  0015E8                     u2621:
  5227  0015E8  EF2D  F00B         	goto	l614
  5228  0015EC                     u2620:
  5229  0015EC  5001               	movf	___fladd@b^0,w,c
  5230  0015EE  1002               	iorwf	(___fladd@b+1)^0,w,c
  5231  0015F0  1003               	iorwf	(___fladd@b+2)^0,w,c
  5232  0015F2  1004               	iorwf	(___fladd@b+3)^0,w,c
  5233  0015F4  A4D8               	btfss	status,2,c
  5234  0015F6  EFFF  F00A         	goto	u2631
  5235  0015FA  EF02  F00B         	goto	u2630
  5236  0015FE                     u2631:
  5237  0015FE  0E01               	movlw	1
  5238  001600  EF03  F00B         	goto	u2640
  5239  001604                     u2630:
  5240  001604  0E00               	movlw	0
  5241  001606                     u2640:
  5242  001606  6E10               	movwf	___fladd@grs^0,c
  5243  001608  0E00               	movlw	0
  5244  00160A  6E01               	movwf	___fladd@b^0,c
  5245  00160C  0E00               	movlw	0
  5246  00160E  6E02               	movwf	(___fladd@b+1)^0,c
  5247  001610  0E00               	movlw	0
  5248  001612  6E03               	movwf	(___fladd@b+2)^0,c
  5249  001614  0E00               	movlw	0
  5250  001616  6E04               	movwf	(___fladd@b+3)^0,c
  5251  001618  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5252  00161C  EF36  F00B         	goto	l613
  5253  001620                     l615:
  5254  001620  A010               	btfss	___fladd@grs^0,0,c
  5255  001622  EF15  F00B         	goto	u2651
  5256  001626  EF17  F00B         	goto	u2650
  5257  00162A                     u2651:
  5258  00162A  EF1D  F00B         	goto	l2709
  5259  00162E                     u2650:
  5260  00162E  90D8               	bcf	status,0,c
  5261  001630  3010               	rrcf	___fladd@grs^0,w,c
  5262  001632  0901               	iorlw	1
  5263  001634  6E10               	movwf	___fladd@grs^0,c
  5264  001636  EF1F  F00B         	goto	l2711
  5265  00163A                     l2709:
  5266  00163A  90D8               	bcf	status,0,c
  5267  00163C  3210               	rrcf	___fladd@grs^0,f,c
  5268  00163E                     l2711:
  5269  00163E  A001               	btfss	___fladd@b^0,0,c
  5270  001640  EF24  F00B         	goto	u2661
  5271  001644  EF26  F00B         	goto	u2660
  5272  001648                     u2661:
  5273  001648  EF27  F00B         	goto	l2715
  5274  00164C                     u2660:
  5275  00164C  8E10               	bsf	___fladd@grs^0,7,c
  5276  00164E                     l2715:
  5277  00164E  3404               	rlcf	(___fladd@b+3)^0,w,c
  5278  001650  3204               	rrcf	(___fladd@b+3)^0,f,c
  5279  001652  3203               	rrcf	(___fladd@b+2)^0,f,c
  5280  001654  3202               	rrcf	(___fladd@b+1)^0,f,c
  5281  001656  3201               	rrcf	___fladd@b^0,f,c
  5282  001658  2A0F               	incf	___fladd@bexp^0,f,c
  5283  00165A                     l614:
  5284  00165A  500E               	movf	___fladd@aexp^0,w,c
  5285  00165C  5C0F               	subwf	___fladd@bexp^0,w,c
  5286  00165E  A0D8               	btfss	status,0,c
  5287  001660  EF34  F00B         	goto	u2671
  5288  001664  EF36  F00B         	goto	u2670
  5289  001668                     u2671:
  5290  001668  EF10  F00B         	goto	l615
  5291  00166C                     u2670:
  5292  00166C                     l613:
  5293  00166C  BC0D               	btfsc	___fladd@signs^0,6,c
  5294  00166E  EF3B  F00B         	goto	u2681
  5295  001672  EF3D  F00B         	goto	u2680
  5296  001676                     u2681:
  5297  001676  EF7D  F00B         	goto	l2743
  5298  00167A                     u2680:
  5299  00167A  500F               	movf	___fladd@bexp^0,w,c
  5300  00167C  A4D8               	btfss	status,2,c
  5301  00167E  EF43  F00B         	goto	u2691
  5302  001682  EF45  F00B         	goto	u2690
  5303  001686                     u2691:
  5304  001686  EF4F  F00B         	goto	l2725
  5305  00168A                     u2690:
  5306  00168A  0E00               	movlw	0
  5307  00168C  6E01               	movwf	?___fladd^0,c
  5308  00168E  0E00               	movlw	0
  5309  001690  6E02               	movwf	(?___fladd+1)^0,c
  5310  001692  0E00               	movlw	0
  5311  001694  6E03               	movwf	(?___fladd+2)^0,c
  5312  001696  0E00               	movlw	0
  5313  001698  6E04               	movwf	(?___fladd+3)^0,c
  5314  00169A  EF9E  F00C         	goto	l622
  5315  00169E                     l2725:
  5316  00169E  5005               	movf	___fladd@a^0,w,c
  5317  0016A0  2601               	addwf	___fladd@b^0,f,c
  5318  0016A2  5006               	movf	(___fladd@a+1)^0,w,c
  5319  0016A4  2202               	addwfc	(___fladd@b+1)^0,f,c
  5320  0016A6  5007               	movf	(___fladd@a+2)^0,w,c
  5321  0016A8  2203               	addwfc	(___fladd@b+2)^0,f,c
  5322  0016AA  5008               	movf	(___fladd@a+3)^0,w,c
  5323  0016AC  2204               	addwfc	(___fladd@b+3)^0,f,c
  5324  0016AE  A004               	btfss	(___fladd@b+3)^0,0,c
  5325  0016B0  EF5C  F00B         	goto	u2701
  5326  0016B4  EF5E  F00B         	goto	u2700
  5327  0016B8                     u2701:
  5328  0016B8  EF0A  F00C         	goto	l2779
  5329  0016BC                     u2700:
  5330  0016BC  A010               	btfss	___fladd@grs^0,0,c
  5331  0016BE  EF63  F00B         	goto	u2711
  5332  0016C2  EF65  F00B         	goto	u2710
  5333  0016C6                     u2711:
  5334  0016C6  EF6B  F00B         	goto	l2733
  5335  0016CA                     u2710:
  5336  0016CA  90D8               	bcf	status,0,c
  5337  0016CC  3010               	rrcf	___fladd@grs^0,w,c
  5338  0016CE  0901               	iorlw	1
  5339  0016D0  6E10               	movwf	___fladd@grs^0,c
  5340  0016D2  EF6D  F00B         	goto	l2735
  5341  0016D6                     l2733:
  5342  0016D6  90D8               	bcf	status,0,c
  5343  0016D8  3210               	rrcf	___fladd@grs^0,f,c
  5344  0016DA                     l2735:
  5345  0016DA  A001               	btfss	___fladd@b^0,0,c
  5346  0016DC  EF72  F00B         	goto	u2721
  5347  0016E0  EF74  F00B         	goto	u2720
  5348  0016E4                     u2721:
  5349  0016E4  EF75  F00B         	goto	l2739
  5350  0016E8                     u2720:
  5351  0016E8  8E10               	bsf	___fladd@grs^0,7,c
  5352  0016EA                     l2739:
  5353  0016EA  3404               	rlcf	(___fladd@b+3)^0,w,c
  5354  0016EC  3204               	rrcf	(___fladd@b+3)^0,f,c
  5355  0016EE  3203               	rrcf	(___fladd@b+2)^0,f,c
  5356  0016F0  3202               	rrcf	(___fladd@b+1)^0,f,c
  5357  0016F2  3201               	rrcf	___fladd@b^0,f,c
  5358  0016F4  2A0F               	incf	___fladd@bexp^0,f,c
  5359  0016F6  EF0A  F00C         	goto	l2779
  5360  0016FA                     l2743:
  5361  0016FA  5005               	movf	___fladd@a^0,w,c
  5362  0016FC  5C01               	subwf	___fladd@b^0,w,c
  5363  0016FE  5006               	movf	(___fladd@a+1)^0,w,c
  5364  001700  5802               	subwfb	(___fladd@b+1)^0,w,c
  5365  001702  5007               	movf	(___fladd@a+2)^0,w,c
  5366  001704  5803               	subwfb	(___fladd@b+2)^0,w,c
  5367  001706  5004               	movf	(___fladd@b+3)^0,w,c
  5368  001708  0A80               	xorlw	128
  5369  00170A  6E09               	movwf	??___fladd^0,c
  5370  00170C  5008               	movf	(___fladd@a+3)^0,w,c
  5371  00170E  0A80               	xorlw	128
  5372  001710  5809               	subwfb	??___fladd^0,w,c
  5373  001712  B0D8               	btfsc	status,0,c
  5374  001714  EF8E  F00B         	goto	u2731
  5375  001718  EF90  F00B         	goto	u2730
  5376  00171C                     u2731:
  5377  00171C  EFBB  F00B         	goto	l2753
  5378  001720                     u2730:
  5379  001720  5001               	movf	___fladd@b^0,w,c
  5380  001722  5C05               	subwf	___fladd@a^0,w,c
  5381  001724  6E09               	movwf	??___fladd^0,c
  5382  001726  5002               	movf	(___fladd@b+1)^0,w,c
  5383  001728  5806               	subwfb	(___fladd@a+1)^0,w,c
  5384  00172A  6E0A               	movwf	(??___fladd+1)^0,c
  5385  00172C  5003               	movf	(___fladd@b+2)^0,w,c
  5386  00172E  5807               	subwfb	(___fladd@a+2)^0,w,c
  5387  001730  6E0B               	movwf	(??___fladd+2)^0,c
  5388  001732  5004               	movf	(___fladd@b+3)^0,w,c
  5389  001734  5808               	subwfb	(___fladd@a+3)^0,w,c
  5390  001736  6E0C               	movwf	(??___fladd+3)^0,c
  5391  001738  0EFF               	movlw	255
  5392  00173A  2409               	addwf	??___fladd^0,w,c
  5393  00173C  6E01               	movwf	___fladd@b^0,c
  5394  00173E  0EFF               	movlw	255
  5395  001740  200A               	addwfc	(??___fladd+1)^0,w,c
  5396  001742  6E02               	movwf	(___fladd@b+1)^0,c
  5397  001744  0EFF               	movlw	255
  5398  001746  200B               	addwfc	(??___fladd+2)^0,w,c
  5399  001748  6E03               	movwf	(___fladd@b+2)^0,c
  5400  00174A  0EFF               	movlw	255
  5401  00174C  200C               	addwfc	(??___fladd+3)^0,w,c
  5402  00174E  6E04               	movwf	(___fladd@b+3)^0,c
  5403  001750  0E80               	movlw	128
  5404  001752  1A0D               	xorwf	___fladd@signs^0,f,c
  5405  001754  6C10               	negf	___fladd@grs^0,c
  5406  001756  5010               	movf	___fladd@grs^0,w,c
  5407  001758  A4D8               	btfss	status,2,c
  5408  00175A  EFB1  F00B         	goto	u2741
  5409  00175E  EFB3  F00B         	goto	u2740
  5410  001762                     u2741:
  5411  001762  EFC3  F00B         	goto	l630
  5412  001766                     u2740:
  5413  001766  0E01               	movlw	1
  5414  001768  2601               	addwf	___fladd@b^0,f,c
  5415  00176A  0E00               	movlw	0
  5416  00176C  2202               	addwfc	(___fladd@b+1)^0,f,c
  5417  00176E  2203               	addwfc	(___fladd@b+2)^0,f,c
  5418  001770  2204               	addwfc	(___fladd@b+3)^0,f,c
  5419  001772  EFC3  F00B         	goto	l630
  5420  001776                     l2753:
  5421  001776  5005               	movf	___fladd@a^0,w,c
  5422  001778  5E01               	subwf	___fladd@b^0,f,c
  5423  00177A  5006               	movf	(___fladd@a+1)^0,w,c
  5424  00177C  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5425  00177E  5007               	movf	(___fladd@a+2)^0,w,c
  5426  001780  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5427  001782  5008               	movf	(___fladd@a+3)^0,w,c
  5428  001784  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5429  001786                     l630:
  5430  001786  5001               	movf	___fladd@b^0,w,c
  5431  001788  1002               	iorwf	(___fladd@b+1)^0,w,c
  5432  00178A  1003               	iorwf	(___fladd@b+2)^0,w,c
  5433  00178C  1004               	iorwf	(___fladd@b+3)^0,w,c
  5434  00178E  A4D8               	btfss	status,2,c
  5435  001790  EFCC  F00B         	goto	u2751
  5436  001794  EFCE  F00B         	goto	u2750
  5437  001798                     u2751:
  5438  001798  EF03  F00C         	goto	l2777
  5439  00179C                     u2750:
  5440  00179C  5010               	movf	___fladd@grs^0,w,c
  5441  00179E  A4D8               	btfss	status,2,c
  5442  0017A0  EFD4  F00B         	goto	u2761
  5443  0017A4  EFD6  F00B         	goto	u2760
  5444  0017A8                     u2761:
  5445  0017A8  EF03  F00C         	goto	l2777
  5446  0017AC                     u2760:
  5447  0017AC  0E00               	movlw	0
  5448  0017AE  6E01               	movwf	?___fladd^0,c
  5449  0017B0  0E00               	movlw	0
  5450  0017B2  6E02               	movwf	(?___fladd+1)^0,c
  5451  0017B4  0E00               	movlw	0
  5452  0017B6  6E03               	movwf	(?___fladd+2)^0,c
  5453  0017B8  0E00               	movlw	0
  5454  0017BA  6E04               	movwf	(?___fladd+3)^0,c
  5455  0017BC  EF9E  F00C         	goto	l622
  5456  0017C0                     l2761:
  5457  0017C0  90D8               	bcf	status,0,c
  5458  0017C2  3601               	rlcf	___fladd@b^0,f,c
  5459  0017C4  3602               	rlcf	(___fladd@b+1)^0,f,c
  5460  0017C6  3603               	rlcf	(___fladd@b+2)^0,f,c
  5461  0017C8  3604               	rlcf	(___fladd@b+3)^0,f,c
  5462  0017CA  AE10               	btfss	___fladd@grs^0,7,c
  5463  0017CC  EFEA  F00B         	goto	u2771
  5464  0017D0  EFEC  F00B         	goto	u2770
  5465  0017D4                     u2771:
  5466  0017D4  EFED  F00B         	goto	l2767
  5467  0017D8                     u2770:
  5468  0017D8  8001               	bsf	___fladd@b^0,0,c
  5469  0017DA                     l2767:
  5470  0017DA  A010               	btfss	___fladd@grs^0,0,c
  5471  0017DC  EFF2  F00B         	goto	u2781
  5472  0017E0  EFF4  F00B         	goto	u2780
  5473  0017E4                     u2781:
  5474  0017E4  EFF8  F00B         	goto	l2771
  5475  0017E8                     u2780:
  5476  0017E8  80D8               	bsf	status,0,c
  5477  0017EA  3610               	rlcf	___fladd@grs^0,f,c
  5478  0017EC  EFFA  F00B         	goto	l2773
  5479  0017F0                     l2771:
  5480  0017F0  90D8               	bcf	status,0,c
  5481  0017F2  3610               	rlcf	___fladd@grs^0,f,c
  5482  0017F4                     l2773:
  5483  0017F4  500F               	movf	___fladd@bexp^0,w,c
  5484  0017F6  B4D8               	btfsc	status,2,c
  5485  0017F8  EF00  F00C         	goto	u2791
  5486  0017FC  EF02  F00C         	goto	u2790
  5487  001800                     u2791:
  5488  001800  EF03  F00C         	goto	l2777
  5489  001804                     u2790:
  5490  001804  060F               	decf	___fladd@bexp^0,f,c
  5491  001806                     l2777:
  5492  001806  AE03               	btfss	(___fladd@b+2)^0,7,c
  5493  001808  EF08  F00C         	goto	u2801
  5494  00180C  EF0A  F00C         	goto	u2800
  5495  001810                     u2801:
  5496  001810  EFE0  F00B         	goto	l2761
  5497  001814                     u2800:
  5498  001814                     l2779:
  5499  001814  0E00               	movlw	0
  5500  001816  6E0E               	movwf	___fladd@aexp^0,c
  5501  001818  AE10               	btfss	___fladd@grs^0,7,c
  5502  00181A  EF11  F00C         	goto	u2811
  5503  00181E  EF13  F00C         	goto	u2810
  5504  001822                     u2811:
  5505  001822  EF2B  F00C         	goto	l639
  5506  001826                     u2810:
  5507  001826  C010  F009         	movff	___fladd@grs,??___fladd
  5508  00182A  0E7F               	movlw	127
  5509  00182C  1609               	andwf	??___fladd^0,f,c
  5510  00182E  B4D8               	btfsc	status,2,c
  5511  001830  EF1C  F00C         	goto	u2821
  5512  001834  EF1E  F00C         	goto	u2820
  5513  001838                     u2821:
  5514  001838  EF22  F00C         	goto	l640
  5515  00183C                     u2820:
  5516  00183C                     l2785:
  5517  00183C  0E01               	movlw	1
  5518  00183E  6E0E               	movwf	___fladd@aexp^0,c
  5519  001840  EF2B  F00C         	goto	l639
  5520  001844                     l640:
  5521  001844  A001               	btfss	___fladd@b^0,0,c
  5522  001846  EF27  F00C         	goto	u2831
  5523  00184A  EF29  F00C         	goto	u2830
  5524  00184E                     u2831:
  5525  00184E  EF2B  F00C         	goto	l639
  5526  001852                     u2830:
  5527  001852  EF1E  F00C         	goto	l2785
  5528  001856                     l639:
  5529  001856  500E               	movf	___fladd@aexp^0,w,c
  5530  001858  B4D8               	btfsc	status,2,c
  5531  00185A  EF31  F00C         	goto	u2841
  5532  00185E  EF33  F00C         	goto	u2840
  5533  001862                     u2841:
  5534  001862  EF5E  F00C         	goto	l2797
  5535  001866                     u2840:
  5536  001866  0E01               	movlw	1
  5537  001868  2601               	addwf	___fladd@b^0,f,c
  5538  00186A  0E00               	movlw	0
  5539  00186C  2202               	addwfc	(___fladd@b+1)^0,f,c
  5540  00186E  2203               	addwfc	(___fladd@b+2)^0,f,c
  5541  001870  2204               	addwfc	(___fladd@b+3)^0,f,c
  5542  001872  A004               	btfss	(___fladd@b+3)^0,0,c
  5543  001874  EF3E  F00C         	goto	u2851
  5544  001878  EF40  F00C         	goto	u2850
  5545  00187C                     u2851:
  5546  00187C  EF5E  F00C         	goto	l2797
  5547  001880                     u2850:
  5548  001880  C001  F009         	movff	___fladd@b,??___fladd
  5549  001884  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5550  001888  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5551  00188C  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5552  001890  340C               	rlcf	(??___fladd+3)^0,w,c
  5553  001892  320C               	rrcf	(??___fladd+3)^0,f,c
  5554  001894  320B               	rrcf	(??___fladd+2)^0,f,c
  5555  001896  320A               	rrcf	(??___fladd+1)^0,f,c
  5556  001898  3209               	rrcf	??___fladd^0,f,c
  5557  00189A  C009  F001         	movff	??___fladd,___fladd@b
  5558  00189E  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5559  0018A2  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5560  0018A6  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5561  0018AA  280F               	incf	___fladd@bexp^0,w,c
  5562  0018AC  B4D8               	btfsc	status,2,c
  5563  0018AE  EF5B  F00C         	goto	u2861
  5564  0018B2  EF5D  F00C         	goto	u2860
  5565  0018B6                     u2861:
  5566  0018B6  EF5E  F00C         	goto	l2797
  5567  0018BA                     u2860:
  5568  0018BA  2A0F               	incf	___fladd@bexp^0,f,c
  5569  0018BC                     l2797:
  5570  0018BC  280F               	incf	___fladd@bexp^0,w,c
  5571  0018BE  B4D8               	btfsc	status,2,c
  5572  0018C0  EF64  F00C         	goto	u2871
  5573  0018C4  EF66  F00C         	goto	u2870
  5574  0018C8                     u2871:
  5575  0018C8  EF6E  F00C         	goto	l2801
  5576  0018CC                     u2870:
  5577  0018CC  500F               	movf	___fladd@bexp^0,w,c
  5578  0018CE  A4D8               	btfss	status,2,c
  5579  0018D0  EF6C  F00C         	goto	u2881
  5580  0018D4  EF6E  F00C         	goto	u2880
  5581  0018D8                     u2881:
  5582  0018D8  EF80  F00C         	goto	l2805
  5583  0018DC                     u2880:
  5584  0018DC                     l2801:
  5585  0018DC  0E00               	movlw	0
  5586  0018DE  6E01               	movwf	___fladd@b^0,c
  5587  0018E0  0E00               	movlw	0
  5588  0018E2  6E02               	movwf	(___fladd@b+1)^0,c
  5589  0018E4  0E00               	movlw	0
  5590  0018E6  6E03               	movwf	(___fladd@b+2)^0,c
  5591  0018E8  0E00               	movlw	0
  5592  0018EA  6E04               	movwf	(___fladd@b+3)^0,c
  5593  0018EC  500F               	movf	___fladd@bexp^0,w,c
  5594  0018EE  A4D8               	btfss	status,2,c
  5595  0018F0  EF7C  F00C         	goto	u2891
  5596  0018F4  EF7E  F00C         	goto	u2890
  5597  0018F8                     u2891:
  5598  0018F8  EF80  F00C         	goto	l2805
  5599  0018FC                     u2890:
  5600  0018FC  0E00               	movlw	0
  5601  0018FE  6E0D               	movwf	___fladd@signs^0,c
  5602  001900                     l2805:
  5603  001900  A00F               	btfss	___fladd@bexp^0,0,c
  5604  001902  EF85  F00C         	goto	u2901
  5605  001906  EF87  F00C         	goto	u2900
  5606  00190A                     u2901:
  5607  00190A  EF8A  F00C         	goto	l2809
  5608  00190E                     u2900:
  5609  00190E  8E03               	bsf	(___fladd@b+2)^0,7,c
  5610  001910  EF8B  F00C         	goto	l2811
  5611  001914                     l2809:
  5612  001914  9E03               	bcf	(___fladd@b+2)^0,7,c
  5613  001916                     l2811:
  5614  001916  90D8               	bcf	status,0,c
  5615  001918  300F               	rrcf	___fladd@bexp^0,w,c
  5616  00191A  6E04               	movwf	(___fladd@b+3)^0,c
  5617  00191C  AE0D               	btfss	___fladd@signs^0,7,c
  5618  00191E  EF93  F00C         	goto	u2911
  5619  001922  EF95  F00C         	goto	u2910
  5620  001926                     u2911:
  5621  001926  EF96  F00C         	goto	l2817
  5622  00192A                     u2910:
  5623  00192A  8E04               	bsf	(___fladd@b+3)^0,7,c
  5624  00192C                     l2817:
  5625  00192C  C001  F001         	movff	___fladd@b,?___fladd
  5626  001930  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5627  001934  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5628  001938  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5629  00193C                     l622:
  5630  00193C  0012               	return		;funcret
  5631  00193E                     __end_of___fladd:
  5632                           	callstack 0
  5633                           
  5634 ;; *************** function ___flneg *****************
  5635 ;; Defined at:
  5636 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\flneg.c"
  5637 ;; Parameters:    Size  Location     Type
  5638 ;;  f1              4    0[COMRAM] unsigned char 
  5639 ;; Auto vars:     Size  Location     Type
  5640 ;;		None
  5641 ;; Return value:  Size  Location     Type
  5642 ;;                  4    0[COMRAM] unsigned char 
  5643 ;; Registers used:
  5644 ;;		wreg, status,2, status,0
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5650 ;;      Params:         4       0       0       0       0       0       0       0       0
  5651 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5652 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5653 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5654 ;;Total ram usage:        4 bytes
  5655 ;; Hardware stack levels used:    1
  5656 ;; This function calls:
  5657 ;;		Nothing
  5658 ;; This function is called by:
  5659 ;;		_efgtoa
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           	psect	text19
  5664  0039DA                     __ptext19:
  5665                           	callstack 0
  5666  0039DA                     ___flneg:
  5667                           	callstack 26
  5668  0039DA  5001               	movf	___flneg@f1^0,w,c
  5669  0039DC  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5670  0039DE  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5671  0039E0  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5672  0039E2  B4D8               	btfsc	status,2,c
  5673  0039E4  EFF6  F01C         	goto	u3581
  5674  0039E8  EFF8  F01C         	goto	u3580
  5675  0039EC                     u3581:
  5676  0039EC  EF00  F01D         	goto	l3245
  5677  0039F0                     u3580:
  5678  0039F0  0E00               	movlw	0
  5679  0039F2  1A01               	xorwf	___flneg@f1^0,f,c
  5680  0039F4  0E00               	movlw	0
  5681  0039F6  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5682  0039F8  0E00               	movlw	0
  5683  0039FA  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5684  0039FC  0E80               	movlw	128
  5685  0039FE  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5686  003A00                     l3245:
  5687  003A00  C001  F001         	movff	___flneg@f1,?___flneg
  5688  003A04  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5689  003A08  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5690  003A0C  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5691  003A10  0012               	return		;funcret
  5692  003A12                     __end_of___flneg:
  5693                           	callstack 0
  5694                           
  5695 ;; *************** function ___flmul *****************
  5696 ;; Defined at:
  5697 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcmul.c"
  5698 ;; Parameters:    Size  Location     Type
  5699 ;;  b               4    0[COMRAM] unsigned char 
  5700 ;;  a               4    4[COMRAM] unsigned char 
  5701 ;; Auto vars:     Size  Location     Type
  5702 ;;  prod            4   19[COMRAM] struct .
  5703 ;;  grs             4   13[COMRAM] unsigned long 
  5704 ;;  temp            2   23[COMRAM] struct .
  5705 ;;  bexp            1   18[COMRAM] unsigned char 
  5706 ;;  aexp            1   17[COMRAM] unsigned char 
  5707 ;;  sign            1   12[COMRAM] unsigned char 
  5708 ;; Return value:  Size  Location     Type
  5709 ;;                  4    0[COMRAM] unsigned char 
  5710 ;; Registers used:
  5711 ;;		wreg, status,2, status,0, prodl, prodh
  5712 ;; Tracked objects:
  5713 ;;		On entry : 0/0
  5714 ;;		On exit  : 0/0
  5715 ;;		Unchanged: 0/0
  5716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5717 ;;      Params:         8       0       0       0       0       0       0       0       0
  5718 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5719 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5720 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5721 ;;Total ram usage:       25 bytes
  5722 ;; Hardware stack levels used:    1
  5723 ;; This function calls:
  5724 ;;		Nothing
  5725 ;; This function is called by:
  5726 ;;		_efgtoa
  5727 ;; This function uses a non-reentrant model
  5728 ;;
  5729                           
  5730                           	psect	text20
  5731  001DA8                     __ptext20:
  5732                           	callstack 0
  5733  001DA8                     ___flmul:
  5734                           	callstack 26
  5735  001DA8  5004               	movf	(___flmul@b+3)^0,w,c
  5736  001DAA  0B80               	andlw	128
  5737  001DAC  6E0D               	movwf	___flmul@sign^0,c
  5738  001DAE  5004               	movf	(___flmul@b+3)^0,w,c
  5739  001DB0  2404               	addwf	(___flmul@b+3)^0,w,c
  5740  001DB2  6E13               	movwf	___flmul@bexp^0,c
  5741  001DB4  AE03               	btfss	(___flmul@b+2)^0,7,c
  5742  001DB6  EFDF  F00E         	goto	u3191
  5743  001DBA  EFE1  F00E         	goto	u3190
  5744  001DBE                     u3191:
  5745  001DBE  EFE2  F00E         	goto	l2993
  5746  001DC2                     u3190:
  5747  001DC2  8013               	bsf	___flmul@bexp^0,0,c
  5748  001DC4                     l2993:
  5749  001DC4  5013               	movf	___flmul@bexp^0,w,c
  5750  001DC6  B4D8               	btfsc	status,2,c
  5751  001DC8  EFE8  F00E         	goto	u3201
  5752  001DCC  EFEA  F00E         	goto	u3200
  5753  001DD0                     u3201:
  5754  001DD0  EFFD  F00E         	goto	l3001
  5755  001DD4                     u3200:
  5756  001DD4  2813               	incf	___flmul@bexp^0,w,c
  5757  001DD6  A4D8               	btfss	status,2,c
  5758  001DD8  EFF0  F00E         	goto	u3211
  5759  001DDC  EFF2  F00E         	goto	u3210
  5760  001DE0                     u3211:
  5761  001DE0  EFFA  F00E         	goto	l2999
  5762  001DE4                     u3210:
  5763  001DE4  0E00               	movlw	0
  5764  001DE6  6E01               	movwf	___flmul@b^0,c
  5765  001DE8  0E00               	movlw	0
  5766  001DEA  6E02               	movwf	(___flmul@b+1)^0,c
  5767  001DEC  0E00               	movlw	0
  5768  001DEE  6E03               	movwf	(___flmul@b+2)^0,c
  5769  001DF0  0E00               	movlw	0
  5770  001DF2  6E04               	movwf	(___flmul@b+3)^0,c
  5771  001DF4                     l2999:
  5772  001DF4  8E03               	bsf	(___flmul@b+2)^0,7,c
  5773  001DF6  EF05  F00F         	goto	l3003
  5774  001DFA                     l3001:
  5775  001DFA  0E00               	movlw	0
  5776  001DFC  6E01               	movwf	___flmul@b^0,c
  5777  001DFE  0E00               	movlw	0
  5778  001E00  6E02               	movwf	(___flmul@b+1)^0,c
  5779  001E02  0E00               	movlw	0
  5780  001E04  6E03               	movwf	(___flmul@b+2)^0,c
  5781  001E06  0E00               	movlw	0
  5782  001E08  6E04               	movwf	(___flmul@b+3)^0,c
  5783  001E0A                     l3003:
  5784  001E0A  5008               	movf	(___flmul@a+3)^0,w,c
  5785  001E0C  0B80               	andlw	128
  5786  001E0E  1A0D               	xorwf	___flmul@sign^0,f,c
  5787  001E10  5008               	movf	(___flmul@a+3)^0,w,c
  5788  001E12  2408               	addwf	(___flmul@a+3)^0,w,c
  5789  001E14  6E12               	movwf	___flmul@aexp^0,c
  5790  001E16  AE07               	btfss	(___flmul@a+2)^0,7,c
  5791  001E18  EF10  F00F         	goto	u3221
  5792  001E1C  EF12  F00F         	goto	u3220
  5793  001E20                     u3221:
  5794  001E20  EF13  F00F         	goto	l3011
  5795  001E24                     u3220:
  5796  001E24  8012               	bsf	___flmul@aexp^0,0,c
  5797  001E26                     l3011:
  5798  001E26  5012               	movf	___flmul@aexp^0,w,c
  5799  001E28  B4D8               	btfsc	status,2,c
  5800  001E2A  EF19  F00F         	goto	u3231
  5801  001E2E  EF1B  F00F         	goto	u3230
  5802  001E32                     u3231:
  5803  001E32  EF2E  F00F         	goto	l3019
  5804  001E36                     u3230:
  5805  001E36  2812               	incf	___flmul@aexp^0,w,c
  5806  001E38  A4D8               	btfss	status,2,c
  5807  001E3A  EF21  F00F         	goto	u3241
  5808  001E3E  EF23  F00F         	goto	u3240
  5809  001E42                     u3241:
  5810  001E42  EF2B  F00F         	goto	l3017
  5811  001E46                     u3240:
  5812  001E46  0E00               	movlw	0
  5813  001E48  6E05               	movwf	___flmul@a^0,c
  5814  001E4A  0E00               	movlw	0
  5815  001E4C  6E06               	movwf	(___flmul@a+1)^0,c
  5816  001E4E  0E00               	movlw	0
  5817  001E50  6E07               	movwf	(___flmul@a+2)^0,c
  5818  001E52  0E00               	movlw	0
  5819  001E54  6E08               	movwf	(___flmul@a+3)^0,c
  5820  001E56                     l3017:
  5821  001E56  8E07               	bsf	(___flmul@a+2)^0,7,c
  5822  001E58  EF36  F00F         	goto	l699
  5823  001E5C                     l3019:
  5824  001E5C  0E00               	movlw	0
  5825  001E5E  6E05               	movwf	___flmul@a^0,c
  5826  001E60  0E00               	movlw	0
  5827  001E62  6E06               	movwf	(___flmul@a+1)^0,c
  5828  001E64  0E00               	movlw	0
  5829  001E66  6E07               	movwf	(___flmul@a+2)^0,c
  5830  001E68  0E00               	movlw	0
  5831  001E6A  6E08               	movwf	(___flmul@a+3)^0,c
  5832  001E6C                     l699:
  5833  001E6C  5012               	movf	___flmul@aexp^0,w,c
  5834  001E6E  B4D8               	btfsc	status,2,c
  5835  001E70  EF3C  F00F         	goto	u3251
  5836  001E74  EF3E  F00F         	goto	u3250
  5837  001E78                     u3251:
  5838  001E78  EF46  F00F         	goto	l3023
  5839  001E7C                     u3250:
  5840  001E7C  5013               	movf	___flmul@bexp^0,w,c
  5841  001E7E  A4D8               	btfss	status,2,c
  5842  001E80  EF44  F00F         	goto	u3261
  5843  001E84  EF46  F00F         	goto	u3260
  5844  001E88                     u3261:
  5845  001E88  EF50  F00F         	goto	l3027
  5846  001E8C                     u3260:
  5847  001E8C                     l3023:
  5848  001E8C  0E00               	movlw	0
  5849  001E8E  6E01               	movwf	?___flmul^0,c
  5850  001E90  0E00               	movlw	0
  5851  001E92  6E02               	movwf	(?___flmul+1)^0,c
  5852  001E94  0E00               	movlw	0
  5853  001E96  6E03               	movwf	(?___flmul+2)^0,c
  5854  001E98  0E00               	movlw	0
  5855  001E9A  6E04               	movwf	(?___flmul+3)^0,c
  5856  001E9C  EFE8  F010         	goto	l703
  5857  001EA0                     l3027:
  5858  001EA0  5007               	movf	(___flmul@a+2)^0,w,c
  5859  001EA2  0201               	mulwf	___flmul@b^0,c
  5860  001EA4  CFF3 F018          	movff	prodl,___flmul@temp
  5861  001EA8  CFF4 F019          	movff	prodh,___flmul@temp+1
  5862  001EAC  5018               	movf	___flmul@temp^0,w,c
  5863  001EAE  6E0E               	movwf	___flmul@grs^0,c
  5864  001EB0  6A0F               	clrf	(___flmul@grs+1)^0,c
  5865  001EB2  6A10               	clrf	(___flmul@grs+2)^0,c
  5866  001EB4  6A11               	clrf	(___flmul@grs+3)^0,c
  5867  001EB6  5019               	movf	(___flmul@temp+1)^0,w,c
  5868  001EB8  6E14               	movwf	___flmul@prod^0,c
  5869  001EBA  6A15               	clrf	(___flmul@prod+1)^0,c
  5870  001EBC  6A16               	clrf	(___flmul@prod+2)^0,c
  5871  001EBE  6A17               	clrf	(___flmul@prod+3)^0,c
  5872  001EC0  5006               	movf	(___flmul@a+1)^0,w,c
  5873  001EC2  0202               	mulwf	(___flmul@b+1)^0,c
  5874  001EC4  CFF3 F018          	movff	prodl,___flmul@temp
  5875  001EC8  CFF4 F019          	movff	prodh,___flmul@temp+1
  5876  001ECC  5018               	movf	___flmul@temp^0,w,c
  5877  001ECE  260E               	addwf	___flmul@grs^0,f,c
  5878  001ED0  0E00               	movlw	0
  5879  001ED2  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5880  001ED4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5881  001ED6  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5882  001ED8  5019               	movf	(___flmul@temp+1)^0,w,c
  5883  001EDA  2614               	addwf	___flmul@prod^0,f,c
  5884  001EDC  0E00               	movlw	0
  5885  001EDE  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5886  001EE0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5887  001EE2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5888  001EE4  5005               	movf	___flmul@a^0,w,c
  5889  001EE6  0203               	mulwf	(___flmul@b+2)^0,c
  5890  001EE8  CFF3 F018          	movff	prodl,___flmul@temp
  5891  001EEC  CFF4 F019          	movff	prodh,___flmul@temp+1
  5892  001EF0  5018               	movf	___flmul@temp^0,w,c
  5893  001EF2  260E               	addwf	___flmul@grs^0,f,c
  5894  001EF4  0E00               	movlw	0
  5895  001EF6  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5896  001EF8  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5897  001EFA  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5898  001EFC  5019               	movf	(___flmul@temp+1)^0,w,c
  5899  001EFE  2614               	addwf	___flmul@prod^0,f,c
  5900  001F00  0E00               	movlw	0
  5901  001F02  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5902  001F04  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5903  001F06  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5904  001F08  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5905  001F0C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5906  001F10  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5907  001F14  6A0E               	clrf	___flmul@grs^0,c
  5908  001F16  5005               	movf	___flmul@a^0,w,c
  5909  001F18  0202               	mulwf	(___flmul@b+1)^0,c
  5910  001F1A  CFF3 F018          	movff	prodl,___flmul@temp
  5911  001F1E  CFF4 F019          	movff	prodh,___flmul@temp+1
  5912  001F22  5018               	movf	___flmul@temp^0,w,c
  5913  001F24  260E               	addwf	___flmul@grs^0,f,c
  5914  001F26  5019               	movf	(___flmul@temp+1)^0,w,c
  5915  001F28  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5916  001F2A  0E00               	movlw	0
  5917  001F2C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5918  001F2E  0E00               	movlw	0
  5919  001F30  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5920  001F32  5006               	movf	(___flmul@a+1)^0,w,c
  5921  001F34  0201               	mulwf	___flmul@b^0,c
  5922  001F36  CFF3 F018          	movff	prodl,___flmul@temp
  5923  001F3A  CFF4 F019          	movff	prodh,___flmul@temp+1
  5924  001F3E  5018               	movf	___flmul@temp^0,w,c
  5925  001F40  260E               	addwf	___flmul@grs^0,f,c
  5926  001F42  5019               	movf	(___flmul@temp+1)^0,w,c
  5927  001F44  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5928  001F46  0E00               	movlw	0
  5929  001F48  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5930  001F4A  0E00               	movlw	0
  5931  001F4C  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5932  001F4E  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5933  001F52  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5934  001F56  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5935  001F5A  6A0E               	clrf	___flmul@grs^0,c
  5936  001F5C  5005               	movf	___flmul@a^0,w,c
  5937  001F5E  0201               	mulwf	___flmul@b^0,c
  5938  001F60  CFF3 F018          	movff	prodl,___flmul@temp
  5939  001F64  CFF4 F019          	movff	prodh,___flmul@temp+1
  5940  001F68  5018               	movf	___flmul@temp^0,w,c
  5941  001F6A  260E               	addwf	___flmul@grs^0,f,c
  5942  001F6C  5019               	movf	(___flmul@temp+1)^0,w,c
  5943  001F6E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5944  001F70  0E00               	movlw	0
  5945  001F72  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5946  001F74  0E00               	movlw	0
  5947  001F76  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5948  001F78  5007               	movf	(___flmul@a+2)^0,w,c
  5949  001F7A  0202               	mulwf	(___flmul@b+1)^0,c
  5950  001F7C  CFF3 F018          	movff	prodl,___flmul@temp
  5951  001F80  CFF4 F019          	movff	prodh,___flmul@temp+1
  5952  001F84  5018               	movf	___flmul@temp^0,w,c
  5953  001F86  2614               	addwf	___flmul@prod^0,f,c
  5954  001F88  5019               	movf	(___flmul@temp+1)^0,w,c
  5955  001F8A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5956  001F8C  0E00               	movlw	0
  5957  001F8E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5958  001F90  0E00               	movlw	0
  5959  001F92  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5960  001F94  5006               	movf	(___flmul@a+1)^0,w,c
  5961  001F96  0203               	mulwf	(___flmul@b+2)^0,c
  5962  001F98  CFF3 F018          	movff	prodl,___flmul@temp
  5963  001F9C  CFF4 F019          	movff	prodh,___flmul@temp+1
  5964  001FA0  5018               	movf	___flmul@temp^0,w,c
  5965  001FA2  2614               	addwf	___flmul@prod^0,f,c
  5966  001FA4  5019               	movf	(___flmul@temp+1)^0,w,c
  5967  001FA6  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5968  001FA8  0E00               	movlw	0
  5969  001FAA  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5970  001FAC  0E00               	movlw	0
  5971  001FAE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5972  001FB0  5007               	movf	(___flmul@a+2)^0,w,c
  5973  001FB2  0203               	mulwf	(___flmul@b+2)^0,c
  5974  001FB4  CFF3 F018          	movff	prodl,___flmul@temp
  5975  001FB8  CFF4 F019          	movff	prodh,___flmul@temp+1
  5976  001FBC  5018               	movf	___flmul@temp^0,w,c
  5977  001FBE  6E09               	movwf	??___flmul^0,c
  5978  001FC0  5019               	movf	(___flmul@temp+1)^0,w,c
  5979  001FC2  6E0A               	movwf	(??___flmul+1)^0,c
  5980  001FC4  6A0B               	clrf	(??___flmul+2)^0,c
  5981  001FC6  6A0C               	clrf	(??___flmul+3)^0,c
  5982  001FC8  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  5983  001FCC  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  5984  001FD0  C009  F00A         	movff	??___flmul,??___flmul+1
  5985  001FD4  6A09               	clrf	??___flmul^0,c
  5986  001FD6  5009               	movf	??___flmul^0,w,c
  5987  001FD8  2614               	addwf	___flmul@prod^0,f,c
  5988  001FDA  500A               	movf	(??___flmul+1)^0,w,c
  5989  001FDC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5990  001FDE  500B               	movf	(??___flmul+2)^0,w,c
  5991  001FE0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5992  001FE2  500C               	movf	(??___flmul+3)^0,w,c
  5993  001FE4  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5994  001FE6  C00E  F009         	movff	___flmul@grs,??___flmul
  5995  001FEA  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  5996  001FEE  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  5997  001FF2  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  5998  001FF6  0E19               	movlw	25
  5999  001FF8  EF03  F010         	goto	u3270
  6000  001FFC                     u3275:
  6001  001FFC  90D8               	bcf	status,0,c
  6002  001FFE  320C               	rrcf	(??___flmul+3)^0,f,c
  6003  002000  320B               	rrcf	(??___flmul+2)^0,f,c
  6004  002002  320A               	rrcf	(??___flmul+1)^0,f,c
  6005  002004  3209               	rrcf	??___flmul^0,f,c
  6006  002006                     u3270:
  6007  002006  2EE8               	decfsz	wreg,f,c
  6008  002008  EFFE  F00F         	goto	u3275
  6009  00200C  5009               	movf	??___flmul^0,w,c
  6010  00200E  2614               	addwf	___flmul@prod^0,f,c
  6011  002010  500A               	movf	(??___flmul+1)^0,w,c
  6012  002012  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6013  002014  500B               	movf	(??___flmul+2)^0,w,c
  6014  002016  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6015  002018  500C               	movf	(??___flmul+3)^0,w,c
  6016  00201A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6017  00201C  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6018  002020  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6019  002024  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6020  002028  6A0E               	clrf	___flmul@grs^0,c
  6021  00202A  5012               	movf	___flmul@aexp^0,w,c
  6022  00202C  C013  F009         	movff	___flmul@bexp,??___flmul
  6023  002030  6A0A               	clrf	(??___flmul+1)^0,c
  6024  002032  2609               	addwf	??___flmul^0,f,c
  6025  002034  0E00               	movlw	0
  6026  002036  220A               	addwfc	(??___flmul+1)^0,f,c
  6027  002038  0E82               	movlw	130
  6028  00203A  2409               	addwf	??___flmul^0,w,c
  6029  00203C  6E18               	movwf	___flmul@temp^0,c
  6030  00203E  0EFF               	movlw	255
  6031  002040  200A               	addwfc	(??___flmul+1)^0,w,c
  6032  002042  6E19               	movwf	(___flmul@temp+1)^0,c
  6033  002044  EF39  F010         	goto	l3075
  6034  002048                     l3069:
  6035  002048  90D8               	bcf	status,0,c
  6036  00204A  3614               	rlcf	___flmul@prod^0,f,c
  6037  00204C  3615               	rlcf	(___flmul@prod+1)^0,f,c
  6038  00204E  3616               	rlcf	(___flmul@prod+2)^0,f,c
  6039  002050  3617               	rlcf	(___flmul@prod+3)^0,f,c
  6040  002052  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6041  002054  EF2E  F010         	goto	u3281
  6042  002058  EF30  F010         	goto	u3280
  6043  00205C                     u3281:
  6044  00205C  EF31  F010         	goto	l706
  6045  002060                     u3280:
  6046  002060  8014               	bsf	___flmul@prod^0,0,c
  6047  002062                     l706:
  6048  002062  90D8               	bcf	status,0,c
  6049  002064  360E               	rlcf	___flmul@grs^0,f,c
  6050  002066  360F               	rlcf	(___flmul@grs+1)^0,f,c
  6051  002068  3610               	rlcf	(___flmul@grs+2)^0,f,c
  6052  00206A  3611               	rlcf	(___flmul@grs+3)^0,f,c
  6053  00206C  0618               	decf	___flmul@temp^0,f,c
  6054  00206E  A0D8               	btfss	status,0,c
  6055  002070  0619               	decf	(___flmul@temp+1)^0,f,c
  6056  002072                     l3075:
  6057  002072  AE16               	btfss	(___flmul@prod+2)^0,7,c
  6058  002074  EF3E  F010         	goto	u3291
  6059  002078  EF40  F010         	goto	u3290
  6060  00207C                     u3291:
  6061  00207C  EF24  F010         	goto	l3069
  6062  002080                     u3290:
  6063  002080  0E00               	movlw	0
  6064  002082  6E12               	movwf	___flmul@aexp^0,c
  6065  002084  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6066  002086  EF47  F010         	goto	u3301
  6067  00208A  EF49  F010         	goto	u3300
  6068  00208E                     u3301:
  6069  00208E  EF6D  F010         	goto	l708
  6070  002092                     u3300:
  6071  002092  0EFF               	movlw	255
  6072  002094  140E               	andwf	___flmul@grs^0,w,c
  6073  002096  6E09               	movwf	??___flmul^0,c
  6074  002098  0EFF               	movlw	255
  6075  00209A  140F               	andwf	(___flmul@grs+1)^0,w,c
  6076  00209C  6E0A               	movwf	(??___flmul+1)^0,c
  6077  00209E  0EFF               	movlw	255
  6078  0020A0  1410               	andwf	(___flmul@grs+2)^0,w,c
  6079  0020A2  6E0B               	movwf	(??___flmul+2)^0,c
  6080  0020A4  0E7F               	movlw	127
  6081  0020A6  1411               	andwf	(___flmul@grs+3)^0,w,c
  6082  0020A8  6E0C               	movwf	(??___flmul+3)^0,c
  6083  0020AA  5009               	movf	??___flmul^0,w,c
  6084  0020AC  100A               	iorwf	(??___flmul+1)^0,w,c
  6085  0020AE  100B               	iorwf	(??___flmul+2)^0,w,c
  6086  0020B0  100C               	iorwf	(??___flmul+3)^0,w,c
  6087  0020B2  B4D8               	btfsc	status,2,c
  6088  0020B4  EF5E  F010         	goto	u3311
  6089  0020B8  EF60  F010         	goto	u3310
  6090  0020BC                     u3311:
  6091  0020BC  EF64  F010         	goto	l709
  6092  0020C0                     u3310:
  6093  0020C0                     l3083:
  6094  0020C0  0E01               	movlw	1
  6095  0020C2  6E12               	movwf	___flmul@aexp^0,c
  6096  0020C4  EF6D  F010         	goto	l708
  6097  0020C8                     l709:
  6098  0020C8  A014               	btfss	___flmul@prod^0,0,c
  6099  0020CA  EF69  F010         	goto	u3321
  6100  0020CE  EF6B  F010         	goto	u3320
  6101  0020D2                     u3321:
  6102  0020D2  EF6D  F010         	goto	l708
  6103  0020D6                     u3320:
  6104  0020D6  EF60  F010         	goto	l3083
  6105  0020DA                     l708:
  6106  0020DA  5012               	movf	___flmul@aexp^0,w,c
  6107  0020DC  B4D8               	btfsc	status,2,c
  6108  0020DE  EF73  F010         	goto	u3331
  6109  0020E2  EF75  F010         	goto	u3330
  6110  0020E6                     u3331:
  6111  0020E6  EF99  F010         	goto	l3095
  6112  0020EA                     u3330:
  6113  0020EA  0E01               	movlw	1
  6114  0020EC  2614               	addwf	___flmul@prod^0,f,c
  6115  0020EE  0E00               	movlw	0
  6116  0020F0  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6117  0020F2  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6118  0020F4  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6119  0020F6  A017               	btfss	(___flmul@prod+3)^0,0,c
  6120  0020F8  EF80  F010         	goto	u3341
  6121  0020FC  EF82  F010         	goto	u3340
  6122  002100                     u3341:
  6123  002100  EF99  F010         	goto	l3095
  6124  002104                     u3340:
  6125  002104  C014  F009         	movff	___flmul@prod,??___flmul
  6126  002108  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  6127  00210C  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  6128  002110  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  6129  002114  340C               	rlcf	(??___flmul+3)^0,w,c
  6130  002116  320C               	rrcf	(??___flmul+3)^0,f,c
  6131  002118  320B               	rrcf	(??___flmul+2)^0,f,c
  6132  00211A  320A               	rrcf	(??___flmul+1)^0,f,c
  6133  00211C  3209               	rrcf	??___flmul^0,f,c
  6134  00211E  C009  F014         	movff	??___flmul,___flmul@prod
  6135  002122  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  6136  002126  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  6137  00212A  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  6138  00212E  4A18               	infsnz	___flmul@temp^0,f,c
  6139  002130  2A19               	incf	(___flmul@temp+1)^0,f,c
  6140  002132                     l3095:
  6141  002132  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6142  002134  EFA4  F010         	goto	u3351
  6143  002138  5019               	movf	(___flmul@temp+1)^0,w,c
  6144  00213A  E108               	bnz	u3350
  6145  00213C  2818               	incf	___flmul@temp^0,w,c
  6146  00213E  A0D8               	btfss	status,0,c
  6147  002140  EFA4  F010         	goto	u3351
  6148  002144  EFA6  F010         	goto	u3350
  6149  002148                     u3351:
  6150  002148  EFB0  F010         	goto	l3099
  6151  00214C                     u3350:
  6152  00214C  0E00               	movlw	0
  6153  00214E  6E14               	movwf	___flmul@prod^0,c
  6154  002150  0E00               	movlw	0
  6155  002152  6E15               	movwf	(___flmul@prod+1)^0,c
  6156  002154  0E80               	movlw	128
  6157  002156  6E16               	movwf	(___flmul@prod+2)^0,c
  6158  002158  0E7F               	movlw	127
  6159  00215A  6E17               	movwf	(___flmul@prod+3)^0,c
  6160  00215C  EFDE  F010         	goto	l3111
  6161  002160                     l3099:
  6162  002160  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6163  002162  EFBD  F010         	goto	u3360
  6164  002166  5019               	movf	(___flmul@temp+1)^0,w,c
  6165  002168  E106               	bnz	u3361
  6166  00216A  0418               	decf	___flmul@temp^0,w,c
  6167  00216C  B0D8               	btfsc	status,0,c
  6168  00216E  EFBB  F010         	goto	u3361
  6169  002172  EFBD  F010         	goto	u3360
  6170  002176                     u3361:
  6171  002176  EFC9  F010         	goto	l716
  6172  00217A                     u3360:
  6173  00217A  0E00               	movlw	0
  6174  00217C  6E14               	movwf	___flmul@prod^0,c
  6175  00217E  0E00               	movlw	0
  6176  002180  6E15               	movwf	(___flmul@prod+1)^0,c
  6177  002182  0E00               	movlw	0
  6178  002184  6E16               	movwf	(___flmul@prod+2)^0,c
  6179  002186  0E00               	movlw	0
  6180  002188  6E17               	movwf	(___flmul@prod+3)^0,c
  6181  00218A  0E00               	movlw	0
  6182  00218C  6E0D               	movwf	___flmul@sign^0,c
  6183  00218E  EFDE  F010         	goto	l3111
  6184  002192                     l716:
  6185  002192  C018  F013         	movff	___flmul@temp,___flmul@bexp
  6186  002196  0EFF               	movlw	255
  6187  002198  1614               	andwf	___flmul@prod^0,f,c
  6188  00219A  0EFF               	movlw	255
  6189  00219C  1615               	andwf	(___flmul@prod+1)^0,f,c
  6190  00219E  0E7F               	movlw	127
  6191  0021A0  1616               	andwf	(___flmul@prod+2)^0,f,c
  6192  0021A2  0E00               	movlw	0
  6193  0021A4  1617               	andwf	(___flmul@prod+3)^0,f,c
  6194  0021A6  A013               	btfss	___flmul@bexp^0,0,c
  6195  0021A8  EFD8  F010         	goto	u3371
  6196  0021AC  EFDA  F010         	goto	u3370
  6197  0021B0                     u3371:
  6198  0021B0  EFDB  F010         	goto	l3109
  6199  0021B4                     u3370:
  6200  0021B4  8E16               	bsf	(___flmul@prod+2)^0,7,c
  6201  0021B6                     l3109:
  6202  0021B6  90D8               	bcf	status,0,c
  6203  0021B8  3013               	rrcf	___flmul@bexp^0,w,c
  6204  0021BA  6E17               	movwf	(___flmul@prod+3)^0,c
  6205  0021BC                     l3111:
  6206  0021BC  500D               	movf	___flmul@sign^0,w,c
  6207  0021BE  1217               	iorwf	(___flmul@prod+3)^0,f,c
  6208  0021C0  C014  F001         	movff	___flmul@prod,?___flmul
  6209  0021C4  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  6210  0021C8  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  6211  0021CC  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  6212  0021D0                     l703:
  6213  0021D0  0012               	return		;funcret
  6214  0021D2                     __end_of___flmul:
  6215                           	callstack 0
  6216                           
  6217 ;; *************** function ___flge *****************
  6218 ;; Defined at:
  6219 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\flge.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;  ff1             4   25[COMRAM] unsigned char 
  6222 ;;  ff2             4   29[COMRAM] unsigned char 
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;		None
  6225 ;; Return value:  Size  Location     Type
  6226 ;;		None               void
  6227 ;; Registers used:
  6228 ;;		wreg, status,2, status,0
  6229 ;; Tracked objects:
  6230 ;;		On entry : 0/0
  6231 ;;		On exit  : 0/0
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6234 ;;      Params:         8       0       0       0       0       0       0       0       0
  6235 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6236 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6237 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6238 ;;Total ram usage:       12 bytes
  6239 ;; Hardware stack levels used:    1
  6240 ;; This function calls:
  6241 ;;		Nothing
  6242 ;; This function is called by:
  6243 ;;		_efgtoa
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247                           	psect	text21
  6248  003032                     __ptext21:
  6249                           	callstack 0
  6250  003032                     ___flge:
  6251                           	callstack 26
  6252  003032  0E00               	movlw	0
  6253  003034  141A               	andwf	___flge@ff1^0,w,c
  6254  003036  6E22               	movwf	??___flge^0,c
  6255  003038  0E00               	movlw	0
  6256  00303A  141B               	andwf	(___flge@ff1+1)^0,w,c
  6257  00303C  6E23               	movwf	(??___flge+1)^0,c
  6258  00303E  0E80               	movlw	128
  6259  003040  141C               	andwf	(___flge@ff1+2)^0,w,c
  6260  003042  6E24               	movwf	(??___flge+2)^0,c
  6261  003044  0E7F               	movlw	127
  6262  003046  141D               	andwf	(___flge@ff1+3)^0,w,c
  6263  003048  6E25               	movwf	(??___flge+3)^0,c
  6264  00304A  5022               	movf	??___flge^0,w,c
  6265  00304C  1023               	iorwf	(??___flge+1)^0,w,c
  6266  00304E  1024               	iorwf	(??___flge+2)^0,w,c
  6267  003050  1025               	iorwf	(??___flge+3)^0,w,c
  6268  003052  A4D8               	btfss	status,2,c
  6269  003054  EF2E  F018         	goto	u3531
  6270  003058  EF30  F018         	goto	u3530
  6271  00305C                     u3531:
  6272  00305C  EF38  F018         	goto	l3223
  6273  003060                     u3530:
  6274  003060  0E00               	movlw	0
  6275  003062  6E1A               	movwf	___flge@ff1^0,c
  6276  003064  0E00               	movlw	0
  6277  003066  6E1B               	movwf	(___flge@ff1+1)^0,c
  6278  003068  0E00               	movlw	0
  6279  00306A  6E1C               	movwf	(___flge@ff1+2)^0,c
  6280  00306C  0E00               	movlw	0
  6281  00306E  6E1D               	movwf	(___flge@ff1+3)^0,c
  6282  003070                     l3223:
  6283  003070  0E00               	movlw	0
  6284  003072  141E               	andwf	___flge@ff2^0,w,c
  6285  003074  6E22               	movwf	??___flge^0,c
  6286  003076  0E00               	movlw	0
  6287  003078  141F               	andwf	(___flge@ff2+1)^0,w,c
  6288  00307A  6E23               	movwf	(??___flge+1)^0,c
  6289  00307C  0E80               	movlw	128
  6290  00307E  1420               	andwf	(___flge@ff2+2)^0,w,c
  6291  003080  6E24               	movwf	(??___flge+2)^0,c
  6292  003082  0E7F               	movlw	127
  6293  003084  1421               	andwf	(___flge@ff2+3)^0,w,c
  6294  003086  6E25               	movwf	(??___flge+3)^0,c
  6295  003088  5022               	movf	??___flge^0,w,c
  6296  00308A  1023               	iorwf	(??___flge+1)^0,w,c
  6297  00308C  1024               	iorwf	(??___flge+2)^0,w,c
  6298  00308E  1025               	iorwf	(??___flge+3)^0,w,c
  6299  003090  A4D8               	btfss	status,2,c
  6300  003092  EF4D  F018         	goto	u3541
  6301  003096  EF4F  F018         	goto	u3540
  6302  00309A                     u3541:
  6303  00309A  EF57  F018         	goto	l3227
  6304  00309E                     u3540:
  6305  00309E  0E00               	movlw	0
  6306  0030A0  6E1E               	movwf	___flge@ff2^0,c
  6307  0030A2  0E00               	movlw	0
  6308  0030A4  6E1F               	movwf	(___flge@ff2+1)^0,c
  6309  0030A6  0E00               	movlw	0
  6310  0030A8  6E20               	movwf	(___flge@ff2+2)^0,c
  6311  0030AA  0E00               	movlw	0
  6312  0030AC  6E21               	movwf	(___flge@ff2+3)^0,c
  6313  0030AE                     l3227:
  6314  0030AE  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  6315  0030B0  EF5C  F018         	goto	u3551
  6316  0030B4  EF5E  F018         	goto	u3550
  6317  0030B8                     u3551:
  6318  0030B8  EF67  F018         	goto	l3231
  6319  0030BC                     u3550:
  6320  0030BC  6C1A               	negf	___flge@ff1^0,c
  6321  0030BE  1E1B               	comf	(___flge@ff1+1)^0,f,c
  6322  0030C0  B0D8               	btfsc	status,0,c
  6323  0030C2  2A1B               	incf	(___flge@ff1+1)^0,f,c
  6324  0030C4  1E1C               	comf	(___flge@ff1+2)^0,f,c
  6325  0030C6  B0D8               	btfsc	status,0,c
  6326  0030C8  2A1C               	incf	(___flge@ff1+2)^0,f,c
  6327  0030CA  0E80               	movlw	128
  6328  0030CC  561D               	subfwb	(___flge@ff1+3)^0,f,c
  6329  0030CE                     l3231:
  6330  0030CE  AE21               	btfss	(___flge@ff2+3)^0,7,c
  6331  0030D0  EF6C  F018         	goto	u3561
  6332  0030D4  EF6E  F018         	goto	u3560
  6333  0030D8                     u3561:
  6334  0030D8  EF77  F018         	goto	l350
  6335  0030DC                     u3560:
  6336  0030DC  6C1E               	negf	___flge@ff2^0,c
  6337  0030DE  1E1F               	comf	(___flge@ff2+1)^0,f,c
  6338  0030E0  B0D8               	btfsc	status,0,c
  6339  0030E2  2A1F               	incf	(___flge@ff2+1)^0,f,c
  6340  0030E4  1E20               	comf	(___flge@ff2+2)^0,f,c
  6341  0030E6  B0D8               	btfsc	status,0,c
  6342  0030E8  2A20               	incf	(___flge@ff2+2)^0,f,c
  6343  0030EA  0E80               	movlw	128
  6344  0030EC  5621               	subfwb	(___flge@ff2+3)^0,f,c
  6345  0030EE                     l350:
  6346  0030EE  0E00               	movlw	0
  6347  0030F0  1A1A               	xorwf	___flge@ff1^0,f,c
  6348  0030F2  0E00               	movlw	0
  6349  0030F4  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  6350  0030F6  0E00               	movlw	0
  6351  0030F8  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  6352  0030FA  0E80               	movlw	128
  6353  0030FC  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  6354  0030FE  0E00               	movlw	0
  6355  003100  1A1E               	xorwf	___flge@ff2^0,f,c
  6356  003102  0E00               	movlw	0
  6357  003104  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  6358  003106  0E00               	movlw	0
  6359  003108  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  6360  00310A  0E80               	movlw	128
  6361  00310C  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  6362  00310E  501E               	movf	___flge@ff2^0,w,c
  6363  003110  5C1A               	subwf	___flge@ff1^0,w,c
  6364  003112  501F               	movf	(___flge@ff2+1)^0,w,c
  6365  003114  581B               	subwfb	(___flge@ff1+1)^0,w,c
  6366  003116  5020               	movf	(___flge@ff2+2)^0,w,c
  6367  003118  581C               	subwfb	(___flge@ff1+2)^0,w,c
  6368  00311A  5021               	movf	(___flge@ff2+3)^0,w,c
  6369  00311C  581D               	subwfb	(___flge@ff1+3)^0,w,c
  6370  00311E  B0D8               	btfsc	status,0,c
  6371  003120  EF94  F018         	goto	u3571
  6372  003124  EF96  F018         	goto	u3570
  6373  003128                     u3571:
  6374  003128  EF99  F018         	goto	l3237
  6375  00312C                     u3570:
  6376  00312C  90D8               	bcf	status,0,c
  6377  00312E  EF9A  F018         	goto	l355
  6378  003132                     l3237:
  6379  003132  80D8               	bsf	status,0,c
  6380  003134                     l355:
  6381  003134  0012               	return		;funcret
  6382  003136                     __end_of___flge:
  6383                           	callstack 0
  6384                           
  6385 ;; *************** function ___fleq *****************
  6386 ;; Defined at:
  6387 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\fleq.c"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;  ff1             4    0[COMRAM] unsigned char 
  6390 ;;  ff2             4    4[COMRAM] unsigned char 
  6391 ;; Auto vars:     Size  Location     Type
  6392 ;;		None
  6393 ;; Return value:  Size  Location     Type
  6394 ;;		None               void
  6395 ;; Registers used:
  6396 ;;		wreg, status,2, status,0
  6397 ;; Tracked objects:
  6398 ;;		On entry : 0/0
  6399 ;;		On exit  : 0/0
  6400 ;;		Unchanged: 0/0
  6401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6402 ;;      Params:         8       0       0       0       0       0       0       0       0
  6403 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6404 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6405 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6406 ;;Total ram usage:       12 bytes
  6407 ;; Hardware stack levels used:    1
  6408 ;; This function calls:
  6409 ;;		Nothing
  6410 ;; This function is called by:
  6411 ;;		_efgtoa
  6412 ;; This function uses a non-reentrant model
  6413 ;;
  6414                           
  6415                           	psect	text22
  6416  00360E                     __ptext22:
  6417                           	callstack 0
  6418  00360E                     ___fleq:
  6419                           	callstack 26
  6420  00360E  0E00               	movlw	0
  6421  003610  1401               	andwf	___fleq@ff1^0,w,c
  6422  003612  6E09               	movwf	??___fleq^0,c
  6423  003614  0E00               	movlw	0
  6424  003616  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6425  003618  6E0A               	movwf	(??___fleq+1)^0,c
  6426  00361A  0E80               	movlw	128
  6427  00361C  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6428  00361E  6E0B               	movwf	(??___fleq+2)^0,c
  6429  003620  0E7F               	movlw	127
  6430  003622  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6431  003624  6E0C               	movwf	(??___fleq+3)^0,c
  6432  003626  5009               	movf	??___fleq^0,w,c
  6433  003628  100A               	iorwf	(??___fleq+1)^0,w,c
  6434  00362A  100B               	iorwf	(??___fleq+2)^0,w,c
  6435  00362C  100C               	iorwf	(??___fleq+3)^0,w,c
  6436  00362E  A4D8               	btfss	status,2,c
  6437  003630  EF1C  F01B         	goto	u3501
  6438  003634  EF1E  F01B         	goto	u3500
  6439  003638                     u3501:
  6440  003638  EF26  F01B         	goto	l3207
  6441  00363C                     u3500:
  6442  00363C  0E00               	movlw	0
  6443  00363E  6E01               	movwf	___fleq@ff1^0,c
  6444  003640  0E00               	movlw	0
  6445  003642  6E02               	movwf	(___fleq@ff1+1)^0,c
  6446  003644  0E00               	movlw	0
  6447  003646  6E03               	movwf	(___fleq@ff1+2)^0,c
  6448  003648  0E00               	movlw	0
  6449  00364A  6E04               	movwf	(___fleq@ff1+3)^0,c
  6450  00364C                     l3207:
  6451  00364C  0E00               	movlw	0
  6452  00364E  1405               	andwf	___fleq@ff2^0,w,c
  6453  003650  6E09               	movwf	??___fleq^0,c
  6454  003652  0E00               	movlw	0
  6455  003654  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6456  003656  6E0A               	movwf	(??___fleq+1)^0,c
  6457  003658  0E80               	movlw	128
  6458  00365A  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6459  00365C  6E0B               	movwf	(??___fleq+2)^0,c
  6460  00365E  0E7F               	movlw	127
  6461  003660  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6462  003662  6E0C               	movwf	(??___fleq+3)^0,c
  6463  003664  5009               	movf	??___fleq^0,w,c
  6464  003666  100A               	iorwf	(??___fleq+1)^0,w,c
  6465  003668  100B               	iorwf	(??___fleq+2)^0,w,c
  6466  00366A  100C               	iorwf	(??___fleq+3)^0,w,c
  6467  00366C  A4D8               	btfss	status,2,c
  6468  00366E  EF3B  F01B         	goto	u3511
  6469  003672  EF3D  F01B         	goto	u3510
  6470  003676                     u3511:
  6471  003676  EF45  F01B         	goto	l3211
  6472  00367A                     u3510:
  6473  00367A  0E00               	movlw	0
  6474  00367C  6E05               	movwf	___fleq@ff2^0,c
  6475  00367E  0E00               	movlw	0
  6476  003680  6E06               	movwf	(___fleq@ff2+1)^0,c
  6477  003682  0E00               	movlw	0
  6478  003684  6E07               	movwf	(___fleq@ff2+2)^0,c
  6479  003686  0E00               	movlw	0
  6480  003688  6E08               	movwf	(___fleq@ff2+3)^0,c
  6481  00368A                     l3211:
  6482  00368A  5005               	movf	___fleq@ff2^0,w,c
  6483  00368C  1801               	xorwf	___fleq@ff1^0,w,c
  6484  00368E  E10F               	bnz	u3520
  6485  003690  5006               	movf	(___fleq@ff2+1)^0,w,c
  6486  003692  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6487  003694  E10C               	bnz	u3520
  6488  003696  5007               	movf	(___fleq@ff2+2)^0,w,c
  6489  003698  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6490  00369A  E109               	bnz	u3520
  6491  00369C  5008               	movf	(___fleq@ff2+3)^0,w,c
  6492  00369E  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6493  0036A0  B4D8               	btfsc	status,2,c
  6494  0036A2  EF55  F01B         	goto	u3521
  6495  0036A6  EF57  F01B         	goto	u3520
  6496  0036AA                     u3521:
  6497  0036AA  EF5A  F01B         	goto	l3215
  6498  0036AE                     u3520:
  6499  0036AE  90D8               	bcf	status,0,c
  6500  0036B0  EF5B  F01B         	goto	l344
  6501  0036B4                     l3215:
  6502  0036B4  80D8               	bsf	status,0,c
  6503  0036B6                     l344:
  6504  0036B6  0012               	return		;funcret
  6505  0036B8                     __end_of___fleq:
  6506                           	callstack 0
  6507                           
  6508 ;; *************** function ___fldiv *****************
  6509 ;; Defined at:
  6510 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcdiv.c"
  6511 ;; Parameters:    Size  Location     Type
  6512 ;;  b               4   20[COMRAM] unsigned char 
  6513 ;;  a               4   24[COMRAM] unsigned char 
  6514 ;; Auto vars:     Size  Location     Type
  6515 ;;  grs             4   39[COMRAM] unsigned long 
  6516 ;;  rem             4   32[COMRAM] unsigned long 
  6517 ;;  new_exp         2   37[COMRAM] short 
  6518 ;;  aexp            1   44[COMRAM] unsigned char 
  6519 ;;  bexp            1   43[COMRAM] unsigned char 
  6520 ;;  sign            1   36[COMRAM] unsigned char 
  6521 ;; Return value:  Size  Location     Type
  6522 ;;                  4   20[COMRAM] unsigned char 
  6523 ;; Registers used:
  6524 ;;		wreg, status,2, status,0
  6525 ;; Tracked objects:
  6526 ;;		On entry : 0/0
  6527 ;;		On exit  : 0/0
  6528 ;;		Unchanged: 0/0
  6529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6530 ;;      Params:         8       0       0       0       0       0       0       0       0
  6531 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6532 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6533 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6534 ;;Total ram usage:       25 bytes
  6535 ;; Hardware stack levels used:    1
  6536 ;; This function calls:
  6537 ;;		Nothing
  6538 ;; This function is called by:
  6539 ;;		_main
  6540 ;;		_efgtoa
  6541 ;; This function uses a non-reentrant model
  6542 ;;
  6543                           
  6544                           	psect	text23
  6545  0021D2                     __ptext23:
  6546                           	callstack 0
  6547  0021D2                     ___fldiv:
  6548                           	callstack 26
  6549  0021D2  5018               	movf	(___fldiv@b+3)^0,w,c
  6550  0021D4  0B80               	andlw	128
  6551  0021D6  6E25               	movwf	___fldiv@sign^0,c
  6552  0021D8  5018               	movf	(___fldiv@b+3)^0,w,c
  6553  0021DA  2418               	addwf	(___fldiv@b+3)^0,w,c
  6554  0021DC  6E2C               	movwf	___fldiv@bexp^0,c
  6555  0021DE  AE17               	btfss	(___fldiv@b+2)^0,7,c
  6556  0021E0  EFF4  F010         	goto	u2961
  6557  0021E4  EFF6  F010         	goto	u2960
  6558  0021E8                     u2961:
  6559  0021E8  EFF7  F010         	goto	l2855
  6560  0021EC                     u2960:
  6561  0021EC  802C               	bsf	___fldiv@bexp^0,0,c
  6562  0021EE                     l2855:
  6563  0021EE  502C               	movf	___fldiv@bexp^0,w,c
  6564  0021F0  B4D8               	btfsc	status,2,c
  6565  0021F2  EFFD  F010         	goto	u2971
  6566  0021F6  EFFF  F010         	goto	u2970
  6567  0021FA                     u2971:
  6568  0021FA  EF14  F011         	goto	l2865
  6569  0021FE                     u2970:
  6570  0021FE  282C               	incf	___fldiv@bexp^0,w,c
  6571  002200  A4D8               	btfss	status,2,c
  6572  002202  EF05  F011         	goto	u2981
  6573  002206  EF07  F011         	goto	u2980
  6574  00220A                     u2981:
  6575  00220A  EF0F  F011         	goto	l2861
  6576  00220E                     u2980:
  6577  00220E  0E00               	movlw	0
  6578  002210  6E15               	movwf	___fldiv@b^0,c
  6579  002212  0E00               	movlw	0
  6580  002214  6E16               	movwf	(___fldiv@b+1)^0,c
  6581  002216  0E00               	movlw	0
  6582  002218  6E17               	movwf	(___fldiv@b+2)^0,c
  6583  00221A  0E00               	movlw	0
  6584  00221C  6E18               	movwf	(___fldiv@b+3)^0,c
  6585  00221E                     l2861:
  6586  00221E  8E17               	bsf	(___fldiv@b+2)^0,7,c
  6587  002220  0E00               	movlw	0
  6588  002222  6E18               	movwf	(___fldiv@b+3)^0,c
  6589  002224  EF1C  F011         	goto	l2867
  6590  002228                     l2865:
  6591  002228  0E00               	movlw	0
  6592  00222A  6E15               	movwf	___fldiv@b^0,c
  6593  00222C  0E00               	movlw	0
  6594  00222E  6E16               	movwf	(___fldiv@b+1)^0,c
  6595  002230  0E00               	movlw	0
  6596  002232  6E17               	movwf	(___fldiv@b+2)^0,c
  6597  002234  0E00               	movlw	0
  6598  002236  6E18               	movwf	(___fldiv@b+3)^0,c
  6599  002238                     l2867:
  6600  002238  501C               	movf	(___fldiv@a+3)^0,w,c
  6601  00223A  0B80               	andlw	128
  6602  00223C  1A25               	xorwf	___fldiv@sign^0,f,c
  6603  00223E  501C               	movf	(___fldiv@a+3)^0,w,c
  6604  002240  241C               	addwf	(___fldiv@a+3)^0,w,c
  6605  002242  6E2D               	movwf	___fldiv@aexp^0,c
  6606  002244  AE1B               	btfss	(___fldiv@a+2)^0,7,c
  6607  002246  EF27  F011         	goto	u2991
  6608  00224A  EF29  F011         	goto	u2990
  6609  00224E                     u2991:
  6610  00224E  EF2A  F011         	goto	l2875
  6611  002252                     u2990:
  6612  002252  802D               	bsf	___fldiv@aexp^0,0,c
  6613  002254                     l2875:
  6614  002254  502D               	movf	___fldiv@aexp^0,w,c
  6615  002256  B4D8               	btfsc	status,2,c
  6616  002258  EF30  F011         	goto	u3001
  6617  00225C  EF32  F011         	goto	u3000
  6618  002260                     u3001:
  6619  002260  EF47  F011         	goto	l2885
  6620  002264                     u3000:
  6621  002264  282D               	incf	___fldiv@aexp^0,w,c
  6622  002266  A4D8               	btfss	status,2,c
  6623  002268  EF38  F011         	goto	u3011
  6624  00226C  EF3A  F011         	goto	u3010
  6625  002270                     u3011:
  6626  002270  EF42  F011         	goto	l2881
  6627  002274                     u3010:
  6628  002274  0E00               	movlw	0
  6629  002276  6E19               	movwf	___fldiv@a^0,c
  6630  002278  0E00               	movlw	0
  6631  00227A  6E1A               	movwf	(___fldiv@a+1)^0,c
  6632  00227C  0E00               	movlw	0
  6633  00227E  6E1B               	movwf	(___fldiv@a+2)^0,c
  6634  002280  0E00               	movlw	0
  6635  002282  6E1C               	movwf	(___fldiv@a+3)^0,c
  6636  002284                     l2881:
  6637  002284  8E1B               	bsf	(___fldiv@a+2)^0,7,c
  6638  002286  0E00               	movlw	0
  6639  002288  6E1C               	movwf	(___fldiv@a+3)^0,c
  6640  00228A  EF4F  F011         	goto	l2887
  6641  00228E                     l2885:
  6642  00228E  0E00               	movlw	0
  6643  002290  6E19               	movwf	___fldiv@a^0,c
  6644  002292  0E00               	movlw	0
  6645  002294  6E1A               	movwf	(___fldiv@a+1)^0,c
  6646  002296  0E00               	movlw	0
  6647  002298  6E1B               	movwf	(___fldiv@a+2)^0,c
  6648  00229A  0E00               	movlw	0
  6649  00229C  6E1C               	movwf	(___fldiv@a+3)^0,c
  6650  00229E                     l2887:
  6651  00229E  5019               	movf	___fldiv@a^0,w,c
  6652  0022A0  101A               	iorwf	(___fldiv@a+1)^0,w,c
  6653  0022A2  101B               	iorwf	(___fldiv@a+2)^0,w,c
  6654  0022A4  101C               	iorwf	(___fldiv@a+3)^0,w,c
  6655  0022A6  A4D8               	btfss	status,2,c
  6656  0022A8  EF58  F011         	goto	u3021
  6657  0022AC  EF5A  F011         	goto	u3020
  6658  0022B0                     u3021:
  6659  0022B0  EF72  F011         	goto	l2899
  6660  0022B4                     u3020:
  6661  0022B4  0E00               	movlw	0
  6662  0022B6  6E15               	movwf	___fldiv@b^0,c
  6663  0022B8  0E00               	movlw	0
  6664  0022BA  6E16               	movwf	(___fldiv@b+1)^0,c
  6665  0022BC  0E00               	movlw	0
  6666  0022BE  6E17               	movwf	(___fldiv@b+2)^0,c
  6667  0022C0  0E00               	movlw	0
  6668  0022C2  6E18               	movwf	(___fldiv@b+3)^0,c
  6669  0022C4  0E80               	movlw	128
  6670  0022C6  1217               	iorwf	(___fldiv@b+2)^0,f,c
  6671  0022C8  0E7F               	movlw	127
  6672  0022CA  1218               	iorwf	(___fldiv@b+3)^0,f,c
  6673  0022CC                     l2893:
  6674  0022CC  5025               	movf	___fldiv@sign^0,w,c
  6675  0022CE  1218               	iorwf	(___fldiv@b+3)^0,f,c
  6676  0022D0  C015  F015         	movff	___fldiv@b,?___fldiv
  6677  0022D4  C016  F016         	movff	___fldiv@b+1,?___fldiv+1
  6678  0022D8  C017  F017         	movff	___fldiv@b+2,?___fldiv+2
  6679  0022DC  C018  F018         	movff	___fldiv@b+3,?___fldiv+3
  6680  0022E0  EFB5  F012         	goto	l667
  6681  0022E4                     l2899:
  6682  0022E4  502C               	movf	___fldiv@bexp^0,w,c
  6683  0022E6  A4D8               	btfss	status,2,c
  6684  0022E8  EF78  F011         	goto	u3031
  6685  0022EC  EF7A  F011         	goto	u3030
  6686  0022F0                     u3031:
  6687  0022F0  EF84  F011         	goto	l2907
  6688  0022F4                     u3030:
  6689  0022F4  0E00               	movlw	0
  6690  0022F6  6E15               	movwf	?___fldiv^0,c
  6691  0022F8  0E00               	movlw	0
  6692  0022FA  6E16               	movwf	(?___fldiv+1)^0,c
  6693  0022FC  0E00               	movlw	0
  6694  0022FE  6E17               	movwf	(?___fldiv+2)^0,c
  6695  002300  0E00               	movlw	0
  6696  002302  6E18               	movwf	(?___fldiv+3)^0,c
  6697  002304  EFB5  F012         	goto	l667
  6698  002308                     l2907:
  6699  002308  502D               	movf	___fldiv@aexp^0,w,c
  6700  00230A  C02C  F01D         	movff	___fldiv@bexp,??___fldiv
  6701  00230E  6A1E               	clrf	(??___fldiv+1)^0,c
  6702  002310  5E1D               	subwf	??___fldiv^0,f,c
  6703  002312  0E00               	movlw	0
  6704  002314  5A1E               	subwfb	(??___fldiv+1)^0,f,c
  6705  002316  0E7F               	movlw	127
  6706  002318  241D               	addwf	??___fldiv^0,w,c
  6707  00231A  6E26               	movwf	___fldiv@new_exp^0,c
  6708  00231C  0E00               	movlw	0
  6709  00231E  201E               	addwfc	(??___fldiv+1)^0,w,c
  6710  002320  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  6711  002322  C015  F021         	movff	___fldiv@b,___fldiv@rem
  6712  002326  C016  F022         	movff	___fldiv@b+1,___fldiv@rem+1
  6713  00232A  C017  F023         	movff	___fldiv@b+2,___fldiv@rem+2
  6714  00232E  C018  F024         	movff	___fldiv@b+3,___fldiv@rem+3
  6715  002332  0E00               	movlw	0
  6716  002334  6E15               	movwf	___fldiv@b^0,c
  6717  002336  0E00               	movlw	0
  6718  002338  6E16               	movwf	(___fldiv@b+1)^0,c
  6719  00233A  0E00               	movlw	0
  6720  00233C  6E17               	movwf	(___fldiv@b+2)^0,c
  6721  00233E  0E00               	movlw	0
  6722  002340  6E18               	movwf	(___fldiv@b+3)^0,c
  6723  002342  0E00               	movlw	0
  6724  002344  6E28               	movwf	___fldiv@grs^0,c
  6725  002346  0E00               	movlw	0
  6726  002348  6E29               	movwf	(___fldiv@grs+1)^0,c
  6727  00234A  0E00               	movlw	0
  6728  00234C  6E2A               	movwf	(___fldiv@grs+2)^0,c
  6729  00234E  0E00               	movlw	0
  6730  002350  6E2B               	movwf	(___fldiv@grs+3)^0,c
  6731  002352  0E00               	movlw	0
  6732  002354  6E2D               	movwf	___fldiv@aexp^0,c
  6733  002356  EFE5  F011         	goto	l669
  6734  00235A                     l2917:
  6735  00235A  502D               	movf	___fldiv@aexp^0,w,c
  6736  00235C  B4D8               	btfsc	status,2,c
  6737  00235E  EFB3  F011         	goto	u3041
  6738  002362  EFB5  F011         	goto	u3040
  6739  002366                     u3041:
  6740  002366  EFCC  F011         	goto	l2925
  6741  00236A                     u3040:
  6742  00236A  90D8               	bcf	status,0,c
  6743  00236C  3621               	rlcf	___fldiv@rem^0,f,c
  6744  00236E  3622               	rlcf	(___fldiv@rem+1)^0,f,c
  6745  002370  3623               	rlcf	(___fldiv@rem+2)^0,f,c
  6746  002372  3624               	rlcf	(___fldiv@rem+3)^0,f,c
  6747  002374  90D8               	bcf	status,0,c
  6748  002376  3615               	rlcf	___fldiv@b^0,f,c
  6749  002378  3616               	rlcf	(___fldiv@b+1)^0,f,c
  6750  00237A  3617               	rlcf	(___fldiv@b+2)^0,f,c
  6751  00237C  3618               	rlcf	(___fldiv@b+3)^0,f,c
  6752  00237E  AE2B               	btfss	(___fldiv@grs+3)^0,7,c
  6753  002380  EFC4  F011         	goto	u3051
  6754  002384  EFC6  F011         	goto	u3050
  6755  002388                     u3051:
  6756  002388  EFC7  F011         	goto	l672
  6757  00238C                     u3050:
  6758  00238C  8015               	bsf	___fldiv@b^0,0,c
  6759  00238E                     l672:
  6760  00238E  90D8               	bcf	status,0,c
  6761  002390  3628               	rlcf	___fldiv@grs^0,f,c
  6762  002392  3629               	rlcf	(___fldiv@grs+1)^0,f,c
  6763  002394  362A               	rlcf	(___fldiv@grs+2)^0,f,c
  6764  002396  362B               	rlcf	(___fldiv@grs+3)^0,f,c
  6765  002398                     l2925:
  6766  002398  5019               	movf	___fldiv@a^0,w,c
  6767  00239A  5C21               	subwf	___fldiv@rem^0,w,c
  6768  00239C  501A               	movf	(___fldiv@a+1)^0,w,c
  6769  00239E  5822               	subwfb	(___fldiv@rem+1)^0,w,c
  6770  0023A0  501B               	movf	(___fldiv@a+2)^0,w,c
  6771  0023A2  5823               	subwfb	(___fldiv@rem+2)^0,w,c
  6772  0023A4  501C               	movf	(___fldiv@a+3)^0,w,c
  6773  0023A6  5824               	subwfb	(___fldiv@rem+3)^0,w,c
  6774  0023A8  A0D8               	btfss	status,0,c
  6775  0023AA  EFD9  F011         	goto	u3061
  6776  0023AE  EFDB  F011         	goto	u3060
  6777  0023B2                     u3061:
  6778  0023B2  EFE4  F011         	goto	l2931
  6779  0023B6                     u3060:
  6780  0023B6  8C2B               	bsf	(___fldiv@grs+3)^0,6,c
  6781  0023B8  5019               	movf	___fldiv@a^0,w,c
  6782  0023BA  5E21               	subwf	___fldiv@rem^0,f,c
  6783  0023BC  501A               	movf	(___fldiv@a+1)^0,w,c
  6784  0023BE  5A22               	subwfb	(___fldiv@rem+1)^0,f,c
  6785  0023C0  501B               	movf	(___fldiv@a+2)^0,w,c
  6786  0023C2  5A23               	subwfb	(___fldiv@rem+2)^0,f,c
  6787  0023C4  501C               	movf	(___fldiv@a+3)^0,w,c
  6788  0023C6  5A24               	subwfb	(___fldiv@rem+3)^0,f,c
  6789  0023C8                     l2931:
  6790  0023C8  2A2D               	incf	___fldiv@aexp^0,f,c
  6791  0023CA                     l669:
  6792  0023CA  0E19               	movlw	25
  6793  0023CC  642D               	cpfsgt	___fldiv@aexp^0,c
  6794  0023CE  EFEB  F011         	goto	u3071
  6795  0023D2  EFED  F011         	goto	u3070
  6796  0023D6                     u3071:
  6797  0023D6  EFAD  F011         	goto	l2917
  6798  0023DA                     u3070:
  6799  0023DA  5021               	movf	___fldiv@rem^0,w,c
  6800  0023DC  1022               	iorwf	(___fldiv@rem+1)^0,w,c
  6801  0023DE  1023               	iorwf	(___fldiv@rem+2)^0,w,c
  6802  0023E0  1024               	iorwf	(___fldiv@rem+3)^0,w,c
  6803  0023E2  B4D8               	btfsc	status,2,c
  6804  0023E4  EFF6  F011         	goto	u3081
  6805  0023E8  EFF8  F011         	goto	u3080
  6806  0023EC                     u3081:
  6807  0023EC  EF10  F012         	goto	l2943
  6808  0023F0                     u3080:
  6809  0023F0  8028               	bsf	___fldiv@grs^0,0,c
  6810  0023F2  EF10  F012         	goto	l2943
  6811  0023F6                     l2937:
  6812  0023F6  90D8               	bcf	status,0,c
  6813  0023F8  3615               	rlcf	___fldiv@b^0,f,c
  6814  0023FA  3616               	rlcf	(___fldiv@b+1)^0,f,c
  6815  0023FC  3617               	rlcf	(___fldiv@b+2)^0,f,c
  6816  0023FE  3618               	rlcf	(___fldiv@b+3)^0,f,c
  6817  002400  AE2B               	btfss	(___fldiv@grs+3)^0,7,c
  6818  002402  EF05  F012         	goto	u3091
  6819  002406  EF07  F012         	goto	u3090
  6820  00240A                     u3091:
  6821  00240A  EF08  F012         	goto	l678
  6822  00240E                     u3090:
  6823  00240E  8015               	bsf	___fldiv@b^0,0,c
  6824  002410                     l678:
  6825  002410  90D8               	bcf	status,0,c
  6826  002412  3628               	rlcf	___fldiv@grs^0,f,c
  6827  002414  3629               	rlcf	(___fldiv@grs+1)^0,f,c
  6828  002416  362A               	rlcf	(___fldiv@grs+2)^0,f,c
  6829  002418  362B               	rlcf	(___fldiv@grs+3)^0,f,c
  6830  00241A  0626               	decf	___fldiv@new_exp^0,f,c
  6831  00241C  A0D8               	btfss	status,0,c
  6832  00241E  0627               	decf	(___fldiv@new_exp+1)^0,f,c
  6833  002420                     l2943:
  6834  002420  AE17               	btfss	(___fldiv@b+2)^0,7,c
  6835  002422  EF15  F012         	goto	u3101
  6836  002426  EF17  F012         	goto	u3100
  6837  00242A                     u3101:
  6838  00242A  EFFB  F011         	goto	l2937
  6839  00242E                     u3100:
  6840  00242E  0E00               	movlw	0
  6841  002430  6E2D               	movwf	___fldiv@aexp^0,c
  6842  002432  AE2B               	btfss	(___fldiv@grs+3)^0,7,c
  6843  002434  EF1E  F012         	goto	u3111
  6844  002438  EF20  F012         	goto	u3110
  6845  00243C                     u3111:
  6846  00243C  EF44  F012         	goto	l680
  6847  002440                     u3110:
  6848  002440  0EFF               	movlw	255
  6849  002442  1428               	andwf	___fldiv@grs^0,w,c
  6850  002444  6E1D               	movwf	??___fldiv^0,c
  6851  002446  0EFF               	movlw	255
  6852  002448  1429               	andwf	(___fldiv@grs+1)^0,w,c
  6853  00244A  6E1E               	movwf	(??___fldiv+1)^0,c
  6854  00244C  0EFF               	movlw	255
  6855  00244E  142A               	andwf	(___fldiv@grs+2)^0,w,c
  6856  002450  6E1F               	movwf	(??___fldiv+2)^0,c
  6857  002452  0E7F               	movlw	127
  6858  002454  142B               	andwf	(___fldiv@grs+3)^0,w,c
  6859  002456  6E20               	movwf	(??___fldiv+3)^0,c
  6860  002458  501D               	movf	??___fldiv^0,w,c
  6861  00245A  101E               	iorwf	(??___fldiv+1)^0,w,c
  6862  00245C  101F               	iorwf	(??___fldiv+2)^0,w,c
  6863  00245E  1020               	iorwf	(??___fldiv+3)^0,w,c
  6864  002460  B4D8               	btfsc	status,2,c
  6865  002462  EF35  F012         	goto	u3121
  6866  002466  EF37  F012         	goto	u3120
  6867  00246A                     u3121:
  6868  00246A  EF3B  F012         	goto	l681
  6869  00246E                     u3120:
  6870  00246E                     l2951:
  6871  00246E  0E01               	movlw	1
  6872  002470  6E2D               	movwf	___fldiv@aexp^0,c
  6873  002472  EF44  F012         	goto	l680
  6874  002476                     l681:
  6875  002476  A015               	btfss	___fldiv@b^0,0,c
  6876  002478  EF40  F012         	goto	u3131
  6877  00247C  EF42  F012         	goto	u3130
  6878  002480                     u3131:
  6879  002480  EF44  F012         	goto	l680
  6880  002484                     u3130:
  6881  002484  EF37  F012         	goto	l2951
  6882  002488                     l680:
  6883  002488  502D               	movf	___fldiv@aexp^0,w,c
  6884  00248A  B4D8               	btfsc	status,2,c
  6885  00248C  EF4A  F012         	goto	u3141
  6886  002490  EF4C  F012         	goto	u3140
  6887  002494                     u3141:
  6888  002494  EF70  F012         	goto	l2963
  6889  002498                     u3140:
  6890  002498  0E01               	movlw	1
  6891  00249A  2615               	addwf	___fldiv@b^0,f,c
  6892  00249C  0E00               	movlw	0
  6893  00249E  2216               	addwfc	(___fldiv@b+1)^0,f,c
  6894  0024A0  2217               	addwfc	(___fldiv@b+2)^0,f,c
  6895  0024A2  2218               	addwfc	(___fldiv@b+3)^0,f,c
  6896  0024A4  A018               	btfss	(___fldiv@b+3)^0,0,c
  6897  0024A6  EF57  F012         	goto	u3151
  6898  0024AA  EF59  F012         	goto	u3150
  6899  0024AE                     u3151:
  6900  0024AE  EF70  F012         	goto	l2963
  6901  0024B2                     u3150:
  6902  0024B2  C015  F01D         	movff	___fldiv@b,??___fldiv
  6903  0024B6  C016  F01E         	movff	___fldiv@b+1,??___fldiv+1
  6904  0024BA  C017  F01F         	movff	___fldiv@b+2,??___fldiv+2
  6905  0024BE  C018  F020         	movff	___fldiv@b+3,??___fldiv+3
  6906  0024C2  3420               	rlcf	(??___fldiv+3)^0,w,c
  6907  0024C4  3220               	rrcf	(??___fldiv+3)^0,f,c
  6908  0024C6  321F               	rrcf	(??___fldiv+2)^0,f,c
  6909  0024C8  321E               	rrcf	(??___fldiv+1)^0,f,c
  6910  0024CA  321D               	rrcf	??___fldiv^0,f,c
  6911  0024CC  C01D  F015         	movff	??___fldiv,___fldiv@b
  6912  0024D0  C01E  F016         	movff	??___fldiv+1,___fldiv@b+1
  6913  0024D4  C01F  F017         	movff	??___fldiv+2,___fldiv@b+2
  6914  0024D8  C020  F018         	movff	??___fldiv+3,___fldiv@b+3
  6915  0024DC  4A26               	infsnz	___fldiv@new_exp^0,f,c
  6916  0024DE  2A27               	incf	(___fldiv@new_exp+1)^0,f,c
  6917  0024E0                     l2963:
  6918  0024E0  BE27               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6919  0024E2  EF7B  F012         	goto	u3161
  6920  0024E6  5027               	movf	(___fldiv@new_exp+1)^0,w,c
  6921  0024E8  E108               	bnz	u3160
  6922  0024EA  2826               	incf	___fldiv@new_exp^0,w,c
  6923  0024EC  A0D8               	btfss	status,0,c
  6924  0024EE  EF7B  F012         	goto	u3161
  6925  0024F2  EF7D  F012         	goto	u3160
  6926  0024F6                     u3161:
  6927  0024F6  EF88  F012         	goto	l2967
  6928  0024FA                     u3160:
  6929  0024FA  0E00               	movlw	0
  6930  0024FC  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  6931  0024FE  6826               	setf	___fldiv@new_exp^0,c
  6932  002500  0E00               	movlw	0
  6933  002502  6E15               	movwf	___fldiv@b^0,c
  6934  002504  0E00               	movlw	0
  6935  002506  6E16               	movwf	(___fldiv@b+1)^0,c
  6936  002508  0E00               	movlw	0
  6937  00250A  6E17               	movwf	(___fldiv@b+2)^0,c
  6938  00250C  0E00               	movlw	0
  6939  00250E  6E18               	movwf	(___fldiv@b+3)^0,c
  6940  002510                     l2967:
  6941  002510  BE27               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6942  002512  EF95  F012         	goto	u3170
  6943  002516  5027               	movf	(___fldiv@new_exp+1)^0,w,c
  6944  002518  E106               	bnz	u3171
  6945  00251A  0426               	decf	___fldiv@new_exp^0,w,c
  6946  00251C  B0D8               	btfsc	status,0,c
  6947  00251E  EF93  F012         	goto	u3171
  6948  002522  EF95  F012         	goto	u3170
  6949  002526                     u3171:
  6950  002526  EFA3  F012         	goto	l2971
  6951  00252A                     u3170:
  6952  00252A  0E00               	movlw	0
  6953  00252C  6E27               	movwf	(___fldiv@new_exp+1)^0,c
  6954  00252E  0E00               	movlw	0
  6955  002530  6E26               	movwf	___fldiv@new_exp^0,c
  6956  002532  0E00               	movlw	0
  6957  002534  6E15               	movwf	___fldiv@b^0,c
  6958  002536  0E00               	movlw	0
  6959  002538  6E16               	movwf	(___fldiv@b+1)^0,c
  6960  00253A  0E00               	movlw	0
  6961  00253C  6E17               	movwf	(___fldiv@b+2)^0,c
  6962  00253E  0E00               	movlw	0
  6963  002540  6E18               	movwf	(___fldiv@b+3)^0,c
  6964  002542  0E00               	movlw	0
  6965  002544  6E25               	movwf	___fldiv@sign^0,c
  6966  002546                     l2971:
  6967  002546  C026  F02C         	movff	___fldiv@new_exp,___fldiv@bexp
  6968  00254A  A02C               	btfss	___fldiv@bexp^0,0,c
  6969  00254C  EFAA  F012         	goto	u3181
  6970  002550  EFAC  F012         	goto	u3180
  6971  002554                     u3181:
  6972  002554  EFAF  F012         	goto	l2977
  6973  002558                     u3180:
  6974  002558  8E17               	bsf	(___fldiv@b+2)^0,7,c
  6975  00255A  EFB0  F012         	goto	l2979
  6976  00255E                     l2977:
  6977  00255E  9E17               	bcf	(___fldiv@b+2)^0,7,c
  6978  002560                     l2979:
  6979  002560  90D8               	bcf	status,0,c
  6980  002562  302C               	rrcf	___fldiv@bexp^0,w,c
  6981  002564  6E18               	movwf	(___fldiv@b+3)^0,c
  6982  002566  EF66  F011         	goto	l2893
  6983  00256A                     l667:
  6984  00256A  0012               	return		;funcret
  6985  00256C                     __end_of___fldiv:
  6986                           	callstack 0
  6987                           
  6988 ;; *************** function ___awmod *****************
  6989 ;; Defined at:
  6990 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awmod.c"
  6991 ;; Parameters:    Size  Location     Type
  6992 ;;  dividend        2    0[COMRAM] int 
  6993 ;;  divisor         2    2[COMRAM] int 
  6994 ;; Auto vars:     Size  Location     Type
  6995 ;;  sign            1    5[COMRAM] unsigned char 
  6996 ;;  counter         1    4[COMRAM] unsigned char 
  6997 ;; Return value:  Size  Location     Type
  6998 ;;                  2    0[COMRAM] int 
  6999 ;; Registers used:
  7000 ;;		wreg, status,2, status,0
  7001 ;; Tracked objects:
  7002 ;;		On entry : 0/0
  7003 ;;		On exit  : 0/0
  7004 ;;		Unchanged: 0/0
  7005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7006 ;;      Params:         4       0       0       0       0       0       0       0       0
  7007 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7008 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7009 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7010 ;;Total ram usage:        6 bytes
  7011 ;; Hardware stack levels used:    1
  7012 ;; This function calls:
  7013 ;;		Nothing
  7014 ;; This function is called by:
  7015 ;;		_efgtoa
  7016 ;; This function uses a non-reentrant model
  7017 ;;
  7018                           
  7019                           	psect	text24
  7020  00355E                     __ptext24:
  7021                           	callstack 0
  7022  00355E                     ___awmod:
  7023                           	callstack 26
  7024  00355E  0E00               	movlw	0
  7025  003560  6E06               	movwf	___awmod@sign^0,c
  7026  003562  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7027  003564  EFB8  F01A         	goto	u3440
  7028  003568  EFB6  F01A         	goto	u3441
  7029  00356C                     u3441:
  7030  00356C  EFBE  F01A         	goto	l3175
  7031  003570                     u3440:
  7032  003570  6C01               	negf	___awmod@dividend^0,c
  7033  003572  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7034  003574  B0D8               	btfsc	status,0,c
  7035  003576  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7036  003578  0E01               	movlw	1
  7037  00357A  6E06               	movwf	___awmod@sign^0,c
  7038  00357C                     l3175:
  7039  00357C  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7040  00357E  EFC5  F01A         	goto	u3450
  7041  003582  EFC3  F01A         	goto	u3451
  7042  003586                     u3451:
  7043  003586  EFC9  F01A         	goto	l3179
  7044  00358A                     u3450:
  7045  00358A  6C03               	negf	___awmod@divisor^0,c
  7046  00358C  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7047  00358E  B0D8               	btfsc	status,0,c
  7048  003590  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7049  003592                     l3179:
  7050  003592  5003               	movf	___awmod@divisor^0,w,c
  7051  003594  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7052  003596  B4D8               	btfsc	status,2,c
  7053  003598  EFD0  F01A         	goto	u3461
  7054  00359C  EFD2  F01A         	goto	u3460
  7055  0035A0                     u3461:
  7056  0035A0  EFF6  F01A         	goto	l3195
  7057  0035A4                     u3460:
  7058  0035A4  0E01               	movlw	1
  7059  0035A6  6E05               	movwf	___awmod@counter^0,c
  7060  0035A8  EFDA  F01A         	goto	l3185
  7061  0035AC                     l3183:
  7062  0035AC  90D8               	bcf	status,0,c
  7063  0035AE  3603               	rlcf	___awmod@divisor^0,f,c
  7064  0035B0  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7065  0035B2  2A05               	incf	___awmod@counter^0,f,c
  7066  0035B4                     l3185:
  7067  0035B4  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7068  0035B6  EFDF  F01A         	goto	u3471
  7069  0035BA  EFE1  F01A         	goto	u3470
  7070  0035BE                     u3471:
  7071  0035BE  EFD6  F01A         	goto	l3183
  7072  0035C2                     u3470:
  7073  0035C2                     l3187:
  7074  0035C2  5003               	movf	___awmod@divisor^0,w,c
  7075  0035C4  5C01               	subwf	___awmod@dividend^0,w,c
  7076  0035C6  5004               	movf	(___awmod@divisor+1)^0,w,c
  7077  0035C8  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7078  0035CA  A0D8               	btfss	status,0,c
  7079  0035CC  EFEA  F01A         	goto	u3481
  7080  0035D0  EFEC  F01A         	goto	u3480
  7081  0035D4                     u3481:
  7082  0035D4  EFF0  F01A         	goto	l3191
  7083  0035D8                     u3480:
  7084  0035D8  5003               	movf	___awmod@divisor^0,w,c
  7085  0035DA  5E01               	subwf	___awmod@dividend^0,f,c
  7086  0035DC  5004               	movf	(___awmod@divisor+1)^0,w,c
  7087  0035DE  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7088  0035E0                     l3191:
  7089  0035E0  90D8               	bcf	status,0,c
  7090  0035E2  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7091  0035E4  3203               	rrcf	___awmod@divisor^0,f,c
  7092  0035E6  2E05               	decfsz	___awmod@counter^0,f,c
  7093  0035E8  EFE1  F01A         	goto	l3187
  7094  0035EC                     l3195:
  7095  0035EC  5006               	movf	___awmod@sign^0,w,c
  7096  0035EE  B4D8               	btfsc	status,2,c
  7097  0035F0  EFFC  F01A         	goto	u3491
  7098  0035F4  EFFE  F01A         	goto	u3490
  7099  0035F8                     u3491:
  7100  0035F8  EF02  F01B         	goto	l3199
  7101  0035FC                     u3490:
  7102  0035FC  6C01               	negf	___awmod@dividend^0,c
  7103  0035FE  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7104  003600  B0D8               	btfsc	status,0,c
  7105  003602  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7106  003604                     l3199:
  7107  003604  C001  F001         	movff	___awmod@dividend,?___awmod
  7108  003608  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7109  00360C  0012               	return		;funcret
  7110  00360E                     __end_of___awmod:
  7111                           	callstack 0
  7112                           
  7113 ;; *************** function ___awdiv *****************
  7114 ;; Defined at:
  7115 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\awdiv.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;  dividend        2    0[COMRAM] int 
  7118 ;;  divisor         2    2[COMRAM] int 
  7119 ;; Auto vars:     Size  Location     Type
  7120 ;;  quotient        2    6[COMRAM] int 
  7121 ;;  sign            1    5[COMRAM] unsigned char 
  7122 ;;  counter         1    4[COMRAM] unsigned char 
  7123 ;; Return value:  Size  Location     Type
  7124 ;;                  2    0[COMRAM] int 
  7125 ;; Registers used:
  7126 ;;		wreg, status,2, status,0
  7127 ;; Tracked objects:
  7128 ;;		On entry : 0/0
  7129 ;;		On exit  : 0/0
  7130 ;;		Unchanged: 0/0
  7131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7132 ;;      Params:         4       0       0       0       0       0       0       0       0
  7133 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7134 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7135 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7136 ;;Total ram usage:        8 bytes
  7137 ;; Hardware stack levels used:    1
  7138 ;; This function calls:
  7139 ;;		Nothing
  7140 ;; This function is called by:
  7141 ;;		_efgtoa
  7142 ;; This function uses a non-reentrant model
  7143 ;;
  7144                           
  7145                           	psect	text25
  7146  00349A                     __ptext25:
  7147                           	callstack 0
  7148  00349A                     ___awdiv:
  7149                           	callstack 26
  7150  00349A  0E00               	movlw	0
  7151  00349C  6E06               	movwf	___awdiv@sign^0,c
  7152  00349E  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7153  0034A0  EF56  F01A         	goto	u3380
  7154  0034A4  EF54  F01A         	goto	u3381
  7155  0034A8                     u3381:
  7156  0034A8  EF5C  F01A         	goto	l3131
  7157  0034AC                     u3380:
  7158  0034AC  6C03               	negf	___awdiv@divisor^0,c
  7159  0034AE  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7160  0034B0  B0D8               	btfsc	status,0,c
  7161  0034B2  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7162  0034B4  0E01               	movlw	1
  7163  0034B6  6E06               	movwf	___awdiv@sign^0,c
  7164  0034B8                     l3131:
  7165  0034B8  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7166  0034BA  EF63  F01A         	goto	u3390
  7167  0034BE  EF61  F01A         	goto	u3391
  7168  0034C2                     u3391:
  7169  0034C2  EF69  F01A         	goto	l3137
  7170  0034C6                     u3390:
  7171  0034C6  6C01               	negf	___awdiv@dividend^0,c
  7172  0034C8  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7173  0034CA  B0D8               	btfsc	status,0,c
  7174  0034CC  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7175  0034CE  0E01               	movlw	1
  7176  0034D0  1A06               	xorwf	___awdiv@sign^0,f,c
  7177  0034D2                     l3137:
  7178  0034D2  0E00               	movlw	0
  7179  0034D4  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7180  0034D6  0E00               	movlw	0
  7181  0034D8  6E07               	movwf	___awdiv@quotient^0,c
  7182  0034DA  5003               	movf	___awdiv@divisor^0,w,c
  7183  0034DC  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7184  0034DE  B4D8               	btfsc	status,2,c
  7185  0034E0  EF74  F01A         	goto	u3401
  7186  0034E4  EF76  F01A         	goto	u3400
  7187  0034E8                     u3401:
  7188  0034E8  EF9E  F01A         	goto	l3159
  7189  0034EC                     u3400:
  7190  0034EC  0E01               	movlw	1
  7191  0034EE  6E05               	movwf	___awdiv@counter^0,c
  7192  0034F0  EF7E  F01A         	goto	l3145
  7193  0034F4                     l3143:
  7194  0034F4  90D8               	bcf	status,0,c
  7195  0034F6  3603               	rlcf	___awdiv@divisor^0,f,c
  7196  0034F8  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7197  0034FA  2A05               	incf	___awdiv@counter^0,f,c
  7198  0034FC                     l3145:
  7199  0034FC  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7200  0034FE  EF83  F01A         	goto	u3411
  7201  003502  EF85  F01A         	goto	u3410
  7202  003506                     u3411:
  7203  003506  EF7A  F01A         	goto	l3143
  7204  00350A                     u3410:
  7205  00350A                     l3147:
  7206  00350A  90D8               	bcf	status,0,c
  7207  00350C  3607               	rlcf	___awdiv@quotient^0,f,c
  7208  00350E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7209  003510  5003               	movf	___awdiv@divisor^0,w,c
  7210  003512  5C01               	subwf	___awdiv@dividend^0,w,c
  7211  003514  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7212  003516  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7213  003518  A0D8               	btfss	status,0,c
  7214  00351A  EF91  F01A         	goto	u3421
  7215  00351E  EF93  F01A         	goto	u3420
  7216  003522                     u3421:
  7217  003522  EF98  F01A         	goto	l3155
  7218  003526                     u3420:
  7219  003526  5003               	movf	___awdiv@divisor^0,w,c
  7220  003528  5E01               	subwf	___awdiv@dividend^0,f,c
  7221  00352A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7222  00352C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7223  00352E  8007               	bsf	___awdiv@quotient^0,0,c
  7224  003530                     l3155:
  7225  003530  90D8               	bcf	status,0,c
  7226  003532  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7227  003534  3203               	rrcf	___awdiv@divisor^0,f,c
  7228  003536  2E05               	decfsz	___awdiv@counter^0,f,c
  7229  003538  EF85  F01A         	goto	l3147
  7230  00353C                     l3159:
  7231  00353C  5006               	movf	___awdiv@sign^0,w,c
  7232  00353E  B4D8               	btfsc	status,2,c
  7233  003540  EFA4  F01A         	goto	u3431
  7234  003544  EFA6  F01A         	goto	u3430
  7235  003548                     u3431:
  7236  003548  EFAA  F01A         	goto	l3163
  7237  00354C                     u3430:
  7238  00354C  6C07               	negf	___awdiv@quotient^0,c
  7239  00354E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7240  003550  B0D8               	btfsc	status,0,c
  7241  003552  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7242  003554                     l3163:
  7243  003554  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7244  003558  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7245  00355C  0012               	return		;funcret
  7246  00355E                     __end_of___awdiv:
  7247                           	callstack 0
  7248                           
  7249 ;; *************** function _atoi *****************
  7250 ;; Defined at:
  7251 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\atoi.c"
  7252 ;; Parameters:    Size  Location     Type
  7253 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7254 ;;		 -> STR_1(17), 
  7255 ;; Auto vars:     Size  Location     Type
  7256 ;;  n               2   20[COMRAM] int 
  7257 ;;  neg             2   13[COMRAM] int 
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  2    7[COMRAM] int 
  7260 ;; Registers used:
  7261 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7267 ;;      Params:         2       0       0       0       0       0       0       0       0
  7268 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7269 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7270 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7271 ;;Total ram usage:       15 bytes
  7272 ;; Hardware stack levels used:    1
  7273 ;; Hardware stack levels required when called:    1
  7274 ;; This function calls:
  7275 ;;		___wmul
  7276 ;;		_isdigit
  7277 ;;		_isspace
  7278 ;; This function is called by:
  7279 ;;		_vfpfcnvrt
  7280 ;; This function uses a non-reentrant model
  7281 ;;
  7282                           
  7283                           	psect	text26
  7284  002932                     __ptext26:
  7285                           	callstack 0
  7286  002932                     _atoi:
  7287                           	callstack 26
  7288  002932  0E00               	movlw	0
  7289  002934  6E16               	movwf	(atoi@n+1)^0,c
  7290  002936  0E00               	movlw	0
  7291  002938  6E15               	movwf	atoi@n^0,c
  7292  00293A  0E00               	movlw	0
  7293  00293C  6E0F               	movwf	(atoi@neg+1)^0,c
  7294  00293E  0E00               	movlw	0
  7295  002940  6E0E               	movwf	atoi@neg^0,c
  7296  002942  EFA5  F014         	goto	l3707
  7297  002946                     l3705:
  7298  002946  4A08               	infsnz	atoi@s^0,f,c
  7299  002948  2A09               	incf	(atoi@s+1)^0,f,c
  7300  00294A                     l3707:
  7301  00294A  0E01               	movlw	1
  7302  00294C  6E14               	movwf	_atoi$916^0,c
  7303  00294E  C008  FFF6         	movff	atoi@s,tblptrl
  7304  002952  C009  FFF7         	movff	atoi@s+1,tblptrh
  7305  002956                     	if	0	;tblptru may be non-zero
  7306  002956                     	endif
  7307  002956                     	if	0	;tblptru may be non-zero
  7308  002956                     	endif
  7309  002956  0008               	tblrd		*
  7310  002958  50F5               	movf	tablat,w,c
  7311  00295A  0A20               	xorlw	32
  7312  00295C  B4D8               	btfsc	status,2,c
  7313  00295E  EFB3  F014         	goto	u4501
  7314  002962  EFB5  F014         	goto	u4500
  7315  002966                     u4501:
  7316  002966  EFD2  F014         	goto	l3715
  7317  00296A                     u4500:
  7318  00296A  0EF7               	movlw	247
  7319  00296C  6E0A               	movwf	??_atoi^0,c
  7320  00296E  0EFF               	movlw	255
  7321  002970  6E0B               	movwf	(??_atoi+1)^0,c
  7322  002972  C008  FFF6         	movff	atoi@s,tblptrl
  7323  002976  C009  FFF7         	movff	atoi@s+1,tblptrh
  7324  00297A                     	if	0	;tblptru may be non-zero
  7325  00297A                     	endif
  7326  00297A                     	if	0	;tblptru may be non-zero
  7327  00297A                     	endif
  7328  00297A  0008               	tblrd		*
  7329  00297C  50F5               	movf	tablat,w,c
  7330  00297E  6E0C               	movwf	(??_atoi+2)^0,c
  7331  002980  6A0D               	clrf	(??_atoi+3)^0,c
  7332  002982  500A               	movf	??_atoi^0,w,c
  7333  002984  260C               	addwf	(??_atoi+2)^0,f,c
  7334  002986  500B               	movf	(??_atoi+1)^0,w,c
  7335  002988  220D               	addwfc	(??_atoi+3)^0,f,c
  7336  00298A  500D               	movf	(??_atoi+3)^0,w,c
  7337  00298C  E109               	bnz	u4510
  7338  00298E  0E05               	movlw	5
  7339  002990  5C0C               	subwf	(??_atoi+2)^0,w,c
  7340  002992  A0D8               	btfss	status,0,c
  7341  002994  EFCE  F014         	goto	u4511
  7342  002998  EFD0  F014         	goto	u4510
  7343  00299C                     u4511:
  7344  00299C  EFD2  F014         	goto	l3715
  7345  0029A0                     u4510:
  7346  0029A0  0E00               	movlw	0
  7347  0029A2  6E14               	movwf	_atoi$916^0,c
  7348  0029A4                     l3715:
  7349  0029A4  C014  F010         	movff	_atoi$916,_atoi$915
  7350  0029A8  6A11               	clrf	(_atoi$915+1)^0,c
  7351  0029AA  5010               	movf	_atoi$915^0,w,c
  7352  0029AC  1011               	iorwf	(_atoi$915+1)^0,w,c
  7353  0029AE  A4D8               	btfss	status,2,c
  7354  0029B0  EFDC  F014         	goto	u4521
  7355  0029B4  EFDE  F014         	goto	u4520
  7356  0029B8                     u4521:
  7357  0029B8  EFA3  F014         	goto	l3705
  7358  0029BC                     u4520:
  7359  0029BC  EFE8  F014         	goto	l3725
  7360  0029C0                     l3721:
  7361  0029C0  0E00               	movlw	0
  7362  0029C2  6E0F               	movwf	(atoi@neg+1)^0,c
  7363  0029C4  0E01               	movlw	1
  7364  0029C6  6E0E               	movwf	atoi@neg^0,c
  7365  0029C8                     l3723:
  7366  0029C8  4A08               	infsnz	atoi@s^0,f,c
  7367  0029CA  2A09               	incf	(atoi@s+1)^0,f,c
  7368  0029CC  EF1D  F015         	goto	l3731
  7369  0029D0                     l3725:
  7370  0029D0  C008  FFF6         	movff	atoi@s,tblptrl
  7371  0029D4  C009  FFF7         	movff	atoi@s+1,tblptrh
  7372  0029D8                     	if	0	;tblptru may be non-zero
  7373  0029D8                     	endif
  7374  0029D8                     	if	0	;tblptru may be non-zero
  7375  0029D8                     	endif
  7376  0029D8  0008               	tblrd		*
  7377  0029DA  50F5               	movf	tablat,w,c
  7378  0029DC  6E0A               	movwf	??_atoi^0,c
  7379  0029DE  6A0B               	clrf	(??_atoi+1)^0,c
  7380                           
  7381                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7382                           ; Switch size 1, requested type "simple"
  7383                           ; Number of cases is 1, Range of values is 0 to 0
  7384                           ; switch strategies available:
  7385                           ; Name         Instructions Cycles
  7386                           ; simple_byte            4     3 (average)
  7387                           ;	Chosen strategy is simple_byte
  7388  0029E0  500B               	movf	(??_atoi+1)^0,w,c
  7389  0029E2  0A00               	xorlw	0	; case 0
  7390  0029E4  B4D8               	btfsc	status,2,c
  7391  0029E6  EFF7  F014         	goto	l4143
  7392  0029EA  EF1D  F015         	goto	l3731
  7393  0029EE                     l4143:
  7394                           
  7395                           ; Switch size 1, requested type "simple"
  7396                           ; Number of cases is 2, Range of values is 43 to 45
  7397                           ; switch strategies available:
  7398                           ; Name         Instructions Cycles
  7399                           ; simple_byte            7     4 (average)
  7400                           ;	Chosen strategy is simple_byte
  7401  0029EE  500A               	movf	??_atoi^0,w,c
  7402  0029F0  0A2B               	xorlw	43	; case 43
  7403  0029F2  B4D8               	btfsc	status,2,c
  7404  0029F4  EFE4  F014         	goto	l3723
  7405  0029F8  0A06               	xorlw	6	; case 45
  7406  0029FA  B4D8               	btfsc	status,2,c
  7407  0029FC  EFE0  F014         	goto	l3721
  7408  002A00  EF1D  F015         	goto	l3731
  7409  002A04                     l3727:
  7410  002A04  C015  F001         	movff	atoi@n,___wmul@multiplier
  7411  002A08  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7412  002A0C  0E00               	movlw	0
  7413  002A0E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7414  002A10  0E0A               	movlw	10
  7415  002A12  6E03               	movwf	___wmul@multiplicand^0,c
  7416  002A14  EC40  F01D         	call	___wmul	;wreg free
  7417  002A18  C008  FFF6         	movff	atoi@s,tblptrl
  7418  002A1C  C009  FFF7         	movff	atoi@s+1,tblptrh
  7419  002A20                     	if	0	;tblptru may be non-zero
  7420  002A20                     	endif
  7421  002A20                     	if	0	;tblptru may be non-zero
  7422  002A20                     	endif
  7423  002A20  0008               	tblrd		*
  7424  002A22  50F5               	movf	tablat,w,c
  7425  002A24  5E01               	subwf	?___wmul^0,f,c
  7426  002A26  0E00               	movlw	0
  7427  002A28  5A02               	subwfb	(?___wmul+1)^0,f,c
  7428  002A2A  0E30               	movlw	48
  7429  002A2C  2401               	addwf	?___wmul^0,w,c
  7430  002A2E  6E15               	movwf	atoi@n^0,c
  7431  002A30  0E00               	movlw	0
  7432  002A32  2002               	addwfc	(?___wmul+1)^0,w,c
  7433  002A34  6E16               	movwf	(atoi@n+1)^0,c
  7434  002A36  EFE4  F014         	goto	l3723
  7435  002A3A                     l3731:
  7436  002A3A  0ED0               	movlw	208
  7437  002A3C  6E0A               	movwf	??_atoi^0,c
  7438  002A3E  0EFF               	movlw	255
  7439  002A40  6E0B               	movwf	(??_atoi+1)^0,c
  7440  002A42  C008  FFF6         	movff	atoi@s,tblptrl
  7441  002A46  C009  FFF7         	movff	atoi@s+1,tblptrh
  7442  002A4A                     	if	0	;tblptru may be non-zero
  7443  002A4A                     	endif
  7444  002A4A                     	if	0	;tblptru may be non-zero
  7445  002A4A                     	endif
  7446  002A4A  0008               	tblrd		*
  7447  002A4C  50F5               	movf	tablat,w,c
  7448  002A4E  6E0C               	movwf	(??_atoi+2)^0,c
  7449  002A50  6A0D               	clrf	(??_atoi+3)^0,c
  7450  002A52  500A               	movf	??_atoi^0,w,c
  7451  002A54  260C               	addwf	(??_atoi+2)^0,f,c
  7452  002A56  500B               	movf	(??_atoi+1)^0,w,c
  7453  002A58  220D               	addwfc	(??_atoi+3)^0,f,c
  7454  002A5A  500D               	movf	(??_atoi+3)^0,w,c
  7455  002A5C  E10A               	bnz	u4530
  7456  002A5E  0E0A               	movlw	10
  7457  002A60  5C0C               	subwf	(??_atoi+2)^0,w,c
  7458  002A62  A0D8               	btfss	status,0,c
  7459  002A64  EF36  F015         	goto	u4531
  7460  002A68  EF39  F015         	goto	u4530
  7461  002A6C                     u4531:
  7462  002A6C  0E01               	movlw	1
  7463  002A6E  EF3A  F015         	goto	u4540
  7464  002A72                     u4530:
  7465  002A72  0E00               	movlw	0
  7466  002A74                     u4540:
  7467  002A74  6E12               	movwf	_atoi$917^0,c
  7468  002A76  6A13               	clrf	(_atoi$917+1)^0,c
  7469  002A78  5012               	movf	_atoi$917^0,w,c
  7470  002A7A  1013               	iorwf	(_atoi$917+1)^0,w,c
  7471  002A7C  A4D8               	btfss	status,2,c
  7472  002A7E  EF43  F015         	goto	u4551
  7473  002A82  EF45  F015         	goto	u4550
  7474  002A86                     u4551:
  7475  002A86  EF02  F015         	goto	l3727
  7476  002A8A                     u4550:
  7477  002A8A  500E               	movf	atoi@neg^0,w,c
  7478  002A8C  100F               	iorwf	(atoi@neg+1)^0,w,c
  7479  002A8E  A4D8               	btfss	status,2,c
  7480  002A90  EF4C  F015         	goto	u4561
  7481  002A94  EF4E  F015         	goto	u4560
  7482  002A98                     u4561:
  7483  002A98  EF5C  F015         	goto	l972
  7484  002A9C                     u4560:
  7485  002A9C  C015  F00A         	movff	atoi@n,??_atoi
  7486  002AA0  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7487  002AA4  1E0A               	comf	??_atoi^0,f,c
  7488  002AA6  1E0B               	comf	(??_atoi+1)^0,f,c
  7489  002AA8  4A0A               	infsnz	??_atoi^0,f,c
  7490  002AAA  2A0B               	incf	(??_atoi+1)^0,f,c
  7491  002AAC  C00A  F008         	movff	??_atoi,?_atoi
  7492  002AB0  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7493  002AB4  EF60  F015         	goto	l975
  7494  002AB8                     l972:
  7495  002AB8  C015  F008         	movff	atoi@n,?_atoi
  7496  002ABC  C016  F009         	movff	atoi@n+1,?_atoi+1
  7497  002AC0                     l975:
  7498  002AC0  0012               	return		;funcret
  7499  002AC2                     __end_of_atoi:
  7500                           	callstack 0
  7501                           
  7502 ;; *************** function _isspace *****************
  7503 ;; Defined at:
  7504 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isspace.c"
  7505 ;; Parameters:    Size  Location     Type
  7506 ;;  c               2    0[COMRAM] int 
  7507 ;; Auto vars:     Size  Location     Type
  7508 ;;		None
  7509 ;; Return value:  Size  Location     Type
  7510 ;;                  2    0[COMRAM] int 
  7511 ;; Registers used:
  7512 ;;		wreg, status,2, status,0
  7513 ;; Tracked objects:
  7514 ;;		On entry : 0/0
  7515 ;;		On exit  : 0/0
  7516 ;;		Unchanged: 0/0
  7517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7518 ;;      Params:         2       0       0       0       0       0       0       0       0
  7519 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7520 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7521 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7522 ;;Total ram usage:        7 bytes
  7523 ;; Hardware stack levels used:    1
  7524 ;; This function calls:
  7525 ;;		Nothing
  7526 ;; This function is called by:
  7527 ;;		_atoi
  7528 ;; This function uses a non-reentrant model
  7529 ;;
  7530                           
  7531                           	psect	text27
  7532  0038C6                     __ptext27:
  7533                           	callstack 0
  7534  0038C6                     _isspace:
  7535                           	callstack 26
  7536  0038C6  0E01               	movlw	1
  7537  0038C8  6E07               	movwf	_isspace$946^0,c
  7538  0038CA  0E20               	movlw	32
  7539  0038CC  1801               	xorwf	isspace@c^0,w,c
  7540  0038CE  1002               	iorwf	(isspace@c+1)^0,w,c
  7541  0038D0  B4D8               	btfsc	status,2,c
  7542  0038D2  EF6D  F01C         	goto	u3941
  7543  0038D6  EF6F  F01C         	goto	u3940
  7544  0038DA                     u3941:
  7545  0038DA  EF88  F01C         	goto	l3391
  7546  0038DE                     u3940:
  7547  0038DE  0EF7               	movlw	247
  7548  0038E0  6E03               	movwf	??_isspace^0,c
  7549  0038E2  0EFF               	movlw	255
  7550  0038E4  6E04               	movwf	(??_isspace+1)^0,c
  7551  0038E6  C001  F005         	movff	isspace@c,??_isspace+2
  7552  0038EA  C002  F006         	movff	isspace@c+1,??_isspace+3
  7553  0038EE  5003               	movf	??_isspace^0,w,c
  7554  0038F0  2605               	addwf	(??_isspace+2)^0,f,c
  7555  0038F2  5004               	movf	(??_isspace+1)^0,w,c
  7556  0038F4  2206               	addwfc	(??_isspace+3)^0,f,c
  7557  0038F6  5006               	movf	(??_isspace+3)^0,w,c
  7558  0038F8  E109               	bnz	u3950
  7559  0038FA  0E05               	movlw	5
  7560  0038FC  5C05               	subwf	(??_isspace+2)^0,w,c
  7561  0038FE  A0D8               	btfss	status,0,c
  7562  003900  EF84  F01C         	goto	u3951
  7563  003904  EF86  F01C         	goto	u3950
  7564  003908                     u3951:
  7565  003908  EF88  F01C         	goto	l3391
  7566  00390C                     u3950:
  7567  00390C  0E00               	movlw	0
  7568  00390E  6E07               	movwf	_isspace$946^0,c
  7569  003910                     l3391:
  7570  003910  C007  F001         	movff	_isspace$946,?_isspace
  7571  003914  6A02               	clrf	(?_isspace+1)^0,c
  7572  003916  0012               	return		;funcret
  7573  003918                     __end_of_isspace:
  7574                           	callstack 0
  7575                           
  7576 ;; *************** function _isdigit *****************
  7577 ;; Defined at:
  7578 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isdigit.c"
  7579 ;; Parameters:    Size  Location     Type
  7580 ;;  c               2    0[COMRAM] int 
  7581 ;; Auto vars:     Size  Location     Type
  7582 ;;		None
  7583 ;; Return value:  Size  Location     Type
  7584 ;;                  2    0[COMRAM] int 
  7585 ;; Registers used:
  7586 ;;		wreg, status,2, status,0
  7587 ;; Tracked objects:
  7588 ;;		On entry : 0/0
  7589 ;;		On exit  : 0/0
  7590 ;;		Unchanged: 0/0
  7591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7592 ;;      Params:         2       0       0       0       0       0       0       0       0
  7593 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7594 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7595 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7596 ;;Total ram usage:        6 bytes
  7597 ;; Hardware stack levels used:    1
  7598 ;; This function calls:
  7599 ;;		Nothing
  7600 ;; This function is called by:
  7601 ;;		_vfpfcnvrt
  7602 ;;		_atoi
  7603 ;; This function uses a non-reentrant model
  7604 ;;
  7605                           
  7606                           	psect	text28
  7607  003A12                     __ptext28:
  7608                           	callstack 0
  7609  003A12                     _isdigit:
  7610                           	callstack 27
  7611  003A12  0ED0               	movlw	208
  7612  003A14  6E03               	movwf	??_isdigit^0,c
  7613  003A16  0EFF               	movlw	255
  7614  003A18  6E04               	movwf	(??_isdigit+1)^0,c
  7615  003A1A  C001  F005         	movff	isdigit@c,??_isdigit+2
  7616  003A1E  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7617  003A22  5003               	movf	??_isdigit^0,w,c
  7618  003A24  2605               	addwf	(??_isdigit+2)^0,f,c
  7619  003A26  5004               	movf	(??_isdigit+1)^0,w,c
  7620  003A28  2206               	addwfc	(??_isdigit+3)^0,f,c
  7621  003A2A  5006               	movf	(??_isdigit+3)^0,w,c
  7622  003A2C  E10A               	bnz	u3920
  7623  003A2E  0E0A               	movlw	10
  7624  003A30  5C05               	subwf	(??_isdigit+2)^0,w,c
  7625  003A32  A0D8               	btfss	status,0,c
  7626  003A34  EF1E  F01D         	goto	u3921
  7627  003A38  EF21  F01D         	goto	u3920
  7628  003A3C                     u3921:
  7629  003A3C  0E01               	movlw	1
  7630  003A3E  EF22  F01D         	goto	u3930
  7631  003A42                     u3920:
  7632  003A42  0E00               	movlw	0
  7633  003A44                     u3930:
  7634  003A44  6E01               	movwf	?_isdigit^0,c
  7635  003A46  6A02               	clrf	(?_isdigit+1)^0,c
  7636  003A48  0012               	return		;funcret
  7637  003A4A                     __end_of_isdigit:
  7638                           	callstack 0
  7639                           
  7640 ;; *************** function ___wmul *****************
  7641 ;; Defined at:
  7642 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
  7643 ;; Parameters:    Size  Location     Type
  7644 ;;  multiplier      2    0[COMRAM] unsigned int 
  7645 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7646 ;; Auto vars:     Size  Location     Type
  7647 ;;  product         2    4[COMRAM] unsigned int 
  7648 ;; Return value:  Size  Location     Type
  7649 ;;                  2    0[COMRAM] unsigned int 
  7650 ;; Registers used:
  7651 ;;		wreg, status,2, status,0, prodl, prodh
  7652 ;; Tracked objects:
  7653 ;;		On entry : 0/0
  7654 ;;		On exit  : 0/0
  7655 ;;		Unchanged: 0/0
  7656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7657 ;;      Params:         4       0       0       0       0       0       0       0       0
  7658 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7659 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7660 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7661 ;;Total ram usage:        6 bytes
  7662 ;; Hardware stack levels used:    1
  7663 ;; This function calls:
  7664 ;;		Nothing
  7665 ;; This function is called by:
  7666 ;;		_main
  7667 ;;		_atoi
  7668 ;; This function uses a non-reentrant model
  7669 ;;
  7670                           
  7671                           	psect	text29
  7672  003A80                     __ptext29:
  7673                           	callstack 0
  7674  003A80                     ___wmul:
  7675                           	callstack 26
  7676  003A80  5001               	movf	___wmul@multiplier^0,w,c
  7677  003A82  0203               	mulwf	___wmul@multiplicand^0,c
  7678  003A84  CFF3 F005          	movff	prodl,___wmul@product
  7679  003A88  CFF4 F006          	movff	prodh,___wmul@product+1
  7680  003A8C  5001               	movf	___wmul@multiplier^0,w,c
  7681  003A8E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7682  003A90  50F3               	movf	243,w,c
  7683  003A92  2606               	addwf	(___wmul@product+1)^0,f,c
  7684  003A94  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7685  003A96  0203               	mulwf	___wmul@multiplicand^0,c
  7686  003A98  50F3               	movf	243,w,c
  7687  003A9A  2606               	addwf	(___wmul@product+1)^0,f,c
  7688  003A9C  C005  F001         	movff	___wmul@product,?___wmul
  7689  003AA0  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7690  003AA4  0012               	return		;funcret
  7691  003AA6                     __end_of___wmul:
  7692                           	callstack 0
  7693                           
  7694 ;; *************** function ___xxtofl *****************
  7695 ;; Defined at:
  7696 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\xxtofl.c"
  7697 ;; Parameters:    Size  Location     Type
  7698 ;;  sign            1    wreg     unsigned char 
  7699 ;;  val             4    6[COMRAM] long 
  7700 ;; Auto vars:     Size  Location     Type
  7701 ;;  sign            1   14[COMRAM] unsigned char 
  7702 ;;  arg             4   16[COMRAM] unsigned long 
  7703 ;;  exp             1   15[COMRAM] unsigned char 
  7704 ;; Return value:  Size  Location     Type
  7705 ;;                  4    6[COMRAM] unsigned char 
  7706 ;; Registers used:
  7707 ;;		wreg, status,2, status,0
  7708 ;; Tracked objects:
  7709 ;;		On entry : 0/0
  7710 ;;		On exit  : 0/0
  7711 ;;		Unchanged: 0/0
  7712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7713 ;;      Params:         4       0       0       0       0       0       0       0       0
  7714 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7715 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7716 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7717 ;;Total ram usage:       14 bytes
  7718 ;; Hardware stack levels used:    1
  7719 ;; This function calls:
  7720 ;;		Nothing
  7721 ;; This function is called by:
  7722 ;;		_main
  7723 ;; This function uses a non-reentrant model
  7724 ;;
  7725                           
  7726                           	psect	text30
  7727  00277E                     __ptext30:
  7728                           	callstack 0
  7729  00277E                     ___xxtofl:
  7730                           	callstack 30
  7731                           
  7732                           ;incstack = 0
  7733                           ;___xxtofl@sign stored from wreg
  7734  00277E  6E0F               	movwf	___xxtofl@sign^0,c
  7735  002780  500F               	movf	___xxtofl@sign^0,w,c
  7736  002782  B4D8               	btfsc	status,2,c
  7737  002784  EFC6  F013         	goto	u4851
  7738  002788  EFC8  F013         	goto	u4850
  7739  00278C                     u4851:
  7740  00278C  EFEA  F013         	goto	l740
  7741  002790                     u4850:
  7742  002790  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  7743  002792  EFCF  F013         	goto	u4860
  7744  002796  EFCD  F013         	goto	u4861
  7745  00279A                     u4861:
  7746  00279A  EFEA  F013         	goto	l740
  7747  00279E                     u4860:
  7748  00279E  C007  F00B         	movff	___xxtofl@val,??___xxtofl
  7749  0027A2  C008  F00C         	movff	___xxtofl@val+1,??___xxtofl+1
  7750  0027A6  C009  F00D         	movff	___xxtofl@val+2,??___xxtofl+2
  7751  0027AA  C00A  F00E         	movff	___xxtofl@val+3,??___xxtofl+3
  7752  0027AE  1E0B               	comf	??___xxtofl^0,f,c
  7753  0027B0  1E0C               	comf	(??___xxtofl+1)^0,f,c
  7754  0027B2  1E0D               	comf	(??___xxtofl+2)^0,f,c
  7755  0027B4  1E0E               	comf	(??___xxtofl+3)^0,f,c
  7756  0027B6  2A0B               	incf	??___xxtofl^0,f,c
  7757  0027B8  0E00               	movlw	0
  7758  0027BA  220C               	addwfc	(??___xxtofl+1)^0,f,c
  7759  0027BC  220D               	addwfc	(??___xxtofl+2)^0,f,c
  7760  0027BE  220E               	addwfc	(??___xxtofl+3)^0,f,c
  7761  0027C0  C00B  F011         	movff	??___xxtofl,___xxtofl@arg
  7762  0027C4  C00C  F012         	movff	??___xxtofl+1,___xxtofl@arg+1
  7763  0027C8  C00D  F013         	movff	??___xxtofl+2,___xxtofl@arg+2
  7764  0027CC  C00E  F014         	movff	??___xxtofl+3,___xxtofl@arg+3
  7765  0027D0  EFF2  F013         	goto	l4009
  7766  0027D4                     l740:
  7767  0027D4  C007  F011         	movff	___xxtofl@val,___xxtofl@arg
  7768  0027D8  C008  F012         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7769  0027DC  C009  F013         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7770  0027E0  C00A  F014         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7771  0027E4                     l4009:
  7772  0027E4  5007               	movf	___xxtofl@val^0,w,c
  7773  0027E6  1008               	iorwf	(___xxtofl@val+1)^0,w,c
  7774  0027E8  1009               	iorwf	(___xxtofl@val+2)^0,w,c
  7775  0027EA  100A               	iorwf	(___xxtofl@val+3)^0,w,c
  7776  0027EC  A4D8               	btfss	status,2,c
  7777  0027EE  EFFB  F013         	goto	u4871
  7778  0027F2  EFFD  F013         	goto	u4870
  7779  0027F6                     u4871:
  7780  0027F6  EF07  F014         	goto	l4015
  7781  0027FA                     u4870:
  7782  0027FA  0E00               	movlw	0
  7783  0027FC  6E07               	movwf	?___xxtofl^0,c
  7784  0027FE  0E00               	movlw	0
  7785  002800  6E08               	movwf	(?___xxtofl+1)^0,c
  7786  002802  0E00               	movlw	0
  7787  002804  6E09               	movwf	(?___xxtofl+2)^0,c
  7788  002806  0E00               	movlw	0
  7789  002808  6E0A               	movwf	(?___xxtofl+3)^0,c
  7790  00280A  EF98  F014         	goto	l743
  7791  00280E                     l4015:
  7792  00280E  0E96               	movlw	150
  7793  002810  6E10               	movwf	___xxtofl@exp^0,c
  7794  002812  EF11  F014         	goto	l4019
  7795  002816                     l4017:
  7796  002816  2A10               	incf	___xxtofl@exp^0,f,c
  7797  002818  90D8               	bcf	status,0,c
  7798  00281A  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  7799  00281C  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  7800  00281E  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  7801  002820  3211               	rrcf	___xxtofl@arg^0,f,c
  7802  002822                     l4019:
  7803  002822  0E00               	movlw	0
  7804  002824  1411               	andwf	___xxtofl@arg^0,w,c
  7805  002826  6E0B               	movwf	??___xxtofl^0,c
  7806  002828  0E00               	movlw	0
  7807  00282A  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  7808  00282C  6E0C               	movwf	(??___xxtofl+1)^0,c
  7809  00282E  0E00               	movlw	0
  7810  002830  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  7811  002832  6E0D               	movwf	(??___xxtofl+2)^0,c
  7812  002834  0EFE               	movlw	254
  7813  002836  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  7814  002838  6E0E               	movwf	(??___xxtofl+3)^0,c
  7815  00283A  500B               	movf	??___xxtofl^0,w,c
  7816  00283C  100C               	iorwf	(??___xxtofl+1)^0,w,c
  7817  00283E  100D               	iorwf	(??___xxtofl+2)^0,w,c
  7818  002840  100E               	iorwf	(??___xxtofl+3)^0,w,c
  7819  002842  A4D8               	btfss	status,2,c
  7820  002844  EF26  F014         	goto	u4881
  7821  002848  EF28  F014         	goto	u4880
  7822  00284C                     u4881:
  7823  00284C  EF0B  F014         	goto	l4017
  7824  002850                     u4880:
  7825  002850  EF36  F014         	goto	l747
  7826  002854                     l4021:
  7827  002854  2A10               	incf	___xxtofl@exp^0,f,c
  7828  002856  0E01               	movlw	1
  7829  002858  2611               	addwf	___xxtofl@arg^0,f,c
  7830  00285A  0E00               	movlw	0
  7831  00285C  2212               	addwfc	(___xxtofl@arg+1)^0,f,c
  7832  00285E  2213               	addwfc	(___xxtofl@arg+2)^0,f,c
  7833  002860  2214               	addwfc	(___xxtofl@arg+3)^0,f,c
  7834  002862  90D8               	bcf	status,0,c
  7835  002864  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  7836  002866  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  7837  002868  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  7838  00286A  3211               	rrcf	___xxtofl@arg^0,f,c
  7839  00286C                     l747:
  7840  00286C  0E00               	movlw	0
  7841  00286E  1411               	andwf	___xxtofl@arg^0,w,c
  7842  002870  6E0B               	movwf	??___xxtofl^0,c
  7843  002872  0E00               	movlw	0
  7844  002874  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  7845  002876  6E0C               	movwf	(??___xxtofl+1)^0,c
  7846  002878  0E00               	movlw	0
  7847  00287A  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  7848  00287C  6E0D               	movwf	(??___xxtofl+2)^0,c
  7849  00287E  0EFF               	movlw	255
  7850  002880  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  7851  002882  6E0E               	movwf	(??___xxtofl+3)^0,c
  7852  002884  500B               	movf	??___xxtofl^0,w,c
  7853  002886  100C               	iorwf	(??___xxtofl+1)^0,w,c
  7854  002888  100D               	iorwf	(??___xxtofl+2)^0,w,c
  7855  00288A  100E               	iorwf	(??___xxtofl+3)^0,w,c
  7856  00288C  A4D8               	btfss	status,2,c
  7857  00288E  EF4B  F014         	goto	u4891
  7858  002892  EF4D  F014         	goto	u4890
  7859  002896                     u4891:
  7860  002896  EF2A  F014         	goto	l4021
  7861  00289A                     u4890:
  7862  00289A  EF55  F014         	goto	l4029
  7863  00289E                     l4027:
  7864  00289E  0610               	decf	___xxtofl@exp^0,f,c
  7865  0028A0  90D8               	bcf	status,0,c
  7866  0028A2  3611               	rlcf	___xxtofl@arg^0,f,c
  7867  0028A4  3612               	rlcf	(___xxtofl@arg+1)^0,f,c
  7868  0028A6  3613               	rlcf	(___xxtofl@arg+2)^0,f,c
  7869  0028A8  3614               	rlcf	(___xxtofl@arg+3)^0,f,c
  7870  0028AA                     l4029:
  7871  0028AA  BE13               	btfsc	(___xxtofl@arg+2)^0,7,c
  7872  0028AC  EF5A  F014         	goto	u4901
  7873  0028B0  EF5C  F014         	goto	u4900
  7874  0028B4                     u4901:
  7875  0028B4  EF64  F014         	goto	l754
  7876  0028B8                     u4900:
  7877  0028B8  0E02               	movlw	2
  7878  0028BA  6010               	cpfslt	___xxtofl@exp^0,c
  7879  0028BC  EF62  F014         	goto	u4911
  7880  0028C0  EF64  F014         	goto	u4910
  7881  0028C4                     u4911:
  7882  0028C4  EF4F  F014         	goto	l4027
  7883  0028C8                     u4910:
  7884  0028C8                     l754:
  7885  0028C8  B010               	btfsc	___xxtofl@exp^0,0,c
  7886  0028CA  EF69  F014         	goto	u4921
  7887  0028CE  EF6B  F014         	goto	u4920
  7888  0028D2                     u4921:
  7889  0028D2  EF6C  F014         	goto	l4035
  7890  0028D6                     u4920:
  7891  0028D6  9E13               	bcf	(___xxtofl@arg+2)^0,7,c
  7892  0028D8                     l4035:
  7893  0028D8  90D8               	bcf	status,0,c
  7894  0028DA  3210               	rrcf	___xxtofl@exp^0,f,c
  7895  0028DC  C010  F00B         	movff	___xxtofl@exp,??___xxtofl
  7896  0028E0  6A0C               	clrf	(??___xxtofl+1)^0,c
  7897  0028E2  6A0D               	clrf	(??___xxtofl+2)^0,c
  7898  0028E4  6A0E               	clrf	(??___xxtofl+3)^0,c
  7899  0028E6  C00B  F00E         	movff	??___xxtofl,??___xxtofl+3
  7900  0028EA  6A0D               	clrf	(??___xxtofl+2)^0,c
  7901  0028EC  6A0C               	clrf	(??___xxtofl+1)^0,c
  7902  0028EE  6A0B               	clrf	??___xxtofl^0,c
  7903  0028F0  500B               	movf	??___xxtofl^0,w,c
  7904  0028F2  1211               	iorwf	___xxtofl@arg^0,f,c
  7905  0028F4  500C               	movf	(??___xxtofl+1)^0,w,c
  7906  0028F6  1212               	iorwf	(___xxtofl@arg+1)^0,f,c
  7907  0028F8  500D               	movf	(??___xxtofl+2)^0,w,c
  7908  0028FA  1213               	iorwf	(___xxtofl@arg+2)^0,f,c
  7909  0028FC  500E               	movf	(??___xxtofl+3)^0,w,c
  7910  0028FE  1214               	iorwf	(___xxtofl@arg+3)^0,f,c
  7911  002900  500F               	movf	___xxtofl@sign^0,w,c
  7912  002902  B4D8               	btfsc	status,2,c
  7913  002904  EF86  F014         	goto	u4931
  7914  002908  EF88  F014         	goto	u4930
  7915  00290C                     u4931:
  7916  00290C  EF90  F014         	goto	l4045
  7917  002910                     u4930:
  7918  002910  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  7919  002912  EF8F  F014         	goto	u4940
  7920  002916  EF8D  F014         	goto	u4941
  7921  00291A                     u4941:
  7922  00291A  EF90  F014         	goto	l4045
  7923  00291E                     u4940:
  7924  00291E  8E14               	bsf	(___xxtofl@arg+3)^0,7,c
  7925  002920                     l4045:
  7926  002920  C011  F007         	movff	___xxtofl@arg,?___xxtofl
  7927  002924  C012  F008         	movff	___xxtofl@arg+1,?___xxtofl+1
  7928  002928  C013  F009         	movff	___xxtofl@arg+2,?___xxtofl+2
  7929  00292C  C014  F00A         	movff	___xxtofl@arg+3,?___xxtofl+3
  7930  002930                     l743:
  7931  002930  0012               	return		;funcret
  7932  002932                     __end_of___xxtofl:
  7933                           	callstack 0
  7934                           
  7935 ;; *************** function _Lcd_Out2 *****************
  7936 ;; Defined at:
  7937 ;;		line 115 in file "./flex_lcd.h"
  7938 ;; Parameters:    Size  Location     Type
  7939 ;;  y               1    wreg     unsigned char 
  7940 ;;  x               1    3[COMRAM] unsigned char 
  7941 ;;  buffer          2    4[COMRAM] PTR unsigned char 
  7942 ;;		 -> txt(20), 
  7943 ;; Auto vars:     Size  Location     Type
  7944 ;;  y               1    8[COMRAM] unsigned char 
  7945 ;;  data            1    9[COMRAM] unsigned char 
  7946 ;; Return value:  Size  Location     Type
  7947 ;;                  1    wreg      void 
  7948 ;; Registers used:
  7949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7950 ;; Tracked objects:
  7951 ;;		On entry : 0/0
  7952 ;;		On exit  : 0/0
  7953 ;;		Unchanged: 0/0
  7954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7955 ;;      Params:         3       0       0       0       0       0       0       0       0
  7956 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7957 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7958 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7959 ;;Total ram usage:        7 bytes
  7960 ;; Hardware stack levels used:    1
  7961 ;; Hardware stack levels required when called:    1
  7962 ;; This function calls:
  7963 ;;		_Lcd_Chr_CP
  7964 ;;		_Lcd_Cmd
  7965 ;; This function is called by:
  7966 ;;		_main
  7967 ;; This function uses a non-reentrant model
  7968 ;;
  7969                           
  7970                           	psect	text31
  7971  0036B8                     __ptext31:
  7972                           	callstack 0
  7973  0036B8                     _Lcd_Out2:
  7974                           	callstack 29
  7975                           
  7976                           ;incstack = 0
  7977                           ;Lcd_Out2@y stored from wreg
  7978  0036B8  6E09               	movwf	Lcd_Out2@y^0,c
  7979  0036BA                     
  7980                           ;./flex_lcd.h: 115: void Lcd_Out2(unsigned char y, unsigned char x, char *buffer);./flex
      +                          _lcd.h: 116: {;./flex_lcd.h: 117: unsigned char data;;./flex_lcd.h: 118: switch (y)
  7981  0036BA  EF73  F01B         	goto	l3977
  7982  0036BE                     l3967:
  7983  0036BE  5004               	movf	Lcd_Out2@x^0,w,c
  7984  0036C0  0F80               	addlw	128
  7985  0036C2  6E0A               	movwf	Lcd_Out2@data^0,c
  7986  0036C4  EF90  F01B         	goto	l3979
  7987  0036C8                     l3969:
  7988  0036C8  5004               	movf	Lcd_Out2@x^0,w,c
  7989  0036CA  0FC0               	addlw	192
  7990  0036CC  6E0A               	movwf	Lcd_Out2@data^0,c
  7991  0036CE  EF90  F01B         	goto	l3979
  7992  0036D2                     l3971:
  7993  0036D2  5004               	movf	Lcd_Out2@x^0,w,c
  7994  0036D4  0F94               	addlw	148
  7995  0036D6  6E0A               	movwf	Lcd_Out2@data^0,c
  7996  0036D8  EF90  F01B         	goto	l3979
  7997  0036DC                     l3973:
  7998  0036DC  5004               	movf	Lcd_Out2@x^0,w,c
  7999  0036DE  0FD4               	addlw	212
  8000  0036E0  6E0A               	movwf	Lcd_Out2@data^0,c
  8001  0036E2  EF90  F01B         	goto	l3979
  8002  0036E6                     l3977:
  8003  0036E6  5009               	movf	Lcd_Out2@y^0,w,c
  8004  0036E8  6E07               	movwf	??_Lcd_Out2^0,c
  8005  0036EA  6A08               	clrf	(??_Lcd_Out2+1)^0,c
  8006                           
  8007                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8008                           ; Switch size 1, requested type "simple"
  8009                           ; Number of cases is 1, Range of values is 0 to 0
  8010                           ; switch strategies available:
  8011                           ; Name         Instructions Cycles
  8012                           ; simple_byte            4     3 (average)
  8013                           ;	Chosen strategy is simple_byte
  8014  0036EC  5008               	movf	(??_Lcd_Out2+1)^0,w,c
  8015  0036EE  0A00               	xorlw	0	; case 0
  8016  0036F0  B4D8               	btfsc	status,2,c
  8017  0036F2  EF7D  F01B         	goto	l4145
  8018  0036F6  EF90  F01B         	goto	l3979
  8019  0036FA                     l4145:
  8020                           
  8021                           ; Switch size 1, requested type "simple"
  8022                           ; Number of cases is 4, Range of values is 1 to 4
  8023                           ; switch strategies available:
  8024                           ; Name         Instructions Cycles
  8025                           ; simple_byte           13     7 (average)
  8026                           ;	Chosen strategy is simple_byte
  8027  0036FA  5007               	movf	??_Lcd_Out2^0,w,c
  8028  0036FC  0A01               	xorlw	1	; case 1
  8029  0036FE  B4D8               	btfsc	status,2,c
  8030  003700  EF5F  F01B         	goto	l3967
  8031  003704  0A03               	xorlw	3	; case 2
  8032  003706  B4D8               	btfsc	status,2,c
  8033  003708  EF64  F01B         	goto	l3969
  8034  00370C  0A01               	xorlw	1	; case 3
  8035  00370E  B4D8               	btfsc	status,2,c
  8036  003710  EF69  F01B         	goto	l3971
  8037  003714  0A07               	xorlw	7	; case 4
  8038  003716  B4D8               	btfsc	status,2,c
  8039  003718  EF6E  F01B         	goto	l3973
  8040  00371C  EF90  F01B         	goto	l3979
  8041  003720                     l3979:
  8042                           
  8043                           ;./flex_lcd.h: 126: Lcd_Cmd(data);
  8044  003720  500A               	movf	Lcd_Out2@data^0,w,c
  8045  003722  ECF7  F015         	call	_Lcd_Cmd
  8046                           
  8047                           ;./flex_lcd.h: 127: while(*buffer)
  8048  003726  EF9E  F01B         	goto	l3985
  8049  00372A                     l3981:
  8050                           
  8051                           ;./flex_lcd.h: 128: {;./flex_lcd.h: 129:     Lcd_Chr_CP(*buffer);
  8052  00372A  C005  FFD9         	movff	Lcd_Out2@buffer,fsr2l
  8053  00372E  C006  FFDA         	movff	Lcd_Out2@buffer+1,fsr2h
  8054  003732  50DF               	movf	indf2,w,c
  8055  003734  EC61  F015         	call	_Lcd_Chr_CP
  8056  003738                     
  8057                           ;./flex_lcd.h: 130:     buffer++;
  8058  003738  4A05               	infsnz	Lcd_Out2@buffer^0,f,c
  8059  00373A  2A06               	incf	(Lcd_Out2@buffer+1)^0,f,c
  8060  00373C                     l3985:
  8061                           
  8062                           ;./flex_lcd.h: 127: while(*buffer)
  8063  00373C  C005  FFD9         	movff	Lcd_Out2@buffer,fsr2l
  8064  003740  C006  FFDA         	movff	Lcd_Out2@buffer+1,fsr2h
  8065  003744  50DF               	movf	indf2,w,c
  8066  003746  A4D8               	btfss	status,2,c
  8067  003748  EFA8  F01B         	goto	u4841
  8068  00374C  EFAA  F01B         	goto	u4840
  8069  003750                     u4841:
  8070  003750  EF95  F01B         	goto	l3981
  8071  003754                     u4840:
  8072  003754  0012               	return		;funcret
  8073  003756                     __end_of_Lcd_Out2:
  8074                           	callstack 0
  8075                           
  8076 ;; *************** function _Lcd_Chr_CP *****************
  8077 ;; Defined at:
  8078 ;;		line 136 in file "./flex_lcd.h"
  8079 ;; Parameters:    Size  Location     Type
  8080 ;;  data            1    wreg     unsigned char 
  8081 ;; Auto vars:     Size  Location     Type
  8082 ;;  data            1    2[COMRAM] unsigned char 
  8083 ;; Return value:  Size  Location     Type
  8084 ;;                  1    wreg      void 
  8085 ;; Registers used:
  8086 ;;		wreg, status,2, status,0
  8087 ;; Tracked objects:
  8088 ;;		On entry : 0/0
  8089 ;;		On exit  : 0/0
  8090 ;;		Unchanged: 0/0
  8091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8092 ;;      Params:         0       0       0       0       0       0       0       0       0
  8093 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8094 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8095 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8096 ;;Total ram usage:        3 bytes
  8097 ;; Hardware stack levels used:    1
  8098 ;; This function calls:
  8099 ;;		Nothing
  8100 ;; This function is called by:
  8101 ;;		_Lcd_Out2
  8102 ;;		_Lcd_Out
  8103 ;; This function uses a non-reentrant model
  8104 ;;
  8105                           
  8106                           	psect	text32
  8107  002AC2                     __ptext32:
  8108                           	callstack 0
  8109  002AC2                     _Lcd_Chr_CP:
  8110                           	callstack 29
  8111                           
  8112                           ;incstack = 0
  8113                           ;Lcd_Chr_CP@data stored from wreg
  8114  002AC2  6E03               	movwf	Lcd_Chr_CP@data^0,c
  8115  002AC4                     
  8116                           ;./flex_lcd.h: 137: PORTBbits.RB4 = 0; PORTBbits.RB5 = 1;
  8117  002AC4  9881               	bcf	129,4,c	;volatile
  8118  002AC6  8A81               	bsf	129,5,c	;volatile
  8119  002AC8                     
  8120                           ;./flex_lcd.h: 138: PORTBbits.RB0 = (data & 0b10000000)>>7; PORTBbits.RB1 = (data & 0b01
      +                          000000)>>6;
  8121  002AC8  6A01               	clrf	??_Lcd_Chr_CP^0,c
  8122  002ACA  AE03               	btfss	Lcd_Chr_CP@data^0,7,c
  8123  002ACC  D001               	bra	u4795
  8124  002ACE  2A01               	incf	??_Lcd_Chr_CP^0,f,c
  8125  002AD0                     u4795:
  8126  002AD0  0E01               	movlw	1
  8127  002AD2  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  8128  002AD4  5081               	movf	129,w,c	;volatile
  8129  002AD6  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  8130  002AD8  0BFE               	andlw	-2
  8131  002ADA  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  8132  002ADC  6E81               	movwf	129,c	;volatile
  8133  002ADE  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8134  002AE2  0E06               	movlw	6
  8135  002AE4  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
  8136  002AE6                     u4805:
  8137  002AE6  90D8               	bcf	status,0,c
  8138  002AE8  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  8139  002AEA  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  8140  002AEC  EF73  F015         	goto	u4805
  8141  002AF0  0E01               	movlw	1
  8142  002AF2  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  8143  002AF4  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  8144  002AF6  5081               	movf	129,w,c	;volatile
  8145  002AF8  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  8146  002AFA  0BFD               	andlw	-3
  8147  002AFC  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  8148  002AFE  6E81               	movwf	129,c	;volatile
  8149                           
  8150                           ;./flex_lcd.h: 139: PORTBbits.RB2 = (data & 0b00100000)>>5; PORTBbits.RB3 = (data & 0b00
      +                          010000)>>4;
  8151  002B00  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8152  002B04  0E05               	movlw	5
  8153  002B06  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
  8154  002B08                     u4815:
  8155  002B08  90D8               	bcf	status,0,c
  8156  002B0A  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  8157  002B0C  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  8158  002B0E  EF84  F015         	goto	u4815
  8159  002B12  0E01               	movlw	1
  8160  002B14  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  8161  002B16  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  8162  002B18  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  8163  002B1A  5081               	movf	129,w,c	;volatile
  8164  002B1C  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  8165  002B1E  0BFB               	andlw	-5
  8166  002B20  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  8167  002B22  6E81               	movwf	129,c	;volatile
  8168  002B24  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8169  002B28  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  8170  002B2A  0E0F               	movlw	15
  8171  002B2C  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  8172  002B2E  0E01               	movlw	1
  8173  002B30  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  8174  002B32  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  8175  002B34  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  8176  002B36  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  8177  002B38  5081               	movf	129,w,c	;volatile
  8178  002B3A  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  8179  002B3C  0BF7               	andlw	-9
  8180  002B3E  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  8181  002B40  6E81               	movwf	129,c	;volatile
  8182  002B42                     
  8183                           ;./flex_lcd.h: 140: _delay(10);
  8184  002B42  0E03               	movlw	3
  8185  002B44                     u4987:
  8186  002B44  2EE8               	decfsz	wreg,f,c
  8187  002B46  D7FE               	bra	u4987
  8188  002B48  F000               	nop	
  8189  002B4A                     
  8190                           ;./flex_lcd.h: 141: PORTBbits.RB4 = 1; _delay((unsigned long)((5)*(8000000L/4000000.0)))
      +                          ; PORTBbits.RB4 = 0;
  8191  002B4A  8881               	bsf	129,4,c	;volatile
  8192  002B4C  0E03               	movlw	3
  8193  002B4E                     u4997:
  8194  002B4E  2EE8               	decfsz	wreg,f,c
  8195  002B50  D7FE               	bra	u4997
  8196  002B52  F000               	nop	
  8197  002B54  9881               	bcf	129,4,c	;volatile
  8198                           
  8199                           ;./flex_lcd.h: 142: PORTBbits.RB0 = (data & 0b00001000)>>3; PORTBbits.RB1 = (data & 0b00
      +                          000100)>>2;
  8200  002B56  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8201  002B5A  90D8               	bcf	status,0,c
  8202  002B5C  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  8203  002B5E  90D8               	bcf	status,0,c
  8204  002B60  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  8205  002B62  90D8               	bcf	status,0,c
  8206  002B64  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  8207  002B66  0E01               	movlw	1
  8208  002B68  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  8209  002B6A  5081               	movf	129,w,c	;volatile
  8210  002B6C  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  8211  002B6E  0BFE               	andlw	-2
  8212  002B70  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  8213  002B72  6E81               	movwf	129,c	;volatile
  8214  002B74  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8215  002B78  90D8               	bcf	status,0,c
  8216  002B7A  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  8217  002B7C  90D8               	bcf	status,0,c
  8218  002B7E  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  8219  002B80  0E01               	movlw	1
  8220  002B82  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  8221  002B84  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  8222  002B86  5081               	movf	129,w,c	;volatile
  8223  002B88  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  8224  002B8A  0BFD               	andlw	-3
  8225  002B8C  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  8226  002B8E  6E81               	movwf	129,c	;volatile
  8227                           
  8228                           ;./flex_lcd.h: 143: PORTBbits.RB2 = (data & 0b00000010)>>1; PORTBbits.RB3 = (data & 0b00
      +                          000001);
  8229  002B90  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8230  002B94  90D8               	bcf	status,0,c
  8231  002B96  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  8232  002B98  0E01               	movlw	1
  8233  002B9A  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  8234  002B9C  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  8235  002B9E  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  8236  002BA0  5081               	movf	129,w,c	;volatile
  8237  002BA2  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  8238  002BA4  0BFB               	andlw	-5
  8239  002BA6  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  8240  002BA8  6E81               	movwf	129,c	;volatile
  8241  002BAA  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  8242  002BAE  0E01               	movlw	1
  8243  002BB0  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  8244  002BB2  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  8245  002BB4  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  8246  002BB6  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  8247  002BB8  5081               	movf	129,w,c	;volatile
  8248  002BBA  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  8249  002BBC  0BF7               	andlw	-9
  8250  002BBE  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  8251  002BC0  6E81               	movwf	129,c	;volatile
  8252  002BC2                     
  8253                           ;./flex_lcd.h: 144: _delay(10);
  8254  002BC2  0E03               	movlw	3
  8255  002BC4                     u5007:
  8256  002BC4  2EE8               	decfsz	wreg,f,c
  8257  002BC6  D7FE               	bra	u5007
  8258  002BC8  F000               	nop	
  8259  002BCA                     
  8260                           ;./flex_lcd.h: 145: PORTBbits.RB4 = 1; _delay((unsigned long)((5)*(8000000L/4000000.0)))
      +                          ; PORTBbits.RB4 = 0;
  8261  002BCA  8881               	bsf	129,4,c	;volatile
  8262  002BCC  0E03               	movlw	3
  8263  002BCE                     u5017:
  8264  002BCE  2EE8               	decfsz	wreg,f,c
  8265  002BD0  D7FE               	bra	u5017
  8266  002BD2  F000               	nop	
  8267  002BD4  9881               	bcf	129,4,c	;volatile
  8268  002BD6                     
  8269                           ;./flex_lcd.h: 146: _delay((unsigned long)((5)*(8000000L/4000000.0))); _delay((unsigned 
      +                          long)((5500)*(8000000L/4000000.0)));
  8270  002BD6  0E03               	movlw	3
  8271  002BD8                     u5027:
  8272  002BD8  2EE8               	decfsz	wreg,f,c
  8273  002BDA  D7FE               	bra	u5027
  8274  002BDC  F000               	nop	
  8275  002BDE  0E0F               	movlw	15
  8276  002BE0  6E01               	movwf	??_Lcd_Chr_CP^0,c
  8277  002BE2  0E48               	movlw	72
  8278  002BE4                     u5037:
  8279  002BE4  2EE8               	decfsz	wreg,f,c
  8280  002BE6  D7FE               	bra	u5037
  8281  002BE8  2E01               	decfsz	??_Lcd_Chr_CP^0,f,c
  8282  002BEA  D7FC               	bra	u5037
  8283  002BEC  0012               	return		;funcret
  8284  002BEE                     __end_of_Lcd_Chr_CP:
  8285                           	callstack 0
  8286                           
  8287 ;; *************** function _Lcd_Init *****************
  8288 ;; Defined at:
  8289 ;;		line 52 in file "./flex_lcd.h"
  8290 ;; Parameters:    Size  Location     Type
  8291 ;;		None
  8292 ;; Auto vars:     Size  Location     Type
  8293 ;;  data            1    4[COMRAM] unsigned char 
  8294 ;; Return value:  Size  Location     Type
  8295 ;;                  1    wreg      void 
  8296 ;; Registers used:
  8297 ;;		wreg, status,2, status,0, cstack
  8298 ;; Tracked objects:
  8299 ;;		On entry : 0/0
  8300 ;;		On exit  : 0/0
  8301 ;;		Unchanged: 0/0
  8302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8303 ;;      Params:         0       0       0       0       0       0       0       0       0
  8304 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8305 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8306 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8307 ;;Total ram usage:        2 bytes
  8308 ;; Hardware stack levels used:    1
  8309 ;; Hardware stack levels required when called:    1
  8310 ;; This function calls:
  8311 ;;		_Lcd_Cmd
  8312 ;; This function is called by:
  8313 ;;		_main
  8314 ;; This function uses a non-reentrant model
  8315 ;;
  8316                           
  8317                           	psect	text33
  8318  002D12                     __ptext33:
  8319                           	callstack 0
  8320  002D12                     _Lcd_Init:
  8321                           	callstack 29
  8322  002D12                     
  8323                           ;./flex_lcd.h: 53: unsigned char data;;./flex_lcd.h: 54: TRISBbits.TRISB0 = 0;
  8324  002D12  9093               	bcf	147,0,c	;volatile
  8325                           
  8326                           ;./flex_lcd.h: 55: TRISBbits.TRISB1 = 0;
  8327  002D14  9293               	bcf	147,1,c	;volatile
  8328                           
  8329                           ;./flex_lcd.h: 56: TRISBbits.TRISB2 = 0;
  8330  002D16  9493               	bcf	147,2,c	;volatile
  8331                           
  8332                           ;./flex_lcd.h: 57: TRISBbits.TRISB3 = 0;
  8333  002D18  9693               	bcf	147,3,c	;volatile
  8334                           
  8335                           ;./flex_lcd.h: 58: TRISBbits.TRISB4 = 0;
  8336  002D1A  9893               	bcf	147,4,c	;volatile
  8337                           
  8338                           ;./flex_lcd.h: 59: TRISBbits.TRISB5 = 0;
  8339  002D1C  9A93               	bcf	147,5,c	;volatile
  8340                           
  8341                           ;./flex_lcd.h: 60: PORTBbits.RB0 = 0;
  8342  002D1E  9081               	bcf	129,0,c	;volatile
  8343                           
  8344                           ;./flex_lcd.h: 61: PORTBbits.RB1 = 0;
  8345  002D20  9281               	bcf	129,1,c	;volatile
  8346                           
  8347                           ;./flex_lcd.h: 62: PORTBbits.RB2 = 0;
  8348  002D22  9481               	bcf	129,2,c	;volatile
  8349                           
  8350                           ;./flex_lcd.h: 63: PORTBbits.RB3 = 0;
  8351  002D24  9681               	bcf	129,3,c	;volatile
  8352                           
  8353                           ;./flex_lcd.h: 64: PORTBbits.RB4 = 0;
  8354  002D26  9881               	bcf	129,4,c	;volatile
  8355                           
  8356                           ;./flex_lcd.h: 65: PORTBbits.RB5 = 0;
  8357  002D28  9A81               	bcf	129,5,c	;volatile
  8358  002D2A                     
  8359                           ;./flex_lcd.h: 66: _delay((unsigned long)((5500)*(8000000L/4000000.0)));
  8360  002D2A  0E0F               	movlw	15
  8361  002D2C  6E04               	movwf	??_Lcd_Init^0,c
  8362  002D2E  0E48               	movlw	72
  8363  002D30                     u5047:
  8364  002D30  2EE8               	decfsz	wreg,f,c
  8365  002D32  D7FE               	bra	u5047
  8366  002D34  2E04               	decfsz	??_Lcd_Init^0,f,c
  8367  002D36  D7FC               	bra	u5047
  8368                           
  8369                           ;./flex_lcd.h: 67: _delay((unsigned long)((5500)*(8000000L/4000000.0)));
  8370  002D38  0E0F               	movlw	15
  8371  002D3A  6E04               	movwf	??_Lcd_Init^0,c
  8372  002D3C  0E48               	movlw	72
  8373  002D3E                     u5057:
  8374  002D3E  2EE8               	decfsz	wreg,f,c
  8375  002D40  D7FE               	bra	u5057
  8376  002D42  2E04               	decfsz	??_Lcd_Init^0,f,c
  8377  002D44  D7FC               	bra	u5057
  8378                           
  8379                           ;./flex_lcd.h: 68: _delay((unsigned long)((5500)*(8000000L/4000000.0)));
  8380  002D46  0E0F               	movlw	15
  8381  002D48  6E04               	movwf	??_Lcd_Init^0,c
  8382  002D4A  0E48               	movlw	72
  8383  002D4C                     u5067:
  8384  002D4C  2EE8               	decfsz	wreg,f,c
  8385  002D4E  D7FE               	bra	u5067
  8386  002D50  2E04               	decfsz	??_Lcd_Init^0,f,c
  8387  002D52  D7FC               	bra	u5067
  8388                           
  8389                           ;./flex_lcd.h: 69: _delay((unsigned long)((5500)*(8000000L/4000000.0)));
  8390  002D54  0E0F               	movlw	15
  8391  002D56  6E04               	movwf	??_Lcd_Init^0,c
  8392  002D58  0E48               	movlw	72
  8393  002D5A                     u5077:
  8394  002D5A  2EE8               	decfsz	wreg,f,c
  8395  002D5C  D7FE               	bra	u5077
  8396  002D5E  2E04               	decfsz	??_Lcd_Init^0,f,c
  8397  002D60  D7FC               	bra	u5077
  8398                           
  8399                           ;./flex_lcd.h: 70: _delay((unsigned long)((5500)*(8000000L/4000000.0)));
  8400  002D62  0E0F               	movlw	15
  8401  002D64  6E04               	movwf	??_Lcd_Init^0,c
  8402  002D66  0E48               	movlw	72
  8403  002D68                     u5087:
  8404  002D68  2EE8               	decfsz	wreg,f,c
  8405  002D6A  D7FE               	bra	u5087
  8406  002D6C  2E04               	decfsz	??_Lcd_Init^0,f,c
  8407  002D6E  D7FC               	bra	u5087
  8408                           
  8409                           ;./flex_lcd.h: 71: _delay((unsigned long)((5500)*(8000000L/4000000.0)));
  8410  002D70  0E0F               	movlw	15
  8411  002D72  6E04               	movwf	??_Lcd_Init^0,c
  8412  002D74  0E48               	movlw	72
  8413  002D76                     u5097:
  8414  002D76  2EE8               	decfsz	wreg,f,c
  8415  002D78  D7FE               	bra	u5097
  8416  002D7A  2E04               	decfsz	??_Lcd_Init^0,f,c
  8417  002D7C  D7FC               	bra	u5097
  8418  002D7E                     
  8419                           ;./flex_lcd.h: 72: for(data = 1; data < 4; data ++)
  8420  002D7E  0E01               	movlw	1
  8421  002D80  6E05               	movwf	Lcd_Init@data^0,c
  8422  002D82                     l31:
  8423                           
  8424                           ;./flex_lcd.h: 73: {;./flex_lcd.h: 74:     PORTBbits.RB0 = 0; PORTBbits.RB1 = 0; PORTBbi
      +                          ts.RB2 = 1; PORTBbits.RB3 = 1; PORTBbits.RB4 = 0;
  8425  002D82  9081               	bcf	129,0,c	;volatile
  8426  002D84  9281               	bcf	129,1,c	;volatile
  8427  002D86  8481               	bsf	129,2,c	;volatile
  8428  002D88  8681               	bsf	129,3,c	;volatile
  8429  002D8A  9881               	bcf	129,4,c	;volatile
  8430                           
  8431                           ;./flex_lcd.h: 75:     PORTBbits.RB5 = 0; PORTBbits.RB0 = 0; PORTBbits.RB1 = 0; PORTBbit
      +                          s.RB2 = 1; PORTBbits.RB3 = 1;
  8432  002D8C  9A81               	bcf	129,5,c	;volatile
  8433  002D8E  9081               	bcf	129,0,c	;volatile
  8434  002D90  9281               	bcf	129,1,c	;volatile
  8435  002D92  8481               	bsf	129,2,c	;volatile
  8436  002D94  8681               	bsf	129,3,c	;volatile
  8437                           
  8438                           ;./flex_lcd.h: 76:     PORTBbits.RB4 = 1; PORTBbits.RB5 = 0;
  8439  002D96  8881               	bsf	129,4,c	;volatile
  8440  002D98  9A81               	bcf	129,5,c	;volatile
  8441  002D9A                     
  8442                           ;./flex_lcd.h: 77:     _delay((unsigned long)((5)*(8000000L/4000000.0)));
  8443  002D9A  0E03               	movlw	3
  8444  002D9C                     u5107:
  8445  002D9C  2EE8               	decfsz	wreg,f,c
  8446  002D9E  D7FE               	bra	u5107
  8447  002DA0  F000               	nop	
  8448  002DA2                     
  8449                           ;./flex_lcd.h: 78:     PORTBbits.RB0 = 0; PORTBbits.RB1 = 0; PORTBbits.RB2 = 1; PORTBbit
      +                          s.RB3 = 1; PORTBbits.RB4 = 0;
  8450  002DA2  9081               	bcf	129,0,c	;volatile
  8451  002DA4  9281               	bcf	129,1,c	;volatile
  8452  002DA6  8481               	bsf	129,2,c	;volatile
  8453  002DA8  8681               	bsf	129,3,c	;volatile
  8454  002DAA  9881               	bcf	129,4,c	;volatile
  8455  002DAC                     
  8456                           ;./flex_lcd.h: 79:     PORTBbits.RB5 = 0;
  8457  002DAC  9A81               	bcf	129,5,c	;volatile
  8458                           
  8459                           ;./flex_lcd.h: 80:     _delay((unsigned long)((5500)*(8000000L/4000000.0)));
  8460  002DAE  0E0F               	movlw	15
  8461  002DB0  6E04               	movwf	??_Lcd_Init^0,c
  8462  002DB2  0E48               	movlw	72
  8463  002DB4                     u5117:
  8464  002DB4  2EE8               	decfsz	wreg,f,c
  8465  002DB6  D7FE               	bra	u5117
  8466  002DB8  2E04               	decfsz	??_Lcd_Init^0,f,c
  8467  002DBA  D7FC               	bra	u5117
  8468  002DBC                     
  8469                           ;./flex_lcd.h: 81: }
  8470  002DBC  2A05               	incf	Lcd_Init@data^0,f,c
  8471  002DBE  0E03               	movlw	3
  8472  002DC0  6405               	cpfsgt	Lcd_Init@data^0,c
  8473  002DC2  EFE5  F016         	goto	u4831
  8474  002DC6  EFE7  F016         	goto	u4830
  8475  002DCA                     u4831:
  8476  002DCA  EFC1  F016         	goto	l31
  8477  002DCE                     u4830:
  8478  002DCE                     
  8479                           ;./flex_lcd.h: 82: PORTBbits.RB0 = 0; PORTBbits.RB1 = 0; PORTBbits.RB2 = 1; PORTBbits.RB
      +                          3 = 0; PORTBbits.RB4 = 0; PORTBbits.RB5 = 0;
  8480  002DCE  9081               	bcf	129,0,c	;volatile
  8481  002DD0  9281               	bcf	129,1,c	;volatile
  8482  002DD2  8481               	bsf	129,2,c	;volatile
  8483  002DD4  9681               	bcf	129,3,c	;volatile
  8484  002DD6  9881               	bcf	129,4,c	;volatile
  8485  002DD8  9A81               	bcf	129,5,c	;volatile
  8486                           
  8487                           ;./flex_lcd.h: 83: PORTBbits.RB0 = 0; PORTBbits.RB1 = 0; PORTBbits.RB2 = 1; PORTBbits.RB
      +                          3 = 0; PORTBbits.RB4 = 1; PORTBbits.RB5 = 0;
  8488  002DDA  9081               	bcf	129,0,c	;volatile
  8489  002DDC  9281               	bcf	129,1,c	;volatile
  8490  002DDE  8481               	bsf	129,2,c	;volatile
  8491  002DE0  9681               	bcf	129,3,c	;volatile
  8492  002DE2  8881               	bsf	129,4,c	;volatile
  8493  002DE4  9A81               	bcf	129,5,c	;volatile
  8494  002DE6                     
  8495                           ;./flex_lcd.h: 84: _delay((unsigned long)((5)*(8000000L/4000000.0)));
  8496  002DE6  0E03               	movlw	3
  8497  002DE8                     u5127:
  8498  002DE8  2EE8               	decfsz	wreg,f,c
  8499  002DEA  D7FE               	bra	u5127
  8500  002DEC  F000               	nop	
  8501  002DEE                     
  8502                           ;./flex_lcd.h: 85: PORTBbits.RB0 = 0; PORTBbits.RB1 = 0; PORTBbits.RB2 = 1; PORTBbits.RB
      +                          3 = 0; PORTBbits.RB4 = 0; PORTBbits.RB5 = 0;
  8503  002DEE  9081               	bcf	129,0,c	;volatile
  8504  002DF0  9281               	bcf	129,1,c	;volatile
  8505  002DF2  8481               	bsf	129,2,c	;volatile
  8506  002DF4  9681               	bcf	129,3,c	;volatile
  8507  002DF6  9881               	bcf	129,4,c	;volatile
  8508  002DF8  9A81               	bcf	129,5,c	;volatile
  8509                           
  8510                           ;./flex_lcd.h: 86: _delay((unsigned long)((5500)*(8000000L/4000000.0)));
  8511  002DFA  0E0F               	movlw	15
  8512  002DFC  6E04               	movwf	??_Lcd_Init^0,c
  8513  002DFE  0E48               	movlw	72
  8514  002E00                     u5137:
  8515  002E00  2EE8               	decfsz	wreg,f,c
  8516  002E02  D7FE               	bra	u5137
  8517  002E04  2E04               	decfsz	??_Lcd_Init^0,f,c
  8518  002E06  D7FC               	bra	u5137
  8519  002E08  0E28               	movlw	40
  8520  002E0A  ECF7  F015         	call	_Lcd_Cmd
  8521  002E0E  0E10               	movlw	16
  8522  002E10  ECF7  F015         	call	_Lcd_Cmd
  8523  002E14  0E01               	movlw	1
  8524  002E16  ECF7  F015         	call	_Lcd_Cmd
  8525  002E1A  0E0F               	movlw	15
  8526  002E1C  ECF7  F015         	call	_Lcd_Cmd
  8527  002E20  0012               	return		;funcret
  8528  002E22                     __end_of_Lcd_Init:
  8529                           	callstack 0
  8530                           
  8531 ;; *************** function _Lcd_Cmd *****************
  8532 ;; Defined at:
  8533 ;;		line 150 in file "./flex_lcd.h"
  8534 ;; Parameters:    Size  Location     Type
  8535 ;;  data            1    wreg     unsigned char 
  8536 ;; Auto vars:     Size  Location     Type
  8537 ;;  data            1    2[COMRAM] unsigned char 
  8538 ;; Return value:  Size  Location     Type
  8539 ;;                  1    wreg      void 
  8540 ;; Registers used:
  8541 ;;		wreg, status,2, status,0
  8542 ;; Tracked objects:
  8543 ;;		On entry : 0/0
  8544 ;;		On exit  : 0/0
  8545 ;;		Unchanged: 0/0
  8546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8547 ;;      Params:         0       0       0       0       0       0       0       0       0
  8548 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8549 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8550 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8551 ;;Total ram usage:        3 bytes
  8552 ;; Hardware stack levels used:    1
  8553 ;; This function calls:
  8554 ;;		Nothing
  8555 ;; This function is called by:
  8556 ;;		_Lcd_Init
  8557 ;;		_Lcd_Out2
  8558 ;;		_main
  8559 ;;		_Lcd_Out
  8560 ;; This function uses a non-reentrant model
  8561 ;;
  8562                           
  8563                           	psect	text34
  8564  002BEE                     __ptext34:
  8565                           	callstack 0
  8566  002BEE                     _Lcd_Cmd:
  8567                           	callstack 29
  8568                           
  8569                           ;incstack = 0
  8570                           ;Lcd_Cmd@data stored from wreg
  8571  002BEE  6E03               	movwf	Lcd_Cmd@data^0,c
  8572  002BF0                     
  8573                           ;./flex_lcd.h: 151: PORTBbits.RB4 = 0; PORTBbits.RB5 = 0;
  8574  002BF0  9881               	bcf	129,4,c	;volatile
  8575  002BF2  9A81               	bcf	129,5,c	;volatile
  8576  002BF4                     
  8577                           ;./flex_lcd.h: 152: PORTBbits.RB0 = (data & 0b10000000)>>7; PORTBbits.RB1 = (data & 0b01
      +                          000000)>>6;
  8578  002BF4  6A01               	clrf	??_Lcd_Cmd^0,c
  8579  002BF6  AE03               	btfss	Lcd_Cmd@data^0,7,c
  8580  002BF8  D001               	bra	u4765
  8581  002BFA  2A01               	incf	??_Lcd_Cmd^0,f,c
  8582  002BFC                     u4765:
  8583  002BFC  0E01               	movlw	1
  8584  002BFE  1601               	andwf	??_Lcd_Cmd^0,f,c
  8585  002C00  5081               	movf	129,w,c	;volatile
  8586  002C02  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8587  002C04  0BFE               	andlw	-2
  8588  002C06  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8589  002C08  6E81               	movwf	129,c	;volatile
  8590  002C0A  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8591  002C0E  0E06               	movlw	6
  8592  002C10  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  8593  002C12                     u4775:
  8594  002C12  90D8               	bcf	status,0,c
  8595  002C14  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8596  002C16  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  8597  002C18  EF09  F016         	goto	u4775
  8598  002C1C  0E01               	movlw	1
  8599  002C1E  1601               	andwf	??_Lcd_Cmd^0,f,c
  8600  002C20  4601               	rlncf	??_Lcd_Cmd^0,f,c
  8601  002C22  5081               	movf	129,w,c	;volatile
  8602  002C24  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8603  002C26  0BFD               	andlw	-3
  8604  002C28  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8605  002C2A  6E81               	movwf	129,c	;volatile
  8606                           
  8607                           ;./flex_lcd.h: 153: PORTBbits.RB2 = (data & 0b00100000)>>5; PORTBbits.RB3 = (data & 0b00
      +                          010000)>>4;
  8608  002C2C  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8609  002C30  0E05               	movlw	5
  8610  002C32  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  8611  002C34                     u4785:
  8612  002C34  90D8               	bcf	status,0,c
  8613  002C36  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8614  002C38  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  8615  002C3A  EF1A  F016         	goto	u4785
  8616  002C3E  0E01               	movlw	1
  8617  002C40  1601               	andwf	??_Lcd_Cmd^0,f,c
  8618  002C42  4601               	rlncf	??_Lcd_Cmd^0,f,c
  8619  002C44  4601               	rlncf	??_Lcd_Cmd^0,f,c
  8620  002C46  5081               	movf	129,w,c	;volatile
  8621  002C48  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8622  002C4A  0BFB               	andlw	-5
  8623  002C4C  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8624  002C4E  6E81               	movwf	129,c	;volatile
  8625  002C50  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8626  002C54  3A01               	swapf	??_Lcd_Cmd^0,f,c
  8627  002C56  0E0F               	movlw	15
  8628  002C58  1601               	andwf	??_Lcd_Cmd^0,f,c
  8629  002C5A  0E01               	movlw	1
  8630  002C5C  1601               	andwf	??_Lcd_Cmd^0,f,c
  8631  002C5E  4601               	rlncf	??_Lcd_Cmd^0,f,c
  8632  002C60  4601               	rlncf	??_Lcd_Cmd^0,f,c
  8633  002C62  4601               	rlncf	??_Lcd_Cmd^0,f,c
  8634  002C64  5081               	movf	129,w,c	;volatile
  8635  002C66  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8636  002C68  0BF7               	andlw	-9
  8637  002C6A  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8638  002C6C  6E81               	movwf	129,c	;volatile
  8639  002C6E                     
  8640                           ;./flex_lcd.h: 154: _delay(10);
  8641  002C6E  0E03               	movlw	3
  8642  002C70                     u5147:
  8643  002C70  2EE8               	decfsz	wreg,f,c
  8644  002C72  D7FE               	bra	u5147
  8645  002C74  F000               	nop	
  8646  002C76                     
  8647                           ;./flex_lcd.h: 155: PORTBbits.RB4 = 1; _delay((unsigned long)((5)*(8000000L/4000000.0)))
      +                          ; PORTBbits.RB4 = 0;
  8648  002C76  8881               	bsf	129,4,c	;volatile
  8649  002C78  0E03               	movlw	3
  8650  002C7A                     u5157:
  8651  002C7A  2EE8               	decfsz	wreg,f,c
  8652  002C7C  D7FE               	bra	u5157
  8653  002C7E  F000               	nop	
  8654  002C80  9881               	bcf	129,4,c	;volatile
  8655                           
  8656                           ;./flex_lcd.h: 156: PORTBbits.RB0 = (data & 0b00001000)>>3; PORTBbits.RB1 = (data & 0b00
      +                          000100)>>2;
  8657  002C82  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8658  002C86  90D8               	bcf	status,0,c
  8659  002C88  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8660  002C8A  90D8               	bcf	status,0,c
  8661  002C8C  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8662  002C8E  90D8               	bcf	status,0,c
  8663  002C90  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8664  002C92  0E01               	movlw	1
  8665  002C94  1601               	andwf	??_Lcd_Cmd^0,f,c
  8666  002C96  5081               	movf	129,w,c	;volatile
  8667  002C98  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8668  002C9A  0BFE               	andlw	-2
  8669  002C9C  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8670  002C9E  6E81               	movwf	129,c	;volatile
  8671  002CA0  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8672  002CA4  90D8               	bcf	status,0,c
  8673  002CA6  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8674  002CA8  90D8               	bcf	status,0,c
  8675  002CAA  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8676  002CAC  0E01               	movlw	1
  8677  002CAE  1601               	andwf	??_Lcd_Cmd^0,f,c
  8678  002CB0  4601               	rlncf	??_Lcd_Cmd^0,f,c
  8679  002CB2  5081               	movf	129,w,c	;volatile
  8680  002CB4  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8681  002CB6  0BFD               	andlw	-3
  8682  002CB8  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8683  002CBA  6E81               	movwf	129,c	;volatile
  8684                           
  8685                           ;./flex_lcd.h: 157: PORTBbits.RB2 = (data & 0b00000010)>>1; PORTBbits.RB3 = (data & 0b00
      +                          000001);
  8686  002CBC  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8687  002CC0  90D8               	bcf	status,0,c
  8688  002CC2  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8689  002CC4  0E01               	movlw	1
  8690  002CC6  1601               	andwf	??_Lcd_Cmd^0,f,c
  8691  002CC8  4601               	rlncf	??_Lcd_Cmd^0,f,c
  8692  002CCA  4601               	rlncf	??_Lcd_Cmd^0,f,c
  8693  002CCC  5081               	movf	129,w,c	;volatile
  8694  002CCE  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8695  002CD0  0BFB               	andlw	-5
  8696  002CD2  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8697  002CD4  6E81               	movwf	129,c	;volatile
  8698  002CD6  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8699  002CDA  0E01               	movlw	1
  8700  002CDC  1601               	andwf	??_Lcd_Cmd^0,f,c
  8701  002CDE  4601               	rlncf	??_Lcd_Cmd^0,f,c
  8702  002CE0  4601               	rlncf	??_Lcd_Cmd^0,f,c
  8703  002CE2  4601               	rlncf	??_Lcd_Cmd^0,f,c
  8704  002CE4  5081               	movf	129,w,c	;volatile
  8705  002CE6  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8706  002CE8  0BF7               	andlw	-9
  8707  002CEA  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8708  002CEC  6E81               	movwf	129,c	;volatile
  8709  002CEE                     
  8710                           ;./flex_lcd.h: 158: _delay(10);
  8711  002CEE  0E03               	movlw	3
  8712  002CF0                     u5167:
  8713  002CF0  2EE8               	decfsz	wreg,f,c
  8714  002CF2  D7FE               	bra	u5167
  8715  002CF4  F000               	nop	
  8716  002CF6                     
  8717                           ;./flex_lcd.h: 159: PORTBbits.RB4 = 1; _delay((unsigned long)((5)*(8000000L/4000000.0)))
      +                          ; PORTBbits.RB4 = 0;
  8718  002CF6  8881               	bsf	129,4,c	;volatile
  8719  002CF8  0E03               	movlw	3
  8720  002CFA                     u5177:
  8721  002CFA  2EE8               	decfsz	wreg,f,c
  8722  002CFC  D7FE               	bra	u5177
  8723  002CFE  F000               	nop	
  8724  002D00  9881               	bcf	129,4,c	;volatile
  8725  002D02                     
  8726                           ;./flex_lcd.h: 160: _delay((unsigned long)((5500)*(8000000L/4000000.0)));
  8727  002D02  0E0F               	movlw	15
  8728  002D04  6E01               	movwf	??_Lcd_Cmd^0,c
  8729  002D06  0E48               	movlw	72
  8730  002D08                     u5187:
  8731  002D08  2EE8               	decfsz	wreg,f,c
  8732  002D0A  D7FE               	bra	u5187
  8733  002D0C  2E01               	decfsz	??_Lcd_Cmd^0,f,c
  8734  002D0E  D7FC               	bra	u5187
  8735  002D10  0012               	return		;funcret
  8736  002D12                     __end_of_Lcd_Cmd:
  8737                           	callstack 0
  8738                           
  8739                           	psect	rparam
  8740  0000                     
  8741                           	psect	idloc
  8742                           
  8743                           ;Config register IDLOC0 @ 0x200000
  8744                           ;	unspecified, using default values
  8745  200000                     	org	2097152
  8746  200000  FF                 	db	255
  8747                           
  8748                           ;Config register IDLOC1 @ 0x200001
  8749                           ;	unspecified, using default values
  8750  200001                     	org	2097153
  8751  200001  FF                 	db	255
  8752                           
  8753                           ;Config register IDLOC2 @ 0x200002
  8754                           ;	unspecified, using default values
  8755  200002                     	org	2097154
  8756  200002  FF                 	db	255
  8757                           
  8758                           ;Config register IDLOC3 @ 0x200003
  8759                           ;	unspecified, using default values
  8760  200003                     	org	2097155
  8761  200003  FF                 	db	255
  8762                           
  8763                           ;Config register IDLOC4 @ 0x200004
  8764                           ;	unspecified, using default values
  8765  200004                     	org	2097156
  8766  200004  FF                 	db	255
  8767                           
  8768                           ;Config register IDLOC5 @ 0x200005
  8769                           ;	unspecified, using default values
  8770  200005                     	org	2097157
  8771  200005  FF                 	db	255
  8772                           
  8773                           ;Config register IDLOC6 @ 0x200006
  8774                           ;	unspecified, using default values
  8775  200006                     	org	2097158
  8776  200006  FF                 	db	255
  8777                           
  8778                           ;Config register IDLOC7 @ 0x200007
  8779                           ;	unspecified, using default values
  8780  200007                     	org	2097159
  8781  200007  FF                 	db	255
  8782                           
  8783                           	psect	config
  8784                           
  8785                           ;Config register CONFIG1L @ 0x300000
  8786                           ;	PLL Prescaler Selection bits
  8787                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  8788                           ;	System Clock Postscaler Selection bits
  8789                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  8790                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8791                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  8792  300000                     	org	3145728
  8793  300000  00                 	db	0
  8794                           
  8795                           ;Config register CONFIG1H @ 0x300001
  8796                           ;	Oscillator Selection bits
  8797                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  8798                           ;	Fail-Safe Clock Monitor Enable bit
  8799                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8800                           ;	Internal/External Oscillator Switchover bit
  8801                           ;	IESO = ON, Oscillator Switchover mode enabled
  8802  300001                     	org	3145729
  8803  300001  88                 	db	136
  8804                           
  8805                           ;Config register CONFIG2L @ 0x300002
  8806                           ;	Power-up Timer Enable bit
  8807                           ;	PWRT = ON, PWRT enabled
  8808                           ;	Brown-out Reset Enable bits
  8809                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  8810                           ;	Brown-out Reset Voltage bits
  8811                           ;	BORV = 3, Minimum setting 2.05V
  8812                           ;	USB Voltage Regulator Enable bit
  8813                           ;	VREGEN = OFF, USB voltage regulator disabled
  8814  300002                     	org	3145730
  8815  300002  18                 	db	24
  8816                           
  8817                           ;Config register CONFIG2H @ 0x300003
  8818                           ;	Watchdog Timer Enable bit
  8819                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8820                           ;	Watchdog Timer Postscale Select bits
  8821                           ;	WDTPS = 32768, 1:32768
  8822  300003                     	org	3145731
  8823  300003  1E                 	db	30
  8824                           
  8825                           ; Padding undefined space
  8826  300004                     	org	3145732
  8827  300004  FF                 	db	255
  8828                           
  8829                           ;Config register CONFIG3H @ 0x300005
  8830                           ;	CCP2 MUX bit
  8831                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  8832                           ;	PORTB A/D Enable bit
  8833                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8834                           ;	Low-Power Timer 1 Oscillator Enable bit
  8835                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8836                           ;	MCLR Pin Enable bit
  8837                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  8838  300005                     	org	3145733
  8839  300005  01                 	db	1
  8840                           
  8841                           ;Config register CONFIG4L @ 0x300006
  8842                           ;	Stack Full/Underflow Reset Enable bit
  8843                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8844                           ;	Single-Supply ICSP Enable bit
  8845                           ;	LVP = OFF, Single-Supply ICSP disabled
  8846                           ;	Extended Instruction Set Enable bit
  8847                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8848                           ;	Background Debugger Enable bit
  8849                           ;	DEBUG = 0x1, unprogrammed default
  8850  300006                     	org	3145734
  8851  300006  81                 	db	129
  8852                           
  8853                           ; Padding undefined space
  8854  300007                     	org	3145735
  8855  300007  FF                 	db	255
  8856                           
  8857                           ;Config register CONFIG5L @ 0x300008
  8858                           ;	Code Protection bit
  8859                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  8860                           ;	Code Protection bit
  8861                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  8862                           ;	Code Protection bit
  8863                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  8864                           ;	Code Protection bit
  8865                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  8866  300008                     	org	3145736
  8867  300008  0F                 	db	15
  8868                           
  8869                           ;Config register CONFIG5H @ 0x300009
  8870                           ;	Boot Block Code Protection bit
  8871                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  8872                           ;	Data EEPROM Code Protection bit
  8873                           ;	CPD = OFF, Data EEPROM is not code-protected
  8874  300009                     	org	3145737
  8875  300009  C0                 	db	192
  8876                           
  8877                           ;Config register CONFIG6L @ 0x30000A
  8878                           ;	Write Protection bit
  8879                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  8880                           ;	Write Protection bit
  8881                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  8882                           ;	Write Protection bit
  8883                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  8884                           ;	Write Protection bit
  8885                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  8886  30000A                     	org	3145738
  8887  30000A  0F                 	db	15
  8888                           
  8889                           ;Config register CONFIG6H @ 0x30000B
  8890                           ;	Configuration Register Write Protection bit
  8891                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8892                           ;	Boot Block Write Protection bit
  8893                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  8894                           ;	Data EEPROM Write Protection bit
  8895                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8896  30000B                     	org	3145739
  8897  30000B  E0                 	db	224
  8898                           
  8899                           ;Config register CONFIG7L @ 0x30000C
  8900                           ;	Table Read Protection bit
  8901                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8902                           ;	Table Read Protection bit
  8903                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8904                           ;	Table Read Protection bit
  8905                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8906                           ;	Table Read Protection bit
  8907                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8908  30000C                     	org	3145740
  8909  30000C  0F                 	db	15
  8910                           
  8911                           ;Config register CONFIG7H @ 0x30000D
  8912                           ;	Boot Block Table Read Protection bit
  8913                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8914  30000D                     	org	3145741
  8915  30000D  40                 	db	64
  8916                           tosu	equ	0xFFF
  8917                           tosh	equ	0xFFE
  8918                           tosl	equ	0xFFD
  8919                           stkptr	equ	0xFFC
  8920                           pclatu	equ	0xFFB
  8921                           pclath	equ	0xFFA
  8922                           pcl	equ	0xFF9
  8923                           tblptru	equ	0xFF8
  8924                           tblptrh	equ	0xFF7
  8925                           tblptrl	equ	0xFF6
  8926                           tablat	equ	0xFF5
  8927                           prodh	equ	0xFF4
  8928                           prodl	equ	0xFF3
  8929                           indf0	equ	0xFEF
  8930                           postinc0	equ	0xFEE
  8931                           postdec0	equ	0xFED
  8932                           preinc0	equ	0xFEC
  8933                           plusw0	equ	0xFEB
  8934                           fsr0h	equ	0xFEA
  8935                           fsr0l	equ	0xFE9
  8936                           wreg	equ	0xFE8
  8937                           indf1	equ	0xFE7
  8938                           postinc1	equ	0xFE6
  8939                           postdec1	equ	0xFE5
  8940                           preinc1	equ	0xFE4
  8941                           plusw1	equ	0xFE3
  8942                           fsr1h	equ	0xFE2
  8943                           fsr1l	equ	0xFE1
  8944                           bsr	equ	0xFE0
  8945                           indf2	equ	0xFDF
  8946                           postinc2	equ	0xFDE
  8947                           postdec2	equ	0xFDD
  8948                           preinc2	equ	0xFDC
  8949                           plusw2	equ	0xFDB
  8950                           fsr2h	equ	0xFDA
  8951                           fsr2l	equ	0xFD9
  8952                           status	equ	0xFD8

Data Sizes:
    Strings     36
    Constant    0
    Data        0
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     88     130
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> txt(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> txt(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S726_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> txt(BANK0[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> txt(BANK0[20]), 

    Lcd_Out2@buffer	PTR unsigned char  size(2) Largest target is 20
		 -> txt(BANK0[20]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___xxtofl
    _atoi->_isspace
    ___xxtofl->___wmul
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    _main->_sprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   32615
                                             86 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                           _Lcd_Out2
                            ___fldiv
                             ___wmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   28420
                                             68 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   28063
                                             87 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   27691
                                             77 COMRAM    10     4      6
                                             56 BANK0     12    12      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   22240
                                             65 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             45 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2656
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             20 COMRAM    25    17      8
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1304
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              6 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             7     4      3     685
                                              3 COMRAM     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   ___fldiv
     ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___wmul
   ___xxtofl
     ___wmul (ARG)
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
             ___wmul (ARG)
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___wmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     58      82       5       81.2%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     131      20        0.0%
DATA                 0      0     131       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Sep 16 16:51:45 2020

           ___fldiv@aexp 002D             ___fldiv@bexp 002C             ___fldiv@sign 0025  
                     l31 2D82                       l32 2DCE                       l33 2E20  
                     l62 2BEC                       l65 2D10                       l59 3754  
                     l85 3AA4                       l77 2E6C                       l79 2E7A  
           ___awdiv@sign 0006      ___wmul@multiplicand 0003                      l316 355C  
                    l350 30EE                      l344 36B6                      l329 360C  
                    l355 3134                      l613 166C                      l630 1786  
                    l622 193C                      l614 165A                      l382 3030  
                    l703 21D0                      l359 3A10                      l615 1620  
                    l640 1844                      l706 2062                      l740 27D4  
                    l716 2192                      l708 20DA                      l804 341A  
                    l709 20C8                      l743 2930                      l639 1856  
                    l655 395C                      l807 345C                      l680 2488  
                    l672 238E                      l681 2476                      l809 3498  
                    l754 28C8                      l747 286C                      l667 256A  
                    l827 147C                      l763 38C4                      l932 37AE  
                    l669 23CA                      l845 0C12                      l933 37B6  
                    l678 2410                      l926 1CF0                      l943 3232  
                    l919 1DA6                      l873 1052                      l699 1E6C  
                    l972 2AB8                      l981 277C                      l991 3A48  
                    l975 2AC0                      l984 26C0                      l999 3916  
                    _pad 33D4                      _txt 00CE             ___awmod@sign 0006  
                    wreg 000FE8             ___flmul@aexp 0012             ___flmul@bexp 0013  
           ___flmul@sign 000D             ___flmul@temp 0018             ___flmul@prod 0014  
           ___fltol@exp1 000A                     l1020 33D2                     l1005 39D8  
                   l1031 3AC8                     l1043 3A7E                     l1028 39A0  
                   l1037 3872                     l1062 3816                     l1047 3308  
                   l3001 1DFA                     l1057 380E                     l3011 1E26  
                   l3003 1E0A                     l3101 217A                     l3021 1E7C  
                   l3013 1E36                     l3005 1E10                     l3103 2196  
                   l3111 21BC                     l3031 1EB6                     l3023 1E8C  
                   l3015 1E46                     l3007 1E16                     l3113 21C0  
                   l3105 21A6                     l3041 1F08                     l3033 1ECC  
                   l3017 1E56                     l3009 1E24                     l4011 27FA  
                   l4003 2780                     l3131 34B8                     l3123 349A  
                   l3211 368A                     l3203 360E                     l3107 21B4  
                   l3051 1F4E                     l3043 1F16                     l3035 1ED8  
                   l3027 1EA0                     l3019 1E5C                     l4021 2854  
                   l4005 2790                     l3141 34EC                     l3133 34C6  
                   l3125 349E                     l3213 36AE                     l3205 363C  
                   l3221 3060                     l3109 21B6                     l3061 1FBC  
                   l3053 1F68                     l3045 1F22                     l3037 1EF0  
                   l3029 1EAC                     l3117 3918                     l3301 3412  
                   l4101 2F20                     l4031 28B8                     l4023 2856  
                   l4015 280E                     l4007 279E                     l3151 3526  
                   l3143 34F4                     l3135 34CE                     l3127 34AC  
                   l3215 36B4                     l3207 364C                     l3231 30CE  
                   l3223 3070                     l3071 2052                     l3063 1FE6  
                   l3055 1F78                     l3047 1F32                     l3039 1EFC  
                   l3119 3928                     l3311 3480                     l3303 3426  
                   l4041 2910                     l4033 28D6                     l4025 2862  
                   l4017 2816                     l4009 27E4                     l3161 354C  
                   l3153 352E                     l3145 34FC                     l3137 34D2  
                   l3129 34B4                     l3209 367A                     l3233 30DC  
                   l3225 309E                     l3081 2092                     l3073 2060  
                   l3065 201C                     l3057 1F94                     l3049 1F3E  
                   l3241 39DA                     l3321 31BC                     l3305 343A  
                   l3401 084E                     l4043 291E                     l4035 28D8  
                   l4027 289E                     l4019 2822                     l3163 3554  
                   l3155 3530                     l3147 350A                     l3139 34DA  
                   l3171 3570                     l3235 312C                     l3227 30AE  
                   l3219 3032                     l3091 2104                     l3083 20C0  
                   l3075 2072                     l3067 202A                     l3059 1FA0  
                   l3243 39F0                     l3251 2F42                     l3323 31C8  
                   l3315 3136                     l2611 3338                     l3307 343E  
                   l3411 089E                     l3403 0856                     l4045 2920  
                   l4037 28DC                     l4029 28AA                     l3157 3536  
                   l3149 3510                     l3181 35A4                     l3173 3578  
                   l3237 3132                     l3229 30BC                     l3093 212E  
                   l3077 2080                     l3069 2048                     l3245 3A00  
                   l2701 15EC                     l2621 148A                     l3261 2F92  
                   l3333 322A                     l3317 3156                     l2613 3356  
                   l2605 330A                     l3309 346C                     l3341 37B8  
                   l3501 0C42                     l3421 08D6                     l3413 08AC  
                   l3405 087A                     l4039 2900                     l4143 29EE  
                   l3159 353C                     l3191 35E0                     l3183 35AC  
                   l3175 357C                     l3167 355E                     l3087 20EA  
                   l3095 2132                     l3079 2084                     l2711 163E  
                   l2703 1608                     l2631 14CA                     l2623 1498  
                   l3271 2FBC                     l3263 2F96                     l3255 2F56  
                   l3319 3194                     l3327 31D4                     l3351 256C  
                   l2615 338C                     l2607 331C                     l3511 0CA8  
                   l3503 0C5E                     l3431 093C                     l3423 08DA  
                   l3415 08BE                     l3407 0884                     l4145 36FA  
                   l3193 35E6                     l3185 35B4                     l3177 358A  
                   l3169 3562                     l3097 214C                     l3089 20F6  
                   l2801 18DC                     l2721 168A                     l2713 164C  
                   l2705 1618                     l2641 14FC                     l2633 14CC  
                   l2625 149A                     l3281 2FE4                     l3273 2FC6  
                   l3265 2FA4                     l3257 2F80                     l3249 2F2C  
                   l3329 31E6                     l3353 258C                     l2609 332E  
                   l3337 3818                     l3345 37EE                     l3601 1162  
                   l3521 0CF0                     l3513 0CBA                     l3505 0C94  
                   l3433 094E                     l3417 08CA                     l3425 08E0  
                   l3409 088C                     l4081 2E3E                     l3187 35C2  
                   l3195 35EC                     l3179 3592                     l3099 2160  
                   l2811 1916                     l2803 18FC                     l2731 16CA  
                   l2715 164E                     l2707 162E                     l2651 1524  
                   l2643 14FE                     l2627 14AA                     l2635 14D4  
                   l2619 147E                     l3283 2FF0                     l3275 2FD0  
                   l3259 2F82                     l3371 2734                     l3363 2674  
                   l3355 25E2                     l3339 3828                     l3347 3800  
                   l3611 1194                     l3603 1172                     l3531 0D38  
                   l3523 0CFE                     l3515 0CCC                     l3507 0C9C  
                   l3451 0A22                     l3435 096A                     l3427 0906  
                   l3443 09B4                     l3419 08D2                     l4091 2E6A  
                   l4083 2E40                     l4075 2E22                     l3197 35FC  
                   l3189 35D8                     l2901 22F4                     l2813 191C  
                   l2805 1900                     l2741 16F4                     l2733 16D6  
                   l2725 169E                     l2717 1658                     l2709 163A  
                   l2661 155E                     l2653 1534                     l2645 1504  
                   l2637 14E4                     l2629 14BA                     l3285 3000  
                   l3373 275C                     l3365 26B0                     l3357 25F6  
                   l2821 395E                     l3293 33D4                     l3621 123C  
                   l3613 11A6                     l3605 1176                     l3541 0E4C  
                   l3533 0D48                     l3525 0D16                     l3517 0CDA  
                   l3509 0CA0                     l3453 0A3E                     l3445 09DA  
                   l3461 0A5A                     l3437 0982                     l4093 2E82  
                   l4085 2E44                     l4077 2E24                     l3391 3910  
                   l3383 38C6                     l3711 296A                     l3703 2932  
                   l3199 3604                     l2911 2332                     l2903 22F4  
                   l2815 192A                     l2807 190E                     l2751 1766  
                   l2735 16DA                     l2727 16AE                     l2719 167A  
                   l2743 16FA                     l2671 158A                     l2663 1570  
                   l2655 1544                     l2647 1512                     l2639 14EA  
                   l3287 3010                     l3375 276C                     l3359 2604  
                   l3367 26E4                     l2823 396A                     l2831 3A56  
                   l3295 33E4                     l3631 1294                     l3623 1244  
                   l3615 11AA                     l3607 117C                     l3551 0EEC  
                   l3535 0D5C                     l3543 0E52                     l3527 0D28  
                   l3519 0CDE                     l3471 0AE4                     l3463 0A74  
                   l3439 098C                     l4095 2E8E                     l4087 2E4A  
                   l4079 2E2C                     l3385 38CA                     l3721 29C0  
                   l3713 29A0                     l3705 2946                     l2921 237E  
                   l2913 2342                     l2817 192C                     l2809 1914  
                   l2761 17C0                     l2745 1720                     l2753 1776  
                   l2737 16E8                     l2729 16BC                     l2681 159E  
                   l2673 158E                     l2665 157E                     l2657 1546  
                   l2649 1514                     l3289 3020                     l3369 2720  
                   l2825 397C                     l2833 3A5A                     l3297 33F8  
                   l3641 12D8                     l3633 12A2                     l3609 1182  
                   l3617 11B0                     l3625 1248                     l3561 0FC8  
                   l3553 0F1E                     l3545 0E70                     l3537 0DC0  
                   l3529 0D30                     l3481 0BBC                     l3473 0B3E  
                   l3449 0A10                     l3801 1B1A                     l4097 2EE8  
                   l4089 2E50                     l2843 3A80                     l3379 3A12  
                   l3387 38DE                     l3731 2A3A                     l3723 29C8  
                   l3715 29A4                     l3707 294A                     l2931 23C8  
                   l2923 238C                     l2915 2352                     l2907 2308  
                   l2851 21DE                     l2771 17F0                     l2763 17CA  
                   l2755 179C                     l2747 1754                     l2739 16EA  
                   l2691 15B2                     l2683 15A2                     l2675 1592  
                   l2667 1582                     l2659 154E                     l2827 3980  
                   l2835 3A72                     l3299 3406                     l3651 130E  
                   l3643 12E0                     l3635 12B2                     l3627 1266  
                   l3619 1208                     l3571 102A                     l3563 0FCE  
                   l3555 0F2E                     l3547 0EA4                     l3539 0E18  
                   l3491 0C06                     l3483 0BC0                     l3475 0B72  
                   l3467 0AAA                     l3395 0826                     l3811 1BB2  
                   l3803 1B4C                     l4099 2F0E                     l2845 3A9C  
                   l3389 390C                     l3725 29D0                     l3709 294E  
                   l2941 240E                     l2933 23DA                     l2925 2398  
                   l2917 235A                     l2909 2322                     l2861 221E  
                   l2853 21EC                     l2781 1818                     l2773 17F4  
                   l2765 17D8                     l2757 17AC                     l2749 1756  
                   l2693 15B6                     l2685 15A6                     l2677 1596  
                   l2669 1586                     l2829 3A4A                     l3661 136A  
                   l3653 1316                     l3645 12F0                     l3637 12B6  
                   l3629 1282                     l3581 10E2                     l3573 103E  
                   l3565 1002                     l3557 0F3E                     l3549 0ED6  
                   l3485 0BD2                     l3493 0C1E                     l3477 0B7A  
                   l3469 0ADE                     l3397 0830                     l3821 1C7A  
                   l3805 1B5E                     l3901 3756                     ?_pad 0011  
                   l3911 2D2A                     l3735 2A78                     l3727 2A04  
                   l3719 29AA                     l2951 246E                     l2935 23F0  
                   l2943 2420                     l2927 23B6                     l2919 236A  
                   l2871 2244                     l2863 2220                     l2855 21EE  
                   l2791 1872                     l2783 1826                     l2775 1804  
                   l2767 17DA                     l2695 15BA                     l2687 15AA  
                   l2679 159A                     l2839 39A2                     l3671 13AA  
                   l3663 1372                     l3655 1322                     l3647 12F8  
                   l3639 12C6                     l3591 112E                     l3583 10F4  
                   l3575 104A                     l3567 1016                     l3559 0F72  
                   l3487 0BE4                     l3479 0BAC                     l3399 0840  
                   l3751 326A                     l3823 1C8C                     l3831 1D04  
                   l3807 1B74                     l3815 1BDE                     l3903 375E  
                   l3921 2DA2                     l3913 2D7E                     l3737 2A8A  
                   l2961 24DC                     l2945 242E                     l2937 23F6  
                   l2929 23B8                     l2881 2284                     l2873 2252  
                   l2857 21FE                     l2865 2228                     l2849 21D2  
                   l2793 1880                     l2785 183C                     l2769 17E8  
                   l2777 1806                     l2689 15AE                     l2697 15BE  
                   l3681 13E6                     l3673 13BC                     l3657 1328  
                   l3665 1378                     l3649 1306                     l3593 113C  
                   l3585 1106                     l3577 106E                     l3569 101A  
                   l3489 0BEC                     l3761 32E6                     l3753 3278  
                   l3745 3234                     l3833 1D28                     l3841 1D56  
                   l3825 1CC0                     l3817 1C0C                     l3809 1B82  
                   l3905 376C                     l3931 2DAC                     l3923 2DA4  
                   l3739 2A9C                     l2971 2546                     l2955 2498  
                   l2963 24E0                     l2947 2432                     l2939 2400  
                   l2891 22C4                     l2883 2286                     l2875 2254  
                   l2867 2238                     l2859 220E                     l2795 18BA  
                   l2779 1814                     l2699 15C2                     l3691 143E  
                   l3683 13EC                     l3675 13C8                     l3667 138A  
                   l3659 134E                     l3595 114C                     l3587 1114  
                   l3579 10D2                     l3499 0C30                     l3755 3290  
                   l3747 325E                     l3843 1D64                     l3835 1D36  
                   l3771 1982                     l3907 3792                     l3861 2C76  
                   l3941 2DF2                     l3933 2DBC                     l3925 2DA6  
                   l3909 2D12                     l2973 254A                     l2965 24FA  
                   l2957 24A4                     l2949 2440                     l2893 22CC  
                   l2877 2264                     l2885 228E                     l2869 223E  
                   l2789 1866                     l2797 18BC                     l3693 1446  
                   l3677 13D0                     l3669 13A4                     l3597 1150  
                   l3589 111C                     l3757 32AC                     l3837 1D4A  
                   l3781 19E4                     l3773 1986                     l3765 193E  
                   l3871 2CF8                     l3863 2C78                     l3855 2BF0  
                   l3951 2E08                     l3943 2DF4                     l3935 2DE6  
                   l3927 2DA8                     l3919 2D9A                     l2975 2558  
                   l2967 2510                     l2959 24B2                     l2895 22D0  
                   l2887 229E                     l2879 2274                     l2991 1DC2  
                   l2799 18CC                     l3695 1456                     l3687 1420  
                   l3679 13E0                     l3599 1156                     l3759 32BE  
                   l3791 1A94                     l3783 1A1E                     l3775 19AA  
                   l3767 1962                     l3847 1D70                     l3873 2D00  
                   l3865 2C80                     l3857 2BF4                     l3961 2E1A  
                   l3953 2E0E                     l3945 2DF6                     l3937 2DEE  
                   l3929 2DAA                     l3881 2B42                     l2977 255E  
                   l2969 252A                     l2889 22B4                     l2993 1DC4  
                   l3697 145C                     l3689 1432                     l3849 1D94  
                   l3785 1A3E                     l3777 19B2                     l3793 1AA6  
                   l3769 1970                     l3875 2D02                     l3867 2CEE  
                   l3859 2C6E                     l3963 2E1A                     l3955 2E0E  
                   l3947 2DF8                     l3939 2DF0                     l3891 2BCA  
                   l3883 2B4A                     l3971 36D2                     l2979 2560  
                   l2899 22E4                     l2995 1DD4                     l2987 1DA8  
                   l3795 1AC8                     l3787 1A4C                     l3779 19C0  
                   l3869 2CF6                     l3957 2E14                     l3949 2E08  
                   l3893 2BCC                     l3885 2B4C                     l3877 2AC4  
                   l3981 372A                     l3973 36DC                     l3965 36BA  
                   l2997 1DE4                     l2989 1DB4                     l3797 1AD8  
                   l3959 2E14                     l3895 2BD4                     l3887 2B54  
                   l3879 2AC8                     l3983 3738                     l3967 36BE  
                   l2999 1DF4                     l3799 1B0A                     l3991 3874  
                   l3897 2BD6                     l3889 2BC2                     l3985 373C  
                   l3969 36C8                     l3977 36E6                     l3993 3886  
                   l3899 2BDE                     l3979 3720                     l3995 388E  
                   l3997 3896                     l3999 38B2                     STR_1 0801  
                   STR_2 0812                     STR_3 081A                     STR_6 0816  
                   STR_7 081E                     u3000 2264                     u3001 2260  
                   u3010 2274                     u3011 2270                     u3100 242E  
                   u3020 22B4                     u3101 242A                     u3021 22B0  
                   u3110 2440                     u3030 22F4                     u3111 243C  
                   u3031 22F0                     u3120 246E                     u3040 236A  
                   u3200 1DD4                     u4000 0906                     u3121 246A  
                   u3041 2366                     u3201 1DD0                     u4001 0902  
                   u3130 2484                     u3050 238C                     u3210 1DE4  
                   u4010 0934                     u3131 2480                     u3051 2388  
                   u3211 1DE0                     u4011 092E                     u3140 2498  
                   u3060 23B6                     u3300 2092                     u3220 1E24  
                   u2500 332E                     u4100 0BAC                     u4020 0936  
                   u3141 2494                     u3061 23B2                     u3301 208E  
                   u3221 1E20                     u2501 332A                     u4101 0BA8  
                   u3150 24B2                     u3070 23DA                     u3310 20C0  
                   u3230 1E36                     u2510 3356                     u4110 0BD2  
                   u4030 094E                     u3151 24AE                     u3071 23D6  
                   u3311 20BC                     u3231 1E32                     u2511 3352  
                   u4111 0BCE                     u4031 094A                     u3400 34EC  
                   u3160 24FA                     u3080 23F0                     u3320 20D6  
                   u3240 1E46                     u2600 1570                     u2520 338C  
                   u4200 0CDA                     u4120 0BE4                     u4040 09DA  
                   u3401 34E8                     u3161 24F6                     u3081 23EC  
                   u3321 20D2                     u3241 1E42                     u2601 156C  
                   u2521 3388                     u4201 0CD6                     u4121 0BE0  
                   u4041 09D6                     u3410 350A                     u3170 252A  
                   u3090 240E                     u3330 20EA                     u3250 1E7C  
                   u2610 157E                     u2530 1498                     u4210 0CF0  
                   u4130 0C06                     u4050 0A08                     u3411 3506  
                   u3171 2526                     u3091 240A                     u3331 20E6  
                   u3251 1E78                     u2611 157A                     u2531 1494  
                   u4211 0CEC                     u4131 0C02                     u4051 0A02  
                   u3420 3526                     u3180 2558                     u3500 363C  
                   u3340 2104                     u3260 1E8C                     u2700 16BC  
                   u2620 15EC                     u2540 14AA                     u4300 103E  
                   u4220 0CFE                     u4140 0C2C                     u4060 0A0A  
                   u3421 3522                     u3181 2554                     u3501 3638  
                   u3341 2100                     u3261 1E88                     u2701 16B8  
                   u2621 15E8                     u2541 14A6                     u4301 103A  
                   u4221 0CFA                     u4141 0C28                     u3430 354C  
                   u3510 367A                     u3350 214C                     u3270 2006  
                   u3190 1DC2                     u2710 16CA                     u2630 1604  
                   u2550 14BA                     u4310 10E2                     u4230 0D28  
                   u4150 0C42                     u4070 0A22                     u5007 2BC4  
                   u3431 3548                     u3511 3676                     u3351 2148  
                   u3191 1DBE                     u2711 16C6                     u2631 15FE  
                   u2551 14B6                     u4311 10DE                     u4231 0D24  
                   u4151 0C3E                     u4071 0A1E                     u3440 3570  
                   u3520 36AE                     u3360 217A                     u3280 2060  
                   u2800 1814                     u2720 16E8                     u2640 1606  
                   u2560 14FC                     u3600 2F76                     u4400 1294  
                   u4320 10F4                     u4240 0E70                     u4160 0C5E  
                   u4080 0AA6                     u5017 2BCE                     u3441 356C  
                   u3521 36AA                     u3361 2176                     u3281 205C  
                   u2801 1810                     u2721 16E4                     u2561 14F8  
                   u4401 1290                     u4321 10F0                     u4241 0E6C  
                   u4161 0C5A                     u4081 0AA2                     u3450 358A  
                   u3530 3060                     u3370 21B4                     u3290 2080  
                   u2810 1826                     u2730 1720                     u2650 162E  
                   u2570 1512                     u3610 2FA4                     u2490 331C  
                   u4410 12A2                     u4330 1106                     u4250 0ED6  
                   u4170 0C94                     u4090 0B3A                     u5107 2D9C  
                   u5027 2BD8                     u3451 3586                     u3531 305C  
                   u3371 21B0                     u3291 207C                     u3275 1FFC  
                   u2811 1822                     u2731 171C                     u2651 162A  
                   u2571 150E                     u3611 2FA0                     u2491 3318  
                   u4411 129E                     u4331 1102                     u4251 0ED2  
                   u4171 0C90                     u4091 0B36                     u4500 296A  
                   u3380 34AC                     u3460 35A4                     u3540 309E  
                   u2900 190E                     u2820 183C                     u2740 1766  
                   u2660 164C                     u2580 1524                     u3620 2FB8  
                   u3700 3176                     u4420 12D8                     u4340 1114  
                   u4260 0F1E                     u4180 0CBA                     u5117 2DB4  
                   u5037 2BE4                     u4501 2966                     u3381 34A8  
                   u3461 35A0                     u3541 309A                     u2901 190A  
                   u2821 1838                     u2741 1762                     u2661 1648  
                   u2581 1520                     u3621 2FB4                     u3605 2F6C  
                   u4421 12D4                     u4341 1110                     u4261 0F1A  
                   u4181 0CB6                     u4510 29A0                     u3390 34C6  
                   u3470 35C2                     u3550 30BC                     u2910 192A  
                   u2830 1852                     u2750 179C                     u2670 166C  
                   u2590 1534                     u3630 2FE0                     u3710 3194  
                   u4430 1306                     u4350 112E                     u4270 0F2E  
                   u4190 0CCC                     u5127 2DE8                     u5047 2D30  
                   u4511 299C                     u3391 34C2                     u3471 35BE  
                   u3551 30B8                     u2911 1926                     u2831 184E  
                   u2751 1798                     u2671 1668                     u2591 1530  
                   u3631 2FDC                     u3711 3190                     u4431 1302  
                   u4351 112A                     u4271 0F2A                     u4191 0CC8  
                   u4520 29BC                     u3480 35D8                     u3560 30DC  
                   u2840 1866                     u2760 17AC                     u2680 167A  
                   u3640 3000                     u3720 31BC                     u2920 39A0  
                   u3800 37EA                     u4440 138A                     u4360 113C  
                   u4280 0FC8                     u4600 32BE                     u5137 2E00  
                   u5057 2D3E                     u4521 29B8                     u3481 35D4  
                   u3561 30D8                     u2841 1862                     u2761 17A8  
                   u2681 1676                     u3641 2FFC                     u3721 31B8  
                   u3705 316C                     u2921 399C                     u4441 1386  
                   u4361 1138                     u4281 0FC4                     u4601 32BA  
                   u4530 2A72                     u3490 35FC                     u3570 312C  
                   u2850 1880                     u2770 17D8                     u2690 168A  
                   u3650 3010                     u3730 31E6                     u2930 3A72  
                   u3810 3800                     u4450 13A4                     u4370 1194  
                   u4290 1016                     u4610 32E6                     u5147 2C70  
                   u5067 2D4C                     u4531 2A6C                     u3491 35F8  
                   u3571 3128                     u2851 187C                     u2771 17D4  
                   u2691 1686                     u3651 300C                     u3731 31E2  
                   u2931 3A6E                     u3811 37FC                     u4451 13A0  
                   u4371 1190                     u4291 1012                     u4611 32E2  
                   u4540 2A74                     u3580 39F0                     u2860 18BA  
                   u2780 17E8                     u3900 2720                     u3820 25B4  
                   u3660 33E4                     u2940 39D2                     u4460 13BC  
                   u4380 1266                     u4700 1B5E                     u4620 1962  
                   u5157 2C7A                     u5077 2D5A                     u3581 39EC  
                   u2861 18B6                     u2781 17E4                     u3901 271C  
                   u3661 33E0                     u2941 39CC                     u4461 13B8  
                   u4381 1262                     u4701 1B5A                     u4621 195E  
                   u4550 2A8A                     u2870 18CC                     u2790 1804  
                   u3590 2F42                     u3750 3220                     u3910 275C  
                   u3830 25E2                     u3670 3406                     u2950 39D4  
                   u4470 141A                     u4390 1282                     u4710 1C0C  
                   u4630 19AA                     u5167 2CF0                     u5087 2D68  
                   u4551 2A86                     u2871 18C8                     u2791 1800  
                   u3591 2F3E                     u3751 321A                     u3911 2758  
                   u3831 25DE                     u3671 3402                     u4471 1414  
                   u4391 127E                     u4711 1C08                     u4631 19A6  
                   u3920 3A42                     u4560 2A9C                     u2960 21EC  
                   u2880 18DC                     u3760 3222                     u3840 2604  
                   u3680 345C                     u4480 141C                     u4720 1C72  
                   u4640 19E4                     u5177 2CFA                     u5097 2D76  
                   u3921 3A3C                     u4561 2A98                     u2961 21E8  
                   u2881 18D8                     u3745 31F8                     u3841 2600  
                   u3825 25AA                     u3681 3458                     u4721 1C6C  
                   u4641 19E0                     u3930 3A44                     u2970 21FE  
                   u2890 18FC                     u3690 346C                     u3770 3860  
                   u4490 1432                     u4570 325E                     u4730 1C74  
                   u4650 1A8C                     u5187 2D08                     u2971 21FA  
                   u2891 18F8                     u3691 3468                     u4491 142E  
                   u4571 325A                     u4651 1A86                     u4900 28B8  
                   u3940 38DE                     u2980 220E                     u3860 2670  
                   u3780 3872                     u4580 3290                     u4740 1C8C  
                   u4660 1A8E                     u4820 37AE                     u4805 2AE6  
                   u4901 28B4                     u3941 38DA                     u2981 220A  
                   u3861 266C                     u3781 386E                     u4581 328C  
                   u4741 1C88                     u4821 37AA                     u4830 2DCE  
                   u4910 28C8                     u3950 390C                     u2990 2252  
                   u3870 2694                     u3790 37E8                     u4590 32AC  
                   u4750 1D28                     u4670 1AA6                     u4831 2DCA  
                   u4815 2B08                     u4911 28C4                     u3951 3908  
                   u2991 224E                     u3855 2618                     u3791 37E2  
                   u4591 32A8                     u4751 1D24                     u4671 1AA2  
                   u4840 3754                     u4920 28D6                     u3880 26B0  
                   u3856 2622                     u3960 084E                     u4680 1AD8  
                   u4841 3750                     u4921 28D2                     u3881 26AC  
                   u3857 2632                     u3777 3856                     u3961 084A  
                   u4681 1AD4                     u4930 2910                     u4850 2790  
                   u3890 2704                     u3970 089E                     u4690 1B1A  
                   u4931 290C                     u4851 278C                     u3875 268A  
                   u3971 089A                     u4691 1B16                     u4940 291E  
                   u4860 279E                     u3980 08AC                     u4765 2BFC  
                   u4941 291A                     u4861 279A                     u3981 08A8  
                   u4870 27FA                     u3990 08BE                     u4775 2C12  
                   u4871 27F6                     u3895 26FA                     u3991 08BA  
                   u4880 2850                     u4960 2E7A                     u4785 2C34  
                   u4881 284C                     u4961 2E76                     u4890 289A  
                   u4795 2AD0                     u4891 2896                     u4977 2E5C  
                   u4987 2B44                     u4997 2B4E                     _dbuf 0100  
                   _atoi 2932                     _main 2E22                     _prec 00C8  
                   _nout 00C4                     pad@i 0018                     pad@p 0015  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001A  
                   fsr2l 000FD9            ___fpclassifyf 3136                     prodh 000FF4  
                   prodl 000FF3                     start 0000          ___fldiv@new_exp 0026  
        __end_of_Lcd_Cmd 2D12             _tolower$1010 000D             ___param_bank 000000  
             _Lcd_Chr_CP 2AC2                    ??_pad 0017           Lcd_Out2@buffer 0005  
          ___fltol@sign1 0009                    ?_atoi 0008          __end_of___fladd 193E  
                  ?_main 0001          __end_of___fldiv 256C          __end_of___awdiv 355E  
        __end_of___flneg 3A12                    STR_10 0822                    STR_12 0822  
        __end_of___awmod 360E          __end_of___flmul 21D2          __end_of___flsub 395E  
        __end_of___fltol 3032          ___awdiv@divisor 0003          ___awdiv@counter 0005  
           vfpfcnvrt@fmt 0050                    _PORTC 000F82                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _flags 00CA  
                  _fputc 330A                    _fputs 395E          __end_of_isdigit 3A4A  
                  atoi@n 0015                    pad@fp 0011                    atoi@s 0008  
                  _width 00C6                    _putch 3AC8          __end_of_isspace 3918  
        __end_of_isupper 39DA                    tablat 000FF5                    status 000FD8  
        __end_of_sprintf 38C6           ?___fpclassifyf 0001          __end_of_tolower 3818  
        __end_of_strncmp 330A         __end_of_Lcd_Init 2E22         __end_of_Lcd_Out2 3756  
        __initialization 3AA6             __end_of_atoi 2AC2             __end_of_main 2F2C  
                 ??_atoi 000A                   ??_main 00B6            __activetblptr 000002  
                 ?_fputc 0001                   ?_fputs 000A                   _ADRESH 000FC4  
                 _ADRESL 000FC3         ___awdiv@dividend 0001                   ?_putch 0001  
              ??_Lcd_Cmd 0001         __end_of___xxtofl 2932             vfprintf@cfmt 005E  
                 ___flge 3032                   ___fleq 360E              ?_Lcd_Chr_CP 0001  
              ??___fladd 0009                   ___wmul 3A80                ??___fldiv 001D  
              ??___awdiv 0005                ??___flneg 0005                ??___awmod 0005  
              ??___flmul 0009                ??___flsub 0022                ??___fltol 0005  
                 _efgtoa 0826                   _floorf 256C                   clear_0 3AAC  
                 clear_1 3AB8         ___awdiv@quotient 0007          ___awmod@divisor 0003  
        ___awmod@counter 0005                   pad@buf 0013                   _strcpy 3818  
                 _strlen 3A4A                   fputc@c 0001                   fputs@c 000E  
                 fputs@i 000F                   fputs@s 000A                ??_isdigit 0003  
        ___fpclassifyf@e 0009          ___fpclassifyf@u 000B          ___fpclassifyf@x 0001  
           __mediumconst 0000                ??_isspace 0003                   tblptrh 000FF7  
              ??_isupper 0003                   tblptrl 000FF6                   tblptru 000FF8  
                 putch@c 0001         __end_of_vfprintf 37B8                ??_sprintf 0060  
              ??_tolower 0009                ??_strncmp 0007               ___flge@ff1 001A  
             ___flge@ff2 001E          ??___fpclassifyf 0005             ___xxtofl@arg 0011  
           ___xxtofl@exp 0010             ___xxtofl@val 0007               ___fleq@ff1 0001  
             ___fleq@ff2 0005               __accesstop 0060  __end_of__initialization 3ABE  
             ___flneg@f1 0001            ___rparam_used 000001               ___fltol@f1 0001  
         __pcstackCOMRAM 0001            __end_of_fputc 33D4            __end_of_fputs 39A2  
          __end_of_putch 3ACA                ?_Lcd_Init 0001                ?_Lcd_Out2 0004  
                ??_fputc 0005                  ??_fputs 000E      __size_of_Lcd_Chr_CP 012C  
                ??_putch 0001               __pbssBANK0 00B8               __pbssBANK1 0100  
             _efgtoa$851 0060               _efgtoa$852 0062               _efgtoa$861 0066  
             _efgtoa$862 0068               _efgtoa$863 006A               _efgtoa$857 0064  
                ?___flge 001A                  ?___fleq 0001                  ?___wmul 0001  
                ?_efgtoa 0042                  ?_floorf 002E                  ?_strcpy 0001  
                ?_strlen 0001                ?___xxtofl 0007       __size_of_vfpfcnvrt 046A  
             ??_Lcd_Init 0004               ??_Lcd_Out2 0007                  _Lcd_Cmd 2BEE  
                __Hparam 0000                  __Lparam 0000          __size_of___flge 0104  
        __size_of___fleq 00AA                  ___fladd 147E                  ___fldiv 21D2  
                ___awdiv 349A                  ___flneg 39DA                  ___awmod 355E  
                ___flmul 1DA8                  ___flsub 3918                  ___fltol 2F2C  
        __size_of___wmul 0026                ?_vfprintf 0058             __psmallconst 0800  
        __size_of_efgtoa 0C58          __size_of_floorf 0212                  __pcinit 3AA6  
                __ramtop 0800                  __ptext0 2E22                  __ptext1 3874  
                __ptext2 3756                  __ptext3 193E                  __ptext4 3234  
                __ptext5 0826                  __ptext6 37B8                  __ptext7 39A2  
                __ptext8 3818                  __ptext9 33D4          __size_of_strcpy 005C  
        __size_of_strlen 0036             __size_of_pad 00C6                  _isdigit 3A12  
             ??___xxtofl 000B         ___awmod@dividend 0001                  _isspace 38C6  
                _isupper 39A2                  efgtoa@c 0048                  efgtoa@d 0078  
                efgtoa@e 0090                  efgtoa@f 0044                  efgtoa@g 008C  
                efgtoa@h 0082                  efgtoa@i 008A                  efgtoa@l 0086  
                efgtoa@m 0072                  efgtoa@n 0092                  efgtoa@p 007C  
                efgtoa@t 006C                  efgtoa@u 0094                  efgtoa@w 007E  
                _tension 00C0                  atoi@neg 000E                  _sprintf 3874  
                _tolower 37B8                  _strncmp 3234     end_of_initialization 3ABE  
                floorf@e 003C                  floorf@m 0038                  floorf@u 003E  
                floorf@x 002E                  fputc@fp 0003            __Lmediumconst 0000  
                fputs@fp 000C        __end_of_vfpfcnvrt 1DA8               efgtoa@mode 0081  
             efgtoa@sign 007A             ??_Lcd_Chr_CP 0001                Lcd_Out2@x 0004  
              Lcd_Out2@y 0009                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_vfprintf 005E  
                strcpy@d 0009                  strlen@a 0003                  strcpy@s 0007  
                strlen@s 0001                _PORTBbits 000F81              ___fladd@grs 0010  
          ___xxtofl@sign 000F                _TRISBbits 000F93              ___fldiv@grs 0028  
            ___fldiv@rem 0021       __end_of_Lcd_Chr_CP 2BEE              ___flmul@grs 000E  
         __end_of___flge 3136           __end_of___fleq 36B8              vfpfcnvrt@ap 0052  
            vfpfcnvrt@ct 00A0              vfpfcnvrt@fp 004E           __end_of___wmul 3AA6  
         __end_of_efgtoa 147E           __end_of_floorf 277E               floorf@F527 00B8  
         __end_of_strcpy 3874           __end_of_strlen 3A80      start_initialization 3AA6  
            __end_of_pad 349A        __size_of_Lcd_Init 0110        __size_of_Lcd_Out2 009E  
  __end_of___fpclassifyf 3234              vfprintf@fmt 005A                 ??___flge 0022  
               ??___fleq 0009                 ??___wmul 0005                 ??_efgtoa 0049  
               ??_floorf 0032                 ??_strcpy 0005                 ??_strlen 0003  
              ___fladd@a 0005                ___fladd@b 0001                ___fldiv@a 0019  
              ___fldiv@b 0015                ___flmul@a 0005                ___flmul@b 0001  
              ___flsub@a 001E                ___flsub@b 001A            __pcstackBANK0 0060  
      __size_of___xxtofl 01B4                 ?_Lcd_Cmd 0001                 ?___fladd 0001  
               ?___fldiv 0015                 ?___awdiv 0001                 ?___flneg 0001  
               ?___awmod 0001                 ?___flmul 0001                 ?___flsub 001A  
               ?___fltol 0001        __size_of_vfprintf 0062              __smallconst 0800  
               ?_isdigit 0001                 ?_isspace 0001                 ?_isupper 0001  
               ?_sprintf 00A4                 ?_tolower 0007           __size_of_fputc 00CA  
         __size_of_fputs 0044                 ?_strncmp 0001           __size_of_putch 0002  
         ___wmul@product 0005                _value_adc 00CC                _vfpfcnvrt 193E  
           Lcd_Init@data 0005               _ADCON0bits 000FC2               _ADCON2bits 000FC0  
      ___wmul@multiplier 0001             Lcd_Out2@data 000A                 _Lcd_Init 2D12  
               _Lcd_Out2 36B8               vfpfcnvrt@c 00A3               vfpfcnvrt@f 009C  
       __size_of_Lcd_Cmd 0124                 __Hrparam 0000               vfprintf@ap 005C  
               __Lrparam 0000               vfprintf@fp 0058         __size_of___fladd 04C0  
       __size_of___fldiv 039A         __size_of___awdiv 00C4         __size_of___flneg 0038  
       __size_of___awmod 00B0         __size_of___flmul 042A         __size_of___flsub 0046  
       __size_of___fltol 0106               ?_vfpfcnvrt 004E       ___fpclassifyf@F465 00BC  
             sprintf@fmt 00A6                 ___xxtofl 277E                 _atoi$915 0010  
               _atoi$916 0014                 _atoi$917 0012         __size_of_isdigit 0038  
         Lcd_Chr_CP@data 0003         __size_of_isspace 0052                 __ptext10 3A4A  
               __ptext11 395E                 __ptext20 1DA8                 __ptext12 330A  
               __ptext21 3032                 __ptext13 3AC8                 __ptext30 277E  
               __ptext22 360E                 __ptext14 256C                 __ptext31 36B8  
               __ptext23 21D2                 __ptext15 3136                 __ptext32 2AC2  
               __ptext24 355E                 __ptext16 2F2C                 __ptext33 2D12  
               __ptext25 349A                 __ptext17 3918                 __ptext34 2BEE  
               __ptext26 2932                 __ptext18 147E                 __ptext27 38C6  
               __ptext19 39DA                 __ptext28 3A12                 __ptext29 3A80  
       __size_of_isupper 0038         __size_of_sprintf 0052         __size_of_tolower 0060  
             strcpy@dest 0001         __size_of_strncmp 00D6              Lcd_Cmd@data 0003  
          __size_of_atoi 0190            __size_of_main 010A                 efgtoa@fp 0042  
               efgtoa@ne 0070                 efgtoa@pp 006E                 efgtoa@ou 0074  
               _vfprintf 3756              _isspace$946 0007                 isdigit@c 0001  
              sprintf@ap 00AE                 isspace@c 0001                strcpy@src 0003  
               isupper@c 0001                strncmp@_l 0001                strncmp@_r 0003  
            efgtoa@nmode 0080              ??_vfpfcnvrt 0054            _vfpfcnvrt$881 009A  
          _vfpfcnvrt$877 0098                 sprintf@f 00B0                 tolower@c 0007  
               sprintf@s 00A4   __size_of___fpclassifyf 00FE                 strncmp@l 0008  
               strncmp@n 0005                 strncmp@r 000A            ___fladd@signs 000D  
           ___fladd@aexp 000E             ___fladd@bexp 000F  
